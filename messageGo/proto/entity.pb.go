// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: entity.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MovementType int32

const (
	MovementType_MovementTypeUnknown MovementType = 0
	// 行走
	MovementType_MovementTypeWalk MovementType = 1
	// 奔跑
	MovementType_MovementTypeRun MovementType = 2
	// 保持现在的外观移动
	MovementType_MovementTypeIdle MovementType = 3
)

// Enum value maps for MovementType.
var (
	MovementType_name = map[int32]string{
		0: "MovementTypeUnknown",
		1: "MovementTypeWalk",
		2: "MovementTypeRun",
		3: "MovementTypeIdle",
	}
	MovementType_value = map[string]int32{
		"MovementTypeUnknown": 0,
		"MovementTypeWalk":    1,
		"MovementTypeRun":     2,
		"MovementTypeIdle":    3,
	}
)

func (x MovementType) Enum() *MovementType {
	p := new(MovementType)
	*p = x
	return p
}

func (x MovementType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MovementType) Descriptor() protoreflect.EnumDescriptor {
	return file_entity_proto_enumTypes[0].Descriptor()
}

func (MovementType) Type() protoreflect.EnumType {
	return &file_entity_proto_enumTypes[0]
}

func (x MovementType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MovementType.Descriptor instead.
func (MovementType) EnumDescriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{0}
}

type EntityId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type EntityType `protobuf:"varint,1,opt,name=type,proto3,enum=gameMessageCore.EntityType" json:"type,omitempty"`
	Id   int64      `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *EntityId) Reset() {
	*x = EntityId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityId) ProtoMessage() {}

func (x *EntityId) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityId.ProtoReflect.Descriptor instead.
func (*EntityId) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{0}
}

func (x *EntityId) GetType() EntityType {
	if x != nil {
		return x.Type
	}
	return EntityType_EntityTypeAll
}

func (x *EntityId) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type EntityLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 对象所在地图 id
	MapId int32 `protobuf:"varint,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	// 坐标
	Loc *Vector3 `protobuf:"bytes,2,opt,name=loc,proto3" json:"loc,omitempty"`
}

func (x *EntityLocation) Reset() {
	*x = EntityLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityLocation) ProtoMessage() {}

func (x *EntityLocation) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityLocation.ProtoReflect.Descriptor instead.
func (*EntityLocation) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{1}
}

func (x *EntityLocation) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *EntityLocation) GetLoc() *Vector3 {
	if x != nil {
		return x.Loc
	}
	return nil
}

type EntityWithLocation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId *EntityId `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	// Types that are assignable to Entity:
	//	*EntityWithLocation_Player
	//	*EntityWithLocation_Monster
	//	*EntityWithLocation_Build
	//	*EntityWithLocation_Npc
	//	*EntityWithLocation_Resource
	Entity isEntityWithLocation_Entity `protobuf_oneof:"entity"`
}

func (x *EntityWithLocation) Reset() {
	*x = EntityWithLocation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityWithLocation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityWithLocation) ProtoMessage() {}

func (x *EntityWithLocation) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityWithLocation.ProtoReflect.Descriptor instead.
func (*EntityWithLocation) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{2}
}

func (x *EntityWithLocation) GetTypeId() *EntityId {
	if x != nil {
		return x.TypeId
	}
	return nil
}

func (m *EntityWithLocation) GetEntity() isEntityWithLocation_Entity {
	if m != nil {
		return m.Entity
	}
	return nil
}

func (x *EntityWithLocation) GetPlayer() *Player {
	if x, ok := x.GetEntity().(*EntityWithLocation_Player); ok {
		return x.Player
	}
	return nil
}

func (x *EntityWithLocation) GetMonster() *Monster {
	if x, ok := x.GetEntity().(*EntityWithLocation_Monster); ok {
		return x.Monster
	}
	return nil
}

func (x *EntityWithLocation) GetBuild() *NftBuild {
	if x, ok := x.GetEntity().(*EntityWithLocation_Build); ok {
		return x.Build
	}
	return nil
}

func (x *EntityWithLocation) GetNpc() *Npc {
	if x, ok := x.GetEntity().(*EntityWithLocation_Npc); ok {
		return x.Npc
	}
	return nil
}

func (x *EntityWithLocation) GetResource() *Resource {
	if x, ok := x.GetEntity().(*EntityWithLocation_Resource); ok {
		return x.Resource
	}
	return nil
}

type isEntityWithLocation_Entity interface {
	isEntityWithLocation_Entity()
}

type EntityWithLocation_Player struct {
	Player *Player `protobuf:"bytes,10,opt,name=player,proto3,oneof"`
}

type EntityWithLocation_Monster struct {
	Monster *Monster `protobuf:"bytes,11,opt,name=monster,proto3,oneof"`
}

type EntityWithLocation_Build struct {
	Build *NftBuild `protobuf:"bytes,12,opt,name=build,proto3,oneof"`
}

type EntityWithLocation_Npc struct {
	Npc *Npc `protobuf:"bytes,13,opt,name=npc,proto3,oneof"`
}

type EntityWithLocation_Resource struct {
	Resource *Resource `protobuf:"bytes,14,opt,name=resource,proto3,oneof"`
}

func (*EntityWithLocation_Player) isEntityWithLocation_Entity() {}

func (*EntityWithLocation_Monster) isEntityWithLocation_Entity() {}

func (*EntityWithLocation_Build) isEntityWithLocation_Entity() {}

func (*EntityWithLocation_Npc) isEntityWithLocation_Entity() {}

func (*EntityWithLocation_Resource) isEntityWithLocation_Entity() {}

type DestructionElementData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//唯一ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	//下次恢复的时间戳
	RestoreStamp int64 `protobuf:"varint,2,opt,name=restore_stamp,json=restoreStamp,proto3" json:"restore_stamp,omitempty"`
}

func (x *DestructionElementData) Reset() {
	*x = DestructionElementData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DestructionElementData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DestructionElementData) ProtoMessage() {}

func (x *DestructionElementData) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DestructionElementData.ProtoReflect.Descriptor instead.
func (*DestructionElementData) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{3}
}

func (x *DestructionElementData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *DestructionElementData) GetRestoreStamp() int64 {
	if x != nil {
		return x.RestoreStamp
	}
	return 0
}

type Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseData *PlayerBaseData  `protobuf:"bytes,1,opt,name=base_data,json=baseData,proto3" json:"base_data,omitempty"`
	Profile  []*AttributeData `protobuf:"bytes,2,rep,name=profile,proto3" json:"profile,omitempty"` // 玩家属性
	Avatars  []*PlayerAvatar  `protobuf:"bytes,3,rep,name=avatars,proto3" json:"avatars,omitempty"` // 玩家 avatar
	Active   bool             `protobuf:"varint,4,opt,name=active,proto3" json:"active,omitempty"`
	MapId    int32            `protobuf:"varint,5,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	Position *Vector3         `protobuf:"bytes,6,opt,name=position,proto3" json:"position,omitempty"`
	Dir      *Vector3         `protobuf:"bytes,7,opt,name=dir,proto3" json:"dir,omitempty"`
	//实体cd数据
	EntityCd        *EntityCD `protobuf:"bytes,8,opt,name=entity_cd,json=entityCd,proto3" json:"entity_cd,omitempty"`
	SkillEffectData string    `protobuf:"bytes,9,opt,name=skillEffectData,proto3" json:"skillEffectData,omitempty"` //技能特效数据
}

func (x *Player) Reset() {
	*x = Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Player) ProtoMessage() {}

func (x *Player) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Player.ProtoReflect.Descriptor instead.
func (*Player) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{4}
}

func (x *Player) GetBaseData() *PlayerBaseData {
	if x != nil {
		return x.BaseData
	}
	return nil
}

func (x *Player) GetProfile() []*AttributeData {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Player) GetAvatars() []*PlayerAvatar {
	if x != nil {
		return x.Avatars
	}
	return nil
}

func (x *Player) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Player) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *Player) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Player) GetDir() *Vector3 {
	if x != nil {
		return x.Dir
	}
	return nil
}

func (x *Player) GetEntityCd() *EntityCD {
	if x != nil {
		return x.EntityCd
	}
	return nil
}

func (x *Player) GetSkillEffectData() string {
	if x != nil {
		return x.SkillEffectData
	}
	return ""
}

type Monster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

<<<<<<< HEAD
	Cid             int32          `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Id              int64          `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Active          bool           `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Profile         *EntityProfile `protobuf:"bytes,4,opt,name=profile,proto3" json:"profile,omitempty"`
	Position        *Vector3       `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	Dir             *Vector3       `protobuf:"bytes,6,opt,name=dir,proto3" json:"dir,omitempty"`                         // 方向（朝向）
	SkillEffectData string         `protobuf:"bytes,7,opt,name=skillEffectData,proto3" json:"skillEffectData,omitempty"` //技能特效数据
=======
	Cid      int32            `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Id       int64            `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Active   bool             `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Profile  []*AttributeData `protobuf:"bytes,4,rep,name=profile,proto3" json:"profile,omitempty"`
	Position *Vector3         `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	Dir      *Vector3         `protobuf:"bytes,6,opt,name=dir,proto3" json:"dir,omitempty"` // 方向（朝向）
>>>>>>> 99ac4eb (fix entity and item   attribute data)
}

func (x *Monster) Reset() {
	*x = Monster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Monster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Monster) ProtoMessage() {}

func (x *Monster) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Monster.ProtoReflect.Descriptor instead.
func (*Monster) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{5}
}

func (x *Monster) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Monster) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Monster) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Monster) GetProfile() []*AttributeData {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Monster) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Monster) GetDir() *Vector3 {
	if x != nil {
		return x.Dir
	}
	return nil
}

func (x *Monster) GetSkillEffectData() string {
	if x != nil {
		return x.SkillEffectData
	}
	return ""
}

type Npc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cid      int32            `protobuf:"varint,1,opt,name=cid,proto3" json:"cid,omitempty"`
	Id       int64            `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Active   bool             `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Profile  []*AttributeData `protobuf:"bytes,4,rep,name=profile,proto3" json:"profile,omitempty"`
	Position *Vector3         `protobuf:"bytes,5,opt,name=position,proto3" json:"position,omitempty"`
	Dir      *Vector3         `protobuf:"bytes,6,opt,name=dir,proto3" json:"dir,omitempty"` // 方向（朝向）
}

func (x *Npc) Reset() {
	*x = Npc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Npc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Npc) ProtoMessage() {}

func (x *Npc) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Npc.ProtoReflect.Descriptor instead.
func (*Npc) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{6}
}

func (x *Npc) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *Npc) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Npc) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Npc) GetProfile() []*AttributeData {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Npc) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Npc) GetDir() *Vector3 {
	if x != nil {
		return x.Dir
	}
	return nil
}

// 建造物
type NftBuild struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cid      int32    `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
	FromNft  string   `protobuf:"bytes,3,opt,name=fromNft,proto3" json:"fromNft,omitempty"`
	Owner    int64    `protobuf:"varint,4,opt,name=owner,proto3" json:"owner,omitempty"`
	LandIds  []int32  `protobuf:"varint,5,rep,packed,name=landIds,proto3" json:"landIds,omitempty"`
	Position *Vector3 `protobuf:"bytes,6,opt,name=position,proto3" json:"position,omitempty"`
	Dir      *Vector3 `protobuf:"bytes,7,opt,name=dir,proto3" json:"dir,omitempty"`
	// 电量过期时间 单位秒
	ElectricEnd int32 `protobuf:"varint,8,opt,name=electricEnd,proto3" json:"electricEnd,omitempty"`
	// 产出开始时间点.
	HarvestStartAt int32 `protobuf:"varint,9,opt,name=harvestStartAt,proto3" json:"harvestStartAt,omitempty"`
	// 可以收集的时间
	HarvestAt int32 `protobuf:"varint,10,opt,name=harvestAt,proto3" json:"harvestAt,omitempty"`
	// 可收获的物品数量统计(没电时转移到采集) 单位秒
	HarvestItemCount int32 `protobuf:"varint,11,opt,name=harvestItemCount,proto3" json:"harvestItemCount,omitempty"`
	// 采集开始时间点
	CollectionStartAt int32 `protobuf:"varint,12,opt,name=collectionStartAt,proto3" json:"collectionStartAt,omitempty"`
	// 下次可采集(偷取)的时间戳 单位秒
	CollectionAt int32 `protobuf:"varint,13,opt,name=collectionAt,proto3" json:"collectionAt,omitempty"`
	// 可采集(偷取)物品数量统计
	CollectionItemCount int32 `protobuf:"varint,14,opt,name=collectionItemCount,proto3" json:"collectionItemCount,omitempty"`
	// 电量不足时建造保护期开始时间
	LandPlacementPowerZeroCooldownStartAt int32 `protobuf:"varint,15,opt,name=landPlacementPowerZeroCooldownStartAt,proto3" json:"landPlacementPowerZeroCooldownStartAt,omitempty"`
	// 电量不足时建造保护期
	LandPlacementPowerZeroCooldownAt int32 `protobuf:"varint,16,opt,name=landPlacementPowerZeroCooldownAt,proto3" json:"landPlacementPowerZeroCooldownAt,omitempty"`
}

func (x *NftBuild) Reset() {
	*x = NftBuild{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NftBuild) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NftBuild) ProtoMessage() {}

func (x *NftBuild) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NftBuild.ProtoReflect.Descriptor instead.
func (*NftBuild) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{7}
}

func (x *NftBuild) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *NftBuild) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *NftBuild) GetFromNft() string {
	if x != nil {
		return x.FromNft
	}
	return ""
}

func (x *NftBuild) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

func (x *NftBuild) GetLandIds() []int32 {
	if x != nil {
		return x.LandIds
	}
	return nil
}

func (x *NftBuild) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *NftBuild) GetDir() *Vector3 {
	if x != nil {
		return x.Dir
	}
	return nil
}

func (x *NftBuild) GetElectricEnd() int32 {
	if x != nil {
		return x.ElectricEnd
	}
	return 0
}

func (x *NftBuild) GetHarvestStartAt() int32 {
	if x != nil {
		return x.HarvestStartAt
	}
	return 0
}

func (x *NftBuild) GetHarvestAt() int32 {
	if x != nil {
		return x.HarvestAt
	}
	return 0
}

func (x *NftBuild) GetHarvestItemCount() int32 {
	if x != nil {
		return x.HarvestItemCount
	}
	return 0
}

func (x *NftBuild) GetCollectionStartAt() int32 {
	if x != nil {
		return x.CollectionStartAt
	}
	return 0
}

func (x *NftBuild) GetCollectionAt() int32 {
	if x != nil {
		return x.CollectionAt
	}
	return 0
}

func (x *NftBuild) GetCollectionItemCount() int32 {
	if x != nil {
		return x.CollectionItemCount
	}
	return 0
}

func (x *NftBuild) GetLandPlacementPowerZeroCooldownStartAt() int32 {
	if x != nil {
		return x.LandPlacementPowerZeroCooldownStartAt
	}
	return 0
}

func (x *NftBuild) GetLandPlacementPowerZeroCooldownAt() int32 {
	if x != nil {
		return x.LandPlacementPowerZeroCooldownAt
	}
	return 0
}

type Resource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Active    bool               `protobuf:"varint,1,opt,name=active,proto3" json:"active,omitempty"`
	Position  *Vector3           `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	Dir       *Vector3           `protobuf:"bytes,3,opt,name=dir,proto3" json:"dir,omitempty"` // 方向（朝向）
	PointInfo *ResourcePointInfo `protobuf:"bytes,4,opt,name=pointInfo,proto3" json:"pointInfo,omitempty"`
}

func (x *Resource) Reset() {
	*x = Resource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{8}
}

func (x *Resource) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *Resource) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Resource) GetDir() *Vector3 {
	if x != nil {
		return x.Dir
	}
	return nil
}

func (x *Resource) GetPointInfo() *ResourcePointInfo {
	if x != nil {
		return x.PointInfo
	}
	return nil
}

type ResourcePointInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//资源点ID 在家园中时代表土地id
	Id  uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Cid int32  `protobuf:"varint,2,opt,name=cid,proto3" json:"cid,omitempty"`
}

func (x *ResourcePointInfo) Reset() {
	*x = ResourcePointInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourcePointInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourcePointInfo) ProtoMessage() {}

func (x *ResourcePointInfo) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourcePointInfo.ProtoReflect.Descriptor instead.
func (*ResourcePointInfo) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{9}
}

func (x *ResourcePointInfo) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ResourcePointInfo) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

/// ************************* move info ***************************************************
// 玩家 怪物 移动位置信息
type EntityMoveStep struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 目标点
	Location *EntityLocation `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	// 到达目标点的时间戳 ms
	Stamp int64 `protobuf:"varint,2,opt,name=stamp,proto3" json:"stamp,omitempty"`
}

func (x *EntityMoveStep) Reset() {
	*x = EntityMoveStep{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityMoveStep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityMoveStep) ProtoMessage() {}

func (x *EntityMoveStep) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityMoveStep.ProtoReflect.Descriptor instead.
func (*EntityMoveStep) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{10}
}

func (x *EntityMoveStep) GetLocation() *EntityLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EntityMoveStep) GetStamp() int64 {
	if x != nil {
		return x.Stamp
	}
	return 0
}

type EntityMovement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TypeId *EntityId `protobuf:"bytes,1,opt,name=type_id,json=typeId,proto3" json:"type_id,omitempty"`
	// 当前位置
	CurLocation *EntityMoveStep `protobuf:"bytes,2,opt,name=cur_location,json=curLocation,proto3" json:"cur_location,omitempty"`
	// 目标位置
	DestLocation *EntityMoveStep `protobuf:"bytes,3,opt,name=dest_location,json=destLocation,proto3" json:"dest_location,omitempty"`
	// 移动方式
	Type MovementType `protobuf:"varint,5,opt,name=type,proto3,enum=gameMessageCore.MovementType" json:"type,omitempty"`
	// 实体朝向(交互数据 = 实际数据 * 1000)
	Dir *Vector3 `protobuf:"bytes,6,opt,name=Dir,proto3" json:"Dir,omitempty"`
}

func (x *EntityMovement) Reset() {
	*x = EntityMovement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityMovement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityMovement) ProtoMessage() {}

func (x *EntityMovement) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityMovement.ProtoReflect.Descriptor instead.
func (*EntityMovement) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{11}
}

func (x *EntityMovement) GetTypeId() *EntityId {
	if x != nil {
		return x.TypeId
	}
	return nil
}

func (x *EntityMovement) GetCurLocation() *EntityMoveStep {
	if x != nil {
		return x.CurLocation
	}
	return nil
}

func (x *EntityMovement) GetDestLocation() *EntityMoveStep {
	if x != nil {
		return x.DestLocation
	}
	return nil
}

func (x *EntityMovement) GetType() MovementType {
	if x != nil {
		return x.Type
	}
	return MovementType_MovementTypeUnknown
}

func (x *EntityMovement) GetDir() *Vector3 {
	if x != nil {
		return x.Dir
	}
	return nil
}

type EntityCD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillCdList  []*EntitySkillCD  `protobuf:"bytes,1,rep,name=skill_cd_list,json=skillCdList,proto3" json:"skill_cd_list,omitempty"`    //技能cd列表
	ExtendCdList []*EntityExtendCD `protobuf:"bytes,2,rep,name=extend_cd_list,json=extendCdList,proto3" json:"extend_cd_list,omitempty"` //扩展cd列表
}

func (x *EntityCD) Reset() {
	*x = EntityCD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityCD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityCD) ProtoMessage() {}

func (x *EntityCD) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityCD.ProtoReflect.Descriptor instead.
func (*EntityCD) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{12}
}

func (x *EntityCD) GetSkillCdList() []*EntitySkillCD {
	if x != nil {
		return x.SkillCdList
	}
	return nil
}

func (x *EntityCD) GetExtendCdList() []*EntityExtendCD {
	if x != nil {
		return x.ExtendCdList
	}
	return nil
}

type EntitySkillCD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId int32 `protobuf:"varint,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"` //技能cd
	Time    int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`                      //到期时间
}

func (x *EntitySkillCD) Reset() {
	*x = EntitySkillCD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntitySkillCD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntitySkillCD) ProtoMessage() {}

func (x *EntitySkillCD) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntitySkillCD.ProtoReflect.Descriptor instead.
func (*EntitySkillCD) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{13}
}

func (x *EntitySkillCD) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *EntitySkillCD) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

type EntityExtendCD struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type int32 `protobuf:"varint,1,opt,name=type,proto3" json:"type,omitempty"` //扩展类型
	Time int64 `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"` //到期时间
}

func (x *EntityExtendCD) Reset() {
	*x = EntityExtendCD{}
	if protoimpl.UnsafeEnabled {
		mi := &file_entity_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EntityExtendCD) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EntityExtendCD) ProtoMessage() {}

func (x *EntityExtendCD) ProtoReflect() protoreflect.Message {
	mi := &file_entity_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EntityExtendCD.ProtoReflect.Descriptor instead.
func (*EntityExtendCD) Descriptor() ([]byte, []int) {
	return file_entity_proto_rawDescGZIP(), []int{14}
}

func (x *EntityExtendCD) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *EntityExtendCD) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

var File_entity_proto protoreflect.FileDescriptor

var file_entity_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x1a,
	0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4b, 0x0a, 0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64,
	0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0x53, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x03, 0x6c, 0x6f,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x33, 0x52, 0x03, 0x6c, 0x6f, 0x63, 0x22, 0xd1, 0x02, 0x0a, 0x12, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a,
	0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x06, 0x74, 0x79, 0x70, 0x65, 0x49,
	0x64, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x07, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x07, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x05, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x66, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x48, 0x00, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x28, 0x0a,
	0x03, 0x6e, 0x70, 0x63, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x70, 0x63,
	0x48, 0x00, 0x52, 0x03, 0x6e, 0x70, 0x63, 0x12, 0x37, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75,
	0x72, 0x63, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x08, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x42, 0x08, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x4d, 0x0a, 0x16, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x74, 0x6f, 0x72, 0x65, 0x5f,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x74, 0x6f, 0x72, 0x65, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xac, 0x03, 0x0a, 0x06, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x3c, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x37, 0x0a, 0x07,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x07, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x15, 0x0a,
	0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6d,
	0x61, 0x70, 0x49, 0x64, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33,
	0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x64, 0x69,
	0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x33, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x5f, 0x63, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69,
<<<<<<< HEAD
	0x74, 0x79, 0x43, 0x44, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x66,
	0x66, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x89, 0x02, 0x0a, 0x07, 0x4d, 0x6f, 0x6e,
	0x73, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x38,
	0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52,
	0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d,
=======
	0x74, 0x79, 0x43, 0x44, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x64, 0x22, 0xdf,
	0x01, 0x0a, 0x07, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x34,
	0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x64, 0x69, 0x72,
	0x22, 0xdb, 0x01, 0x0a, 0x03, 0x4e, 0x70, 0x63, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x34, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x64, 0x69, 0x72, 0x22, 0x92,
	0x05, 0x0a, 0x08, 0x4e, 0x66, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07,
	0x6c, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a,
	0x03, 0x64, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x68,
	0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0e, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x41, 0x74,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x41,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x68, 0x61, 0x72,
	0x76, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a,
	0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63,
	0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x12,
	0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65,
	0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x54, 0x0a, 0x25, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6f, 0x6c, 0x64,
	0x6f, 0x77, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x25, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50,
	0x6f, 0x77, 0x65, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x4a, 0x0a, 0x20, 0x6c, 0x61, 0x6e, 0x64, 0x50,
	0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x65, 0x72,
	0x6f, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x20, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77,
	0x6e, 0x41, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d,
>>>>>>> 99ac4eb (fix entity and item   attribute data)
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a,
	0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x73, 0x6b,
	0x69, 0x6c, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x45, 0x66, 0x66, 0x65, 0x63, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x22, 0xdb, 0x01, 0x0a, 0x03, 0x4e, 0x70, 0x63, 0x12, 0x10, 0x0a, 0x03,
	0x63, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x38, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x12, 0x34, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x64,
	0x69, 0x72, 0x22, 0x92, 0x05, 0x0a, 0x08, 0x4e, 0x66, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x63, 0x69,
	0x64, 0x12, 0x18, 0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x66, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x07, 0x6c, 0x61, 0x6e, 0x64, 0x49, 0x64, 0x73, 0x12, 0x34, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x20, 0x0a,
	0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x64, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x64, 0x12,
	0x26, 0x0a, 0x0e, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68, 0x61, 0x72, 0x76, 0x65,
	0x73, 0x74, 0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x68, 0x61, 0x72, 0x76,
	0x65, 0x73, 0x74, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x63, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x54, 0x0a, 0x25, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61,
	0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x43,
	0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x25, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6f, 0x6c,
	0x64, 0x6f, 0x77, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x4a, 0x0a, 0x20, 0x6c,
	0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65,
	0x72, 0x5a, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6f, 0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x20, 0x6c, 0x61, 0x6e, 0x64, 0x50, 0x6c, 0x61, 0x63, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x77, 0x65, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x43, 0x6f, 0x6f,
	0x6c, 0x64, 0x6f, 0x77, 0x6e, 0x41, 0x74, 0x22, 0xc6, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x34, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x40,
	0x0a, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x22, 0x35, 0x0a, 0x11, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x63, 0x69, 0x64, 0x22, 0x63, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x65, 0x70, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x22, 0xad, 0x02, 0x0a,
	0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12,
	0x32, 0x0a, 0x07, 0x74, 0x79, 0x70, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x06, 0x74, 0x79, 0x70,
	0x65, 0x49, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x4c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x5f,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x53, 0x74, 0x65, 0x70, 0x52,
	0x0c, 0x64, 0x65, 0x73, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4d, 0x6f,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x2a, 0x0a, 0x03, 0x44, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x44, 0x69, 0x72, 0x22, 0x95, 0x01, 0x0a,
	0x08, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x44, 0x12, 0x42, 0x0a, 0x0d, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x5f, 0x63, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x44,
	0x52, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x43, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x45, 0x0a,
	0x0e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x43, 0x44, 0x52, 0x0c, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x64, 0x43, 0x64,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x3e, 0x0a, 0x0d, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x53, 0x6b,
	0x69, 0x6c, 0x6c, 0x43, 0x44, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04,
	0x74, 0x69, 0x6d, 0x65, 0x22, 0x38, 0x0a, 0x0e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x45, 0x78,
	0x74, 0x65, 0x6e, 0x64, 0x43, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x2a, 0x68,
	0x0a, 0x0c, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17,
	0x0a, 0x13, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x57, 0x61, 0x6c, 0x6b, 0x10, 0x01, 0x12, 0x13, 0x0a,
	0x0f, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x75, 0x6e,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x49, 0x64, 0x6c, 0x65, 0x10, 0x03, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_entity_proto_rawDescOnce sync.Once
	file_entity_proto_rawDescData = file_entity_proto_rawDesc
)

func file_entity_proto_rawDescGZIP() []byte {
	file_entity_proto_rawDescOnce.Do(func() {
		file_entity_proto_rawDescData = protoimpl.X.CompressGZIP(file_entity_proto_rawDescData)
	})
	return file_entity_proto_rawDescData
}

var file_entity_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_entity_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_entity_proto_goTypes = []interface{}{
	(MovementType)(0),              // 0: gameMessageCore.MovementType
	(*EntityId)(nil),               // 1: gameMessageCore.EntityId
	(*EntityLocation)(nil),         // 2: gameMessageCore.EntityLocation
	(*EntityWithLocation)(nil),     // 3: gameMessageCore.EntityWithLocation
	(*DestructionElementData)(nil), // 4: gameMessageCore.DestructionElementData
	(*Player)(nil),                 // 5: gameMessageCore.Player
	(*Monster)(nil),                // 6: gameMessageCore.Monster
	(*Npc)(nil),                    // 7: gameMessageCore.Npc
	(*NftBuild)(nil),               // 8: gameMessageCore.NftBuild
	(*Resource)(nil),               // 9: gameMessageCore.Resource
	(*ResourcePointInfo)(nil),      // 10: gameMessageCore.ResourcePointInfo
	(*EntityMoveStep)(nil),         // 11: gameMessageCore.EntityMoveStep
	(*EntityMovement)(nil),         // 12: gameMessageCore.EntityMovement
	(*EntityCD)(nil),               // 13: gameMessageCore.EntityCD
	(*EntitySkillCD)(nil),          // 14: gameMessageCore.EntitySkillCD
	(*EntityExtendCD)(nil),         // 15: gameMessageCore.EntityExtendCD
	(EntityType)(0),                // 16: gameMessageCore.EntityType
	(*Vector3)(nil),                // 17: gameMessageCore.Vector3
	(*PlayerBaseData)(nil),         // 18: gameMessageCore.PlayerBaseData
	(*AttributeData)(nil),          // 19: gameMessageCore.AttributeData
	(*PlayerAvatar)(nil),           // 20: gameMessageCore.PlayerAvatar
}
var file_entity_proto_depIdxs = []int32{
	16, // 0: gameMessageCore.EntityId.type:type_name -> gameMessageCore.EntityType
	17, // 1: gameMessageCore.EntityLocation.loc:type_name -> gameMessageCore.Vector3
	1,  // 2: gameMessageCore.EntityWithLocation.type_id:type_name -> gameMessageCore.EntityId
	5,  // 3: gameMessageCore.EntityWithLocation.player:type_name -> gameMessageCore.Player
	6,  // 4: gameMessageCore.EntityWithLocation.monster:type_name -> gameMessageCore.Monster
	8,  // 5: gameMessageCore.EntityWithLocation.build:type_name -> gameMessageCore.NftBuild
	7,  // 6: gameMessageCore.EntityWithLocation.npc:type_name -> gameMessageCore.Npc
	9,  // 7: gameMessageCore.EntityWithLocation.resource:type_name -> gameMessageCore.Resource
	18, // 8: gameMessageCore.Player.base_data:type_name -> gameMessageCore.PlayerBaseData
	19, // 9: gameMessageCore.Player.profile:type_name -> gameMessageCore.AttributeData
	20, // 10: gameMessageCore.Player.avatars:type_name -> gameMessageCore.PlayerAvatar
	17, // 11: gameMessageCore.Player.position:type_name -> gameMessageCore.Vector3
	17, // 12: gameMessageCore.Player.dir:type_name -> gameMessageCore.Vector3
	13, // 13: gameMessageCore.Player.entity_cd:type_name -> gameMessageCore.EntityCD
	19, // 14: gameMessageCore.Monster.profile:type_name -> gameMessageCore.AttributeData
	17, // 15: gameMessageCore.Monster.position:type_name -> gameMessageCore.Vector3
	17, // 16: gameMessageCore.Monster.dir:type_name -> gameMessageCore.Vector3
	19, // 17: gameMessageCore.Npc.profile:type_name -> gameMessageCore.AttributeData
	17, // 18: gameMessageCore.Npc.position:type_name -> gameMessageCore.Vector3
	17, // 19: gameMessageCore.Npc.dir:type_name -> gameMessageCore.Vector3
	17, // 20: gameMessageCore.NftBuild.position:type_name -> gameMessageCore.Vector3
	17, // 21: gameMessageCore.NftBuild.dir:type_name -> gameMessageCore.Vector3
	17, // 22: gameMessageCore.Resource.position:type_name -> gameMessageCore.Vector3
	17, // 23: gameMessageCore.Resource.dir:type_name -> gameMessageCore.Vector3
	10, // 24: gameMessageCore.Resource.pointInfo:type_name -> gameMessageCore.ResourcePointInfo
	2,  // 25: gameMessageCore.EntityMoveStep.location:type_name -> gameMessageCore.EntityLocation
	1,  // 26: gameMessageCore.EntityMovement.type_id:type_name -> gameMessageCore.EntityId
	11, // 27: gameMessageCore.EntityMovement.cur_location:type_name -> gameMessageCore.EntityMoveStep
	11, // 28: gameMessageCore.EntityMovement.dest_location:type_name -> gameMessageCore.EntityMoveStep
	0,  // 29: gameMessageCore.EntityMovement.type:type_name -> gameMessageCore.MovementType
	17, // 30: gameMessageCore.EntityMovement.Dir:type_name -> gameMessageCore.Vector3
	14, // 31: gameMessageCore.EntityCD.skill_cd_list:type_name -> gameMessageCore.EntitySkillCD
	15, // 32: gameMessageCore.EntityCD.extend_cd_list:type_name -> gameMessageCore.EntityExtendCD
	33, // [33:33] is the sub-list for method output_type
	33, // [33:33] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_entity_proto_init() }
func file_entity_proto_init() {
	if File_entity_proto != nil {
		return
	}
	file_vector_proto_init()
	file_entityTypeDefine_proto_init()
	file_entityProfile_proto_init()
	file_player_proto_init()
	file_item_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_entity_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityWithLocation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DestructionElementData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Monster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Npc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NftBuild); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Resource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourcePointInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityMoveStep); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityMovement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityCD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntitySkillCD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_entity_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EntityExtendCD); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_entity_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EntityWithLocation_Player)(nil),
		(*EntityWithLocation_Monster)(nil),
		(*EntityWithLocation_Build)(nil),
		(*EntityWithLocation_Npc)(nil),
		(*EntityWithLocation_Resource)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_entity_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_entity_proto_goTypes,
		DependencyIndexes: file_entity_proto_depIdxs,
		EnumInfos:         file_entity_proto_enumTypes,
		MessageInfos:      file_entity_proto_msgTypes,
	}.Build()
	File_entity_proto = out.File
	file_entity_proto_rawDesc = nil
	file_entity_proto_goTypes = nil
	file_entity_proto_depIdxs = nil
}
