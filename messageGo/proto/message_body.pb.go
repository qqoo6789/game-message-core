// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: message_body.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 消息交互体.
type Envelope struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type         EnvelopeType `protobuf:"varint,1,opt,name=type,proto3,enum=gameMessageCore.EnvelopeType" json:"type,omitempty"`
	SeqId        int32        `protobuf:"varint,2,opt,name=seq_id,json=seqId,proto3" json:"seq_id,omitempty"`
	ErrorCode    int32        `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	ErrorMessage string       `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Types that are assignable to Payload:
	//	*Envelope_BroadCastTickOutResponse
	//	*Envelope_ItemGetRequest
	//	*Envelope_ItemGetResponse
	//	*Envelope_ItemUseRequest
	//	*Envelope_ItemUseResponse
	//	*Envelope_ItemDropRequest
	//	*Envelope_ItemDropResponse
	//	*Envelope_UpdateAvatarRequest
	//	*Envelope_UpdateAvatarResponse
	//	*Envelope_UnloadAvatarRequest
	//	*Envelope_UnloadAvatarResponse
	//	*Envelope_BroadCastItemAddResponse
	//	*Envelope_BroadCastItemUpdateResponse
	//	*Envelope_BroadCastItemDelResponse
	//	*Envelope_BroadCastUpdateItemSlotResponse
	//	*Envelope_GetItemSlotRequest
	//	*Envelope_GetItemSlotResponse
	//	*Envelope_UpgradeItemSlotRequest
	//	*Envelope_UpgradeItemSlotResponse
	//	*Envelope_SigninPlayerRequest
	//	*Envelope_SigninPlayerResponse
	//	*Envelope_SignOutPlayerRequest
	//	*Envelope_SignOutPlayerResponse
	//	*Envelope_UpgradePlayerLevelRequest
	//	*Envelope_UpgradePlayerLevelResponse
	//	*Envelope_QueryLandsRequest
	//	*Envelope_QueryLandsResponse
	//	*Envelope_BroadCastInitLandResponse
	//	*Envelope_BroadCastInitItemResponse
	//	*Envelope_BuildRequest
	//	*Envelope_BuildResponse
	//	*Envelope_RecyclingRequest
	//	*Envelope_RecyclingResponse
	//	*Envelope_ChargedRequest
	//	*Envelope_ChargedResponse
	//	*Envelope_HarvestRequest
	//	*Envelope_HarvestResponse
	//	*Envelope_CollectionRequest
	//	*Envelope_CollectionResponse
	//	*Envelope_BroadCastMultiUpLandResponse
	//	*Envelope_SelfNftBuildsRequest
	//	*Envelope_SelfNftBuildsResponse
	//	*Envelope_BroadCastSelfBuildUpdateResponse
	//	*Envelope_BroadCastSelfBuildRecyclingResponse
	//	*Envelope_MintBatteryRequest
	//	*Envelope_MintBatteryResponse
	//	*Envelope_QueryGranaryRequest
	//	*Envelope_QueryGranaryResponse
	//	*Envelope_GranaryCollectRequest
	//	*Envelope_GranaryCollectResponse
	//	*Envelope_BroadCastGranaryUpdateResponse
	//	*Envelope_BroadCastUpGranaryItemResponse
	//	*Envelope_UpgradeTalentNodeRequest
	//	*Envelope_UpgradeTalentNodeResponse
	//	*Envelope_QueryTalentExpRequest
	//	*Envelope_QueryTalentExpResponse
	//	*Envelope_BroadCastUpTalentExpResponse
	//	*Envelope_QueryPlayerRequest
	//	*Envelope_QueryPlayerResponse
	//	*Envelope_CreatePlayerRequest
	//	*Envelope_CreatePlayerResponse
	//	*Envelope_EnterMapRequest
	//	*Envelope_EnterMapResponse
	//	*Envelope_UpdateSelfLocationRequest
	//	*Envelope_UpdateSelfLocationResponse
	//	*Envelope_UseSkillRequest
	//	*Envelope_UseSkillResponse
	//	*Envelope_RespawnPlayerRequest
	//	*Envelope_RespawnPlayerResponse
	//	*Envelope_BroadCastInitMapElementResponse
	//	*Envelope_BroadCastMapEntityUpdateResponse
	//	*Envelope_BroadCastEntityDestroyResponse
	//	*Envelope_BroadCastEntityMoveResponse
	//	*Envelope_BroadCastEntityCombatResponse
	//	*Envelope_BroadCastRespawnPlayerResponse
	//	*Envelope_TeleportRequest
	//	*Envelope_TeleportResponse
	//	*Envelope_BroadCastEntityProfileUpdateResponse
	//	*Envelope_BroadCastMonsterDeathResponse
	//	*Envelope_BroadCastEntityAvatarUpdateResponse
	//	*Envelope_BroadCastEntityBattleDataUpdateResponse
	//	*Envelope_BroadCastEntityBuildDataUpdateResponse
	//	*Envelope_PlayerActionCollectRequest
	//	*Envelope_PlayerActionCollectResponse
	//	*Envelope_BroadCastPlayerActionCollectResponse
	//	*Envelope_SceneDestructionRequest
	//	*Envelope_SceneDestructionResponse
	//	*Envelope_BroadCastSceneDestructionResponse
	//	*Envelope_PlayerActionChatRequest
	//	*Envelope_PlayerActionChatResponse
	//	*Envelope_BroadCastPlayerActionChatResponse
	//	*Envelope_GetHomeDataRequest
	//	*Envelope_GetHomeDataResponse
	//	*Envelope_Query_ServerTimeRequest
	//	*Envelope_Query_ServerTimeResponse
	//	*Envelope_BroadCastChangeServiceResponse
	//	*Envelope_HomeResourceOperateRequest
	//	*Envelope_HomeResourceOperateResponse
	//	*Envelope_BroadCastHomeDataInitBatchResponse
	//	*Envelope_QueryTalentTreeRequest
	//	*Envelope_QueryTalentTreeResponse
	//	*Envelope_BroadCastTalentTreeUpdateResponse
	//	*Envelope_SelfTasksRequest
	//	*Envelope_SelfTasksResponse
	//	*Envelope_BroadCastUpdateTaskListResponse
	//	*Envelope_AcceptTaskRequest
	//	*Envelope_AcceptTaskResponse
	//	*Envelope_AbandonmentTaskRequest
	//	*Envelope_AbandonmentTaskResponse
	//	*Envelope_TaskRewardRequest
	//	*Envelope_TaskRewardResponse
	//	*Envelope_TaskListRewardRequest
	//	*Envelope_TaskListRewardResponse
	//	*Envelope_UpgradeTaskProgressRequest
	//	*Envelope_UpgradeTaskProgressResponse
	//	*Envelope_BroadCastTaskRewardResponse
	//	*Envelope_SendChatMessageRequest
	//	*Envelope_SendChatMessageResponse
	//	*Envelope_BroadCastChatMessagesResponse
	//	*Envelope_BroadCastRemoveChatMessageResponse
	//	*Envelope_BroadCastUpdateChatStateResponse
	//	*Envelope_PingRequest
	//	*Envelope_PingResponse
	Payload isEnvelope_Payload `protobuf_oneof:"payload"`
}

func (x *Envelope) Reset() {
	*x = Envelope{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Envelope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Envelope) ProtoMessage() {}

func (x *Envelope) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Envelope.ProtoReflect.Descriptor instead.
func (*Envelope) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{0}
}

func (x *Envelope) GetType() EnvelopeType {
	if x != nil {
		return x.Type
	}
	return EnvelopeType_Unknown
}

func (x *Envelope) GetSeqId() int32 {
	if x != nil {
		return x.SeqId
	}
	return 0
}

func (x *Envelope) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

func (x *Envelope) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (m *Envelope) GetPayload() isEnvelope_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *Envelope) GetBroadCastTickOutResponse() *BroadCastTickOutResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastTickOutResponse); ok {
		return x.BroadCastTickOutResponse
	}
	return nil
}

func (x *Envelope) GetItemGetRequest() *ItemGetRequest {
	if x, ok := x.GetPayload().(*Envelope_ItemGetRequest); ok {
		return x.ItemGetRequest
	}
	return nil
}

func (x *Envelope) GetItemGetResponse() *ItemGetResponse {
	if x, ok := x.GetPayload().(*Envelope_ItemGetResponse); ok {
		return x.ItemGetResponse
	}
	return nil
}

func (x *Envelope) GetItemUseRequest() *ItemUseRequest {
	if x, ok := x.GetPayload().(*Envelope_ItemUseRequest); ok {
		return x.ItemUseRequest
	}
	return nil
}

func (x *Envelope) GetItemUseResponse() *ItemUseResponse {
	if x, ok := x.GetPayload().(*Envelope_ItemUseResponse); ok {
		return x.ItemUseResponse
	}
	return nil
}

func (x *Envelope) GetItemDropRequest() *ItemDropRequest {
	if x, ok := x.GetPayload().(*Envelope_ItemDropRequest); ok {
		return x.ItemDropRequest
	}
	return nil
}

func (x *Envelope) GetItemDropResponse() *ItemDropResponse {
	if x, ok := x.GetPayload().(*Envelope_ItemDropResponse); ok {
		return x.ItemDropResponse
	}
	return nil
}

func (x *Envelope) GetUpdateAvatarRequest() *UpdateAvatarRequest {
	if x, ok := x.GetPayload().(*Envelope_UpdateAvatarRequest); ok {
		return x.UpdateAvatarRequest
	}
	return nil
}

func (x *Envelope) GetUpdateAvatarResponse() *UpdateAvatarResponse {
	if x, ok := x.GetPayload().(*Envelope_UpdateAvatarResponse); ok {
		return x.UpdateAvatarResponse
	}
	return nil
}

func (x *Envelope) GetUnloadAvatarRequest() *UnloadAvatarRequest {
	if x, ok := x.GetPayload().(*Envelope_UnloadAvatarRequest); ok {
		return x.UnloadAvatarRequest
	}
	return nil
}

func (x *Envelope) GetUnloadAvatarResponse() *UnloadAvatarResponse {
	if x, ok := x.GetPayload().(*Envelope_UnloadAvatarResponse); ok {
		return x.UnloadAvatarResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastItemAddResponse() *BroadCastItemAddResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastItemAddResponse); ok {
		return x.BroadCastItemAddResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastItemUpdateResponse() *BroadCastItemUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastItemUpdateResponse); ok {
		return x.BroadCastItemUpdateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastItemDelResponse() *BroadCastItemDelResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastItemDelResponse); ok {
		return x.BroadCastItemDelResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastUpdateItemSlotResponse() *BroadCastUpdateItemSlotResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastUpdateItemSlotResponse); ok {
		return x.BroadCastUpdateItemSlotResponse
	}
	return nil
}

func (x *Envelope) GetGetItemSlotRequest() *GetItemSlotRequest {
	if x, ok := x.GetPayload().(*Envelope_GetItemSlotRequest); ok {
		return x.GetItemSlotRequest
	}
	return nil
}

func (x *Envelope) GetGetItemSlotResponse() *GetItemSlotResponse {
	if x, ok := x.GetPayload().(*Envelope_GetItemSlotResponse); ok {
		return x.GetItemSlotResponse
	}
	return nil
}

func (x *Envelope) GetUpgradeItemSlotRequest() *UpgradeItemSlotRequest {
	if x, ok := x.GetPayload().(*Envelope_UpgradeItemSlotRequest); ok {
		return x.UpgradeItemSlotRequest
	}
	return nil
}

func (x *Envelope) GetUpgradeItemSlotResponse() *UpgradeItemSlotResponse {
	if x, ok := x.GetPayload().(*Envelope_UpgradeItemSlotResponse); ok {
		return x.UpgradeItemSlotResponse
	}
	return nil
}

func (x *Envelope) GetSigninPlayerRequest() *SigninPlayerRequest {
	if x, ok := x.GetPayload().(*Envelope_SigninPlayerRequest); ok {
		return x.SigninPlayerRequest
	}
	return nil
}

func (x *Envelope) GetSigninPlayerResponse() *SigninPlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_SigninPlayerResponse); ok {
		return x.SigninPlayerResponse
	}
	return nil
}

func (x *Envelope) GetSignOutPlayerRequest() *SignOutPlayerRequest {
	if x, ok := x.GetPayload().(*Envelope_SignOutPlayerRequest); ok {
		return x.SignOutPlayerRequest
	}
	return nil
}

func (x *Envelope) GetSignOutPlayerResponse() *SignOutPlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_SignOutPlayerResponse); ok {
		return x.SignOutPlayerResponse
	}
	return nil
}

func (x *Envelope) GetUpgradePlayerLevelRequest() *UpgradePlayerLevelRequest {
	if x, ok := x.GetPayload().(*Envelope_UpgradePlayerLevelRequest); ok {
		return x.UpgradePlayerLevelRequest
	}
	return nil
}

func (x *Envelope) GetUpgradePlayerLevelResponse() *UpgradePlayerLevelResponse {
	if x, ok := x.GetPayload().(*Envelope_UpgradePlayerLevelResponse); ok {
		return x.UpgradePlayerLevelResponse
	}
	return nil
}

func (x *Envelope) GetQueryLandsRequest() *QueryLandsRequest {
	if x, ok := x.GetPayload().(*Envelope_QueryLandsRequest); ok {
		return x.QueryLandsRequest
	}
	return nil
}

func (x *Envelope) GetQueryLandsResponse() *QueryLandsResponse {
	if x, ok := x.GetPayload().(*Envelope_QueryLandsResponse); ok {
		return x.QueryLandsResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastInitLandResponse() *BroadCastInitLandResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastInitLandResponse); ok {
		return x.BroadCastInitLandResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastInitItemResponse() *BroadCastInitItemResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastInitItemResponse); ok {
		return x.BroadCastInitItemResponse
	}
	return nil
}

func (x *Envelope) GetBuildRequest() *BuildRequest {
	if x, ok := x.GetPayload().(*Envelope_BuildRequest); ok {
		return x.BuildRequest
	}
	return nil
}

func (x *Envelope) GetBuildResponse() *BuildResponse {
	if x, ok := x.GetPayload().(*Envelope_BuildResponse); ok {
		return x.BuildResponse
	}
	return nil
}

func (x *Envelope) GetRecyclingRequest() *RecyclingRequest {
	if x, ok := x.GetPayload().(*Envelope_RecyclingRequest); ok {
		return x.RecyclingRequest
	}
	return nil
}

func (x *Envelope) GetRecyclingResponse() *RecyclingResponse {
	if x, ok := x.GetPayload().(*Envelope_RecyclingResponse); ok {
		return x.RecyclingResponse
	}
	return nil
}

func (x *Envelope) GetChargedRequest() *ChargedRequest {
	if x, ok := x.GetPayload().(*Envelope_ChargedRequest); ok {
		return x.ChargedRequest
	}
	return nil
}

func (x *Envelope) GetChargedResponse() *ChargedResponse {
	if x, ok := x.GetPayload().(*Envelope_ChargedResponse); ok {
		return x.ChargedResponse
	}
	return nil
}

func (x *Envelope) GetHarvestRequest() *HarvestRequest {
	if x, ok := x.GetPayload().(*Envelope_HarvestRequest); ok {
		return x.HarvestRequest
	}
	return nil
}

func (x *Envelope) GetHarvestResponse() *HarvestResponse {
	if x, ok := x.GetPayload().(*Envelope_HarvestResponse); ok {
		return x.HarvestResponse
	}
	return nil
}

func (x *Envelope) GetCollectionRequest() *CollectionRequest {
	if x, ok := x.GetPayload().(*Envelope_CollectionRequest); ok {
		return x.CollectionRequest
	}
	return nil
}

func (x *Envelope) GetCollectionResponse() *CollectionResponse {
	if x, ok := x.GetPayload().(*Envelope_CollectionResponse); ok {
		return x.CollectionResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastMultiUpLandResponse() *BroadCastMultiUpLandResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastMultiUpLandResponse); ok {
		return x.BroadCastMultiUpLandResponse
	}
	return nil
}

func (x *Envelope) GetSelfNftBuildsRequest() *SelfNftBuildsRequest {
	if x, ok := x.GetPayload().(*Envelope_SelfNftBuildsRequest); ok {
		return x.SelfNftBuildsRequest
	}
	return nil
}

func (x *Envelope) GetSelfNftBuildsResponse() *SelfNftBuildsResponse {
	if x, ok := x.GetPayload().(*Envelope_SelfNftBuildsResponse); ok {
		return x.SelfNftBuildsResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastSelfBuildUpdateResponse() *BroadCastSelfBuildUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastSelfBuildUpdateResponse); ok {
		return x.BroadCastSelfBuildUpdateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastSelfBuildRecyclingResponse() *BroadCastSelfBuildRecyclingResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastSelfBuildRecyclingResponse); ok {
		return x.BroadCastSelfBuildRecyclingResponse
	}
	return nil
}

func (x *Envelope) GetMintBatteryRequest() *MintBatteryRequest {
	if x, ok := x.GetPayload().(*Envelope_MintBatteryRequest); ok {
		return x.MintBatteryRequest
	}
	return nil
}

func (x *Envelope) GetMintBatteryResponse() *MintBatteryResponse {
	if x, ok := x.GetPayload().(*Envelope_MintBatteryResponse); ok {
		return x.MintBatteryResponse
	}
	return nil
}

func (x *Envelope) GetQueryGranaryRequest() *QueryGranaryRequest {
	if x, ok := x.GetPayload().(*Envelope_QueryGranaryRequest); ok {
		return x.QueryGranaryRequest
	}
	return nil
}

func (x *Envelope) GetQueryGranaryResponse() *QueryGranaryResponse {
	if x, ok := x.GetPayload().(*Envelope_QueryGranaryResponse); ok {
		return x.QueryGranaryResponse
	}
	return nil
}

func (x *Envelope) GetGranaryCollectRequest() *GranaryCollectRequest {
	if x, ok := x.GetPayload().(*Envelope_GranaryCollectRequest); ok {
		return x.GranaryCollectRequest
	}
	return nil
}

func (x *Envelope) GetGranaryCollectResponse() *GranaryCollectResponse {
	if x, ok := x.GetPayload().(*Envelope_GranaryCollectResponse); ok {
		return x.GranaryCollectResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastGranaryUpdateResponse() *BroadCastGranaryUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastGranaryUpdateResponse); ok {
		return x.BroadCastGranaryUpdateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastUpGranaryItemResponse() *BroadCastUpGranaryItemResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastUpGranaryItemResponse); ok {
		return x.BroadCastUpGranaryItemResponse
	}
	return nil
}

func (x *Envelope) GetUpgradeTalentNodeRequest() *UpgradeTalentNodeRequest {
	if x, ok := x.GetPayload().(*Envelope_UpgradeTalentNodeRequest); ok {
		return x.UpgradeTalentNodeRequest
	}
	return nil
}

func (x *Envelope) GetUpgradeTalentNodeResponse() *UpgradeTalentNodeResponse {
	if x, ok := x.GetPayload().(*Envelope_UpgradeTalentNodeResponse); ok {
		return x.UpgradeTalentNodeResponse
	}
	return nil
}

func (x *Envelope) GetQueryTalentExpRequest() *QueryTalentExpRequest {
	if x, ok := x.GetPayload().(*Envelope_QueryTalentExpRequest); ok {
		return x.QueryTalentExpRequest
	}
	return nil
}

func (x *Envelope) GetQueryTalentExpResponse() *QueryTalentExpResponse {
	if x, ok := x.GetPayload().(*Envelope_QueryTalentExpResponse); ok {
		return x.QueryTalentExpResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastUpTalentExpResponse() *BroadCastUpTalentExpResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastUpTalentExpResponse); ok {
		return x.BroadCastUpTalentExpResponse
	}
	return nil
}

func (x *Envelope) GetQueryPlayerRequest() *QueryPlayerRequest {
	if x, ok := x.GetPayload().(*Envelope_QueryPlayerRequest); ok {
		return x.QueryPlayerRequest
	}
	return nil
}

func (x *Envelope) GetQueryPlayerResponse() *QueryPlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_QueryPlayerResponse); ok {
		return x.QueryPlayerResponse
	}
	return nil
}

func (x *Envelope) GetCreatePlayerRequest() *CreatePlayerRequest {
	if x, ok := x.GetPayload().(*Envelope_CreatePlayerRequest); ok {
		return x.CreatePlayerRequest
	}
	return nil
}

func (x *Envelope) GetCreatePlayerResponse() *CreatePlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_CreatePlayerResponse); ok {
		return x.CreatePlayerResponse
	}
	return nil
}

func (x *Envelope) GetEnterMapRequest() *EnterMapRequest {
	if x, ok := x.GetPayload().(*Envelope_EnterMapRequest); ok {
		return x.EnterMapRequest
	}
	return nil
}

func (x *Envelope) GetEnterMapResponse() *EnterMapResponse {
	if x, ok := x.GetPayload().(*Envelope_EnterMapResponse); ok {
		return x.EnterMapResponse
	}
	return nil
}

func (x *Envelope) GetUpdateSelfLocationRequest() *UpdateSelfLocationRequest {
	if x, ok := x.GetPayload().(*Envelope_UpdateSelfLocationRequest); ok {
		return x.UpdateSelfLocationRequest
	}
	return nil
}

func (x *Envelope) GetUpdateSelfLocationResponse() *UpdateSelfLocationResponse {
	if x, ok := x.GetPayload().(*Envelope_UpdateSelfLocationResponse); ok {
		return x.UpdateSelfLocationResponse
	}
	return nil
}

func (x *Envelope) GetUseSkillRequest() *UseSkillRequest {
	if x, ok := x.GetPayload().(*Envelope_UseSkillRequest); ok {
		return x.UseSkillRequest
	}
	return nil
}

func (x *Envelope) GetUseSkillResponse() *UseSkillResponse {
	if x, ok := x.GetPayload().(*Envelope_UseSkillResponse); ok {
		return x.UseSkillResponse
	}
	return nil
}

func (x *Envelope) GetRespawnPlayerRequest() *RespawnPlayerRequest {
	if x, ok := x.GetPayload().(*Envelope_RespawnPlayerRequest); ok {
		return x.RespawnPlayerRequest
	}
	return nil
}

func (x *Envelope) GetRespawnPlayerResponse() *RespawnPlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_RespawnPlayerResponse); ok {
		return x.RespawnPlayerResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastInitMapElementResponse() *BroadCastInitMapElementResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastInitMapElementResponse); ok {
		return x.BroadCastInitMapElementResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastMapEntityUpdateResponse() *BroadCastMapEntityUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastMapEntityUpdateResponse); ok {
		return x.BroadCastMapEntityUpdateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityDestroyResponse() *BroadCastEntityDestroyResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityDestroyResponse); ok {
		return x.BroadCastEntityDestroyResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityMoveResponse() *BroadCastEntityMoveResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityMoveResponse); ok {
		return x.BroadCastEntityMoveResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityCombatResponse() *BroadCastEntityCombatResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityCombatResponse); ok {
		return x.BroadCastEntityCombatResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastRespawnPlayerResponse() *BroadCastRespawnPlayerResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastRespawnPlayerResponse); ok {
		return x.BroadCastRespawnPlayerResponse
	}
	return nil
}

func (x *Envelope) GetTeleportRequest() *TeleportRequest {
	if x, ok := x.GetPayload().(*Envelope_TeleportRequest); ok {
		return x.TeleportRequest
	}
	return nil
}

func (x *Envelope) GetTeleportResponse() *TeleportResponse {
	if x, ok := x.GetPayload().(*Envelope_TeleportResponse); ok {
		return x.TeleportResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityProfileUpdateResponse() *BroadCastEntityProfileUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityProfileUpdateResponse); ok {
		return x.BroadCastEntityProfileUpdateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastMonsterDeathResponse() *BroadCastMonsterDeathResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastMonsterDeathResponse); ok {
		return x.BroadCastMonsterDeathResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityAvatarUpdateResponse() *BroadCastEntityAvatarUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityAvatarUpdateResponse); ok {
		return x.BroadCastEntityAvatarUpdateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityBattleDataUpdateResponse() *BroadCastEntityBattleDataUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityBattleDataUpdateResponse); ok {
		return x.BroadCastEntityBattleDataUpdateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastEntityBuildDataUpdateResponse() *BroadCastEntityBuildDataUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastEntityBuildDataUpdateResponse); ok {
		return x.BroadCastEntityBuildDataUpdateResponse
	}
	return nil
}

func (x *Envelope) GetPlayerActionCollectRequest() *PlayerActionCollectRequest {
	if x, ok := x.GetPayload().(*Envelope_PlayerActionCollectRequest); ok {
		return x.PlayerActionCollectRequest
	}
	return nil
}

func (x *Envelope) GetPlayerActionCollectResponse() *PlayerActionCollectResponse {
	if x, ok := x.GetPayload().(*Envelope_PlayerActionCollectResponse); ok {
		return x.PlayerActionCollectResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastPlayerActionCollectResponse() *BroadCastPlayerActionCollectResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastPlayerActionCollectResponse); ok {
		return x.BroadCastPlayerActionCollectResponse
	}
	return nil
}

func (x *Envelope) GetSceneDestructionRequest() *SceneDestructionRequest {
	if x, ok := x.GetPayload().(*Envelope_SceneDestructionRequest); ok {
		return x.SceneDestructionRequest
	}
	return nil
}

func (x *Envelope) GetSceneDestructionResponse() *SceneDestructionResponse {
	if x, ok := x.GetPayload().(*Envelope_SceneDestructionResponse); ok {
		return x.SceneDestructionResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastSceneDestructionResponse() *BroadCastSceneDestructionResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastSceneDestructionResponse); ok {
		return x.BroadCastSceneDestructionResponse
	}
	return nil
}

func (x *Envelope) GetPlayerActionChatRequest() *PlayerActionChatRequest {
	if x, ok := x.GetPayload().(*Envelope_PlayerActionChatRequest); ok {
		return x.PlayerActionChatRequest
	}
	return nil
}

func (x *Envelope) GetPlayerActionChatResponse() *PlayerActionChatResponse {
	if x, ok := x.GetPayload().(*Envelope_PlayerActionChatResponse); ok {
		return x.PlayerActionChatResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastPlayerActionChatResponse() *BroadCastPlayerActionChatResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastPlayerActionChatResponse); ok {
		return x.BroadCastPlayerActionChatResponse
	}
	return nil
}

func (x *Envelope) GetGetHomeDataRequest() *GetHomeDataRequest {
	if x, ok := x.GetPayload().(*Envelope_GetHomeDataRequest); ok {
		return x.GetHomeDataRequest
	}
	return nil
}

func (x *Envelope) GetGetHomeDataResponse() *GetHomeDataResponse {
	if x, ok := x.GetPayload().(*Envelope_GetHomeDataResponse); ok {
		return x.GetHomeDataResponse
	}
	return nil
}

func (x *Envelope) GetQuery_ServerTimeRequest() *QueryServerTimeRequest {
	if x, ok := x.GetPayload().(*Envelope_Query_ServerTimeRequest); ok {
		return x.Query_ServerTimeRequest
	}
	return nil
}

func (x *Envelope) GetQuery_ServerTimeResponse() *QueryServerTimeResponse {
	if x, ok := x.GetPayload().(*Envelope_Query_ServerTimeResponse); ok {
		return x.Query_ServerTimeResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastChangeServiceResponse() *BroadCastChangeServiceResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastChangeServiceResponse); ok {
		return x.BroadCastChangeServiceResponse
	}
	return nil
}

func (x *Envelope) GetHomeResourceOperateRequest() *HomeResourceOperateRequest {
	if x, ok := x.GetPayload().(*Envelope_HomeResourceOperateRequest); ok {
		return x.HomeResourceOperateRequest
	}
	return nil
}

func (x *Envelope) GetHomeResourceOperateResponse() *HomeResourceOperateResponse {
	if x, ok := x.GetPayload().(*Envelope_HomeResourceOperateResponse); ok {
		return x.HomeResourceOperateResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastHomeDataInitBatchResponse() *BroadCastHomeDataInitBatchResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastHomeDataInitBatchResponse); ok {
		return x.BroadCastHomeDataInitBatchResponse
	}
	return nil
}

func (x *Envelope) GetQueryTalentTreeRequest() *QueryTalentTreeRequest {
	if x, ok := x.GetPayload().(*Envelope_QueryTalentTreeRequest); ok {
		return x.QueryTalentTreeRequest
	}
	return nil
}

func (x *Envelope) GetQueryTalentTreeResponse() *QueryTalentTreeResponse {
	if x, ok := x.GetPayload().(*Envelope_QueryTalentTreeResponse); ok {
		return x.QueryTalentTreeResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastTalentTreeUpdateResponse() *BroadCastTalentTreeUpdateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastTalentTreeUpdateResponse); ok {
		return x.BroadCastTalentTreeUpdateResponse
	}
	return nil
}

func (x *Envelope) GetSelfTasksRequest() *SelfTasksRequest {
	if x, ok := x.GetPayload().(*Envelope_SelfTasksRequest); ok {
		return x.SelfTasksRequest
	}
	return nil
}

func (x *Envelope) GetSelfTasksResponse() *SelfTasksResponse {
	if x, ok := x.GetPayload().(*Envelope_SelfTasksResponse); ok {
		return x.SelfTasksResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastUpdateTaskListResponse() *BroadCastUpdateTaskListResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastUpdateTaskListResponse); ok {
		return x.BroadCastUpdateTaskListResponse
	}
	return nil
}

func (x *Envelope) GetAcceptTaskRequest() *AcceptTaskRequest {
	if x, ok := x.GetPayload().(*Envelope_AcceptTaskRequest); ok {
		return x.AcceptTaskRequest
	}
	return nil
}

func (x *Envelope) GetAcceptTaskResponse() *AcceptTaskResponse {
	if x, ok := x.GetPayload().(*Envelope_AcceptTaskResponse); ok {
		return x.AcceptTaskResponse
	}
	return nil
}

func (x *Envelope) GetAbandonmentTaskRequest() *AbandonmentTaskRequest {
	if x, ok := x.GetPayload().(*Envelope_AbandonmentTaskRequest); ok {
		return x.AbandonmentTaskRequest
	}
	return nil
}

func (x *Envelope) GetAbandonmentTaskResponse() *AbandonmentTaskResponse {
	if x, ok := x.GetPayload().(*Envelope_AbandonmentTaskResponse); ok {
		return x.AbandonmentTaskResponse
	}
	return nil
}

func (x *Envelope) GetTaskRewardRequest() *TaskRewardRequest {
	if x, ok := x.GetPayload().(*Envelope_TaskRewardRequest); ok {
		return x.TaskRewardRequest
	}
	return nil
}

func (x *Envelope) GetTaskRewardResponse() *TaskRewardResponse {
	if x, ok := x.GetPayload().(*Envelope_TaskRewardResponse); ok {
		return x.TaskRewardResponse
	}
	return nil
}

func (x *Envelope) GetTaskListRewardRequest() *TaskListRewardRequest {
	if x, ok := x.GetPayload().(*Envelope_TaskListRewardRequest); ok {
		return x.TaskListRewardRequest
	}
	return nil
}

func (x *Envelope) GetTaskListRewardResponse() *TaskListRewardResponse {
	if x, ok := x.GetPayload().(*Envelope_TaskListRewardResponse); ok {
		return x.TaskListRewardResponse
	}
	return nil
}

func (x *Envelope) GetUpgradeTaskProgressRequest() *UpgradeTaskProgressRequest {
	if x, ok := x.GetPayload().(*Envelope_UpgradeTaskProgressRequest); ok {
		return x.UpgradeTaskProgressRequest
	}
	return nil
}

func (x *Envelope) GetUpgradeTaskProgressResponse() *UpgradeTaskProgressResponse {
	if x, ok := x.GetPayload().(*Envelope_UpgradeTaskProgressResponse); ok {
		return x.UpgradeTaskProgressResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastTaskRewardResponse() *BroadCastTaskRewardResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastTaskRewardResponse); ok {
		return x.BroadCastTaskRewardResponse
	}
	return nil
}

func (x *Envelope) GetSendChatMessageRequest() *SendChatMessageRequest {
	if x, ok := x.GetPayload().(*Envelope_SendChatMessageRequest); ok {
		return x.SendChatMessageRequest
	}
	return nil
}

func (x *Envelope) GetSendChatMessageResponse() *SendChatMessageResponse {
	if x, ok := x.GetPayload().(*Envelope_SendChatMessageResponse); ok {
		return x.SendChatMessageResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastChatMessagesResponse() *BroadCastChatMessagesResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastChatMessagesResponse); ok {
		return x.BroadCastChatMessagesResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastRemoveChatMessageResponse() *BroadCastRemoveChatMessageResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastRemoveChatMessageResponse); ok {
		return x.BroadCastRemoveChatMessageResponse
	}
	return nil
}

func (x *Envelope) GetBroadCastUpdateChatStateResponse() *BroadCastUpdateChatStateResponse {
	if x, ok := x.GetPayload().(*Envelope_BroadCastUpdateChatStateResponse); ok {
		return x.BroadCastUpdateChatStateResponse
	}
	return nil
}

func (x *Envelope) GetPingRequest() *PingRequest {
	if x, ok := x.GetPayload().(*Envelope_PingRequest); ok {
		return x.PingRequest
	}
	return nil
}

func (x *Envelope) GetPingResponse() *PingResponse {
	if x, ok := x.GetPayload().(*Envelope_PingResponse); ok {
		return x.PingResponse
	}
	return nil
}

type isEnvelope_Payload interface {
	isEnvelope_Payload()
}

type Envelope_BroadCastTickOutResponse struct {
	BroadCastTickOutResponse *BroadCastTickOutResponse `protobuf:"bytes,39321,opt,name=broad_cast_tick_out_response,json=broadCastTickOutResponse,proto3,oneof"`
}

type Envelope_ItemGetRequest struct {
	//mainServer协议 : 0x01ZZZZ  主数据服务协议************************************
	ItemGetRequest *ItemGetRequest `protobuf:"bytes,65537,opt,name=item_get_request,json=itemGetRequest,proto3,oneof"`
}

type Envelope_ItemGetResponse struct {
	ItemGetResponse *ItemGetResponse `protobuf:"bytes,65538,opt,name=item_get_response,json=itemGetResponse,proto3,oneof"`
}

type Envelope_ItemUseRequest struct {
	ItemUseRequest *ItemUseRequest `protobuf:"bytes,65539,opt,name=item_use_request,json=itemUseRequest,proto3,oneof"`
}

type Envelope_ItemUseResponse struct {
	ItemUseResponse *ItemUseResponse `protobuf:"bytes,65540,opt,name=item_use_response,json=itemUseResponse,proto3,oneof"`
}

type Envelope_ItemDropRequest struct {
	ItemDropRequest *ItemDropRequest `protobuf:"bytes,65541,opt,name=item_drop_request,json=itemDropRequest,proto3,oneof"`
}

type Envelope_ItemDropResponse struct {
	ItemDropResponse *ItemDropResponse `protobuf:"bytes,65542,opt,name=item_drop_response,json=itemDropResponse,proto3,oneof"`
}

type Envelope_UpdateAvatarRequest struct {
	UpdateAvatarRequest *UpdateAvatarRequest `protobuf:"bytes,65543,opt,name=update_avatar_request,json=updateAvatarRequest,proto3,oneof"`
}

type Envelope_UpdateAvatarResponse struct {
	UpdateAvatarResponse *UpdateAvatarResponse `protobuf:"bytes,65544,opt,name=update_avatar_response,json=updateAvatarResponse,proto3,oneof"`
}

type Envelope_UnloadAvatarRequest struct {
	UnloadAvatarRequest *UnloadAvatarRequest `protobuf:"bytes,65545,opt,name=unload_avatar_request,json=unloadAvatarRequest,proto3,oneof"`
}

type Envelope_UnloadAvatarResponse struct {
	UnloadAvatarResponse *UnloadAvatarResponse `protobuf:"bytes,65552,opt,name=unload_avatar_response,json=unloadAvatarResponse,proto3,oneof"`
}

type Envelope_BroadCastItemAddResponse struct {
	BroadCastItemAddResponse *BroadCastItemAddResponse `protobuf:"bytes,65553,opt,name=broad_cast_item_add_response,json=broadCastItemAddResponse,proto3,oneof"`
}

type Envelope_BroadCastItemUpdateResponse struct {
	BroadCastItemUpdateResponse *BroadCastItemUpdateResponse `protobuf:"bytes,65554,opt,name=broad_cast_item_update_response,json=broadCastItemUpdateResponse,proto3,oneof"`
}

type Envelope_BroadCastItemDelResponse struct {
	BroadCastItemDelResponse *BroadCastItemDelResponse `protobuf:"bytes,65555,opt,name=broad_cast_item_del_response,json=broadCastItemDelResponse,proto3,oneof"`
}

type Envelope_BroadCastUpdateItemSlotResponse struct {
	BroadCastUpdateItemSlotResponse *BroadCastUpdateItemSlotResponse `protobuf:"bytes,65556,opt,name=broad_cast_update_item_slot_response,json=broadCastUpdateItemSlotResponse,proto3,oneof"`
}

type Envelope_GetItemSlotRequest struct {
	GetItemSlotRequest *GetItemSlotRequest `protobuf:"bytes,65557,opt,name=get_item_slot_request,json=getItemSlotRequest,proto3,oneof"`
}

type Envelope_GetItemSlotResponse struct {
	GetItemSlotResponse *GetItemSlotResponse `protobuf:"bytes,65558,opt,name=get_item_slot_response,json=getItemSlotResponse,proto3,oneof"`
}

type Envelope_UpgradeItemSlotRequest struct {
	UpgradeItemSlotRequest *UpgradeItemSlotRequest `protobuf:"bytes,65559,opt,name=upgrade_item_slot_request,json=upgradeItemSlotRequest,proto3,oneof"`
}

type Envelope_UpgradeItemSlotResponse struct {
	UpgradeItemSlotResponse *UpgradeItemSlotResponse `protobuf:"bytes,65560,opt,name=upgrade_item_slot_response,json=upgradeItemSlotResponse,proto3,oneof"`
}

type Envelope_SigninPlayerRequest struct {
	SigninPlayerRequest *SigninPlayerRequest `protobuf:"bytes,65561,opt,name=signin_player_request,json=signinPlayerRequest,proto3,oneof"`
}

type Envelope_SigninPlayerResponse struct {
	SigninPlayerResponse *SigninPlayerResponse `protobuf:"bytes,65568,opt,name=signin_player_response,json=signinPlayerResponse,proto3,oneof"`
}

type Envelope_SignOutPlayerRequest struct {
	SignOutPlayerRequest *SignOutPlayerRequest `protobuf:"bytes,65569,opt,name=sign_out_player_request,json=signOutPlayerRequest,proto3,oneof"`
}

type Envelope_SignOutPlayerResponse struct {
	SignOutPlayerResponse *SignOutPlayerResponse `protobuf:"bytes,65570,opt,name=sign_out_player_response,json=signOutPlayerResponse,proto3,oneof"`
}

type Envelope_UpgradePlayerLevelRequest struct {
	UpgradePlayerLevelRequest *UpgradePlayerLevelRequest `protobuf:"bytes,65571,opt,name=upgrade_player_level_request,json=upgradePlayerLevelRequest,proto3,oneof"`
}

type Envelope_UpgradePlayerLevelResponse struct {
	UpgradePlayerLevelResponse *UpgradePlayerLevelResponse `protobuf:"bytes,65572,opt,name=upgrade_player_level_response,json=upgradePlayerLevelResponse,proto3,oneof"`
}

type Envelope_QueryLandsRequest struct {
	QueryLandsRequest *QueryLandsRequest `protobuf:"bytes,65573,opt,name=query_lands_request,json=queryLandsRequest,proto3,oneof"`
}

type Envelope_QueryLandsResponse struct {
	QueryLandsResponse *QueryLandsResponse `protobuf:"bytes,65574,opt,name=query_lands_response,json=queryLandsResponse,proto3,oneof"`
}

type Envelope_BroadCastInitLandResponse struct {
	BroadCastInitLandResponse *BroadCastInitLandResponse `protobuf:"bytes,65575,opt,name=broad_cast_init_land_response,json=broadCastInitLandResponse,proto3,oneof"`
}

type Envelope_BroadCastInitItemResponse struct {
	BroadCastInitItemResponse *BroadCastInitItemResponse `protobuf:"bytes,65577,opt,name=broad_cast_init_item_response,json=broadCastInitItemResponse,proto3,oneof"`
}

type Envelope_BuildRequest struct {
	BuildRequest *BuildRequest `protobuf:"bytes,65585,opt,name=build_request,json=buildRequest,proto3,oneof"`
}

type Envelope_BuildResponse struct {
	BuildResponse *BuildResponse `protobuf:"bytes,65586,opt,name=build_response,json=buildResponse,proto3,oneof"`
}

type Envelope_RecyclingRequest struct {
	RecyclingRequest *RecyclingRequest `protobuf:"bytes,65587,opt,name=recycling_request,json=recyclingRequest,proto3,oneof"`
}

type Envelope_RecyclingResponse struct {
	RecyclingResponse *RecyclingResponse `protobuf:"bytes,65588,opt,name=recycling_response,json=recyclingResponse,proto3,oneof"`
}

type Envelope_ChargedRequest struct {
	ChargedRequest *ChargedRequest `protobuf:"bytes,65589,opt,name=charged_request,json=chargedRequest,proto3,oneof"`
}

type Envelope_ChargedResponse struct {
	ChargedResponse *ChargedResponse `protobuf:"bytes,65590,opt,name=charged_response,json=chargedResponse,proto3,oneof"`
}

type Envelope_HarvestRequest struct {
	HarvestRequest *HarvestRequest `protobuf:"bytes,65591,opt,name=harvest_request,json=harvestRequest,proto3,oneof"`
}

type Envelope_HarvestResponse struct {
	HarvestResponse *HarvestResponse `protobuf:"bytes,65592,opt,name=harvest_response,json=harvestResponse,proto3,oneof"`
}

type Envelope_CollectionRequest struct {
	CollectionRequest *CollectionRequest `protobuf:"bytes,65593,opt,name=collection_request,json=collectionRequest,proto3,oneof"`
}

type Envelope_CollectionResponse struct {
	CollectionResponse *CollectionResponse `protobuf:"bytes,65600,opt,name=collection_response,json=collectionResponse,proto3,oneof"`
}

type Envelope_BroadCastMultiUpLandResponse struct {
	BroadCastMultiUpLandResponse *BroadCastMultiUpLandResponse `protobuf:"bytes,65601,opt,name=broad_cast_multi_up_land_response,json=broadCastMultiUpLandResponse,proto3,oneof"`
}

type Envelope_SelfNftBuildsRequest struct {
	SelfNftBuildsRequest *SelfNftBuildsRequest `protobuf:"bytes,65603,opt,name=self_nft_builds_request,json=selfNftBuildsRequest,proto3,oneof"`
}

type Envelope_SelfNftBuildsResponse struct {
	SelfNftBuildsResponse *SelfNftBuildsResponse `protobuf:"bytes,65604,opt,name=self_nft_builds_response,json=selfNftBuildsResponse,proto3,oneof"`
}

type Envelope_BroadCastSelfBuildUpdateResponse struct {
	BroadCastSelfBuildUpdateResponse *BroadCastSelfBuildUpdateResponse `protobuf:"bytes,65605,opt,name=broad_cast_self_build_update_response,json=broadCastSelfBuildUpdateResponse,proto3,oneof"`
}

type Envelope_BroadCastSelfBuildRecyclingResponse struct {
	BroadCastSelfBuildRecyclingResponse *BroadCastSelfBuildRecyclingResponse `protobuf:"bytes,65607,opt,name=broad_cast_self_build_recycling_response,json=broadCastSelfBuildRecyclingResponse,proto3,oneof"`
}

type Envelope_MintBatteryRequest struct {
	MintBatteryRequest *MintBatteryRequest `protobuf:"bytes,65609,opt,name=mint_battery_request,json=mintBatteryRequest,proto3,oneof"`
}

type Envelope_MintBatteryResponse struct {
	MintBatteryResponse *MintBatteryResponse `protobuf:"bytes,65616,opt,name=mint_battery_response,json=mintBatteryResponse,proto3,oneof"`
}

type Envelope_QueryGranaryRequest struct {
	QueryGranaryRequest *QueryGranaryRequest `protobuf:"bytes,65617,opt,name=query_granary_request,json=queryGranaryRequest,proto3,oneof"`
}

type Envelope_QueryGranaryResponse struct {
	QueryGranaryResponse *QueryGranaryResponse `protobuf:"bytes,65618,opt,name=query_granary_response,json=queryGranaryResponse,proto3,oneof"`
}

type Envelope_GranaryCollectRequest struct {
	GranaryCollectRequest *GranaryCollectRequest `protobuf:"bytes,65619,opt,name=granary_collect_request,json=granaryCollectRequest,proto3,oneof"`
}

type Envelope_GranaryCollectResponse struct {
	GranaryCollectResponse *GranaryCollectResponse `protobuf:"bytes,65620,opt,name=granary_collect_response,json=granaryCollectResponse,proto3,oneof"`
}

type Envelope_BroadCastGranaryUpdateResponse struct {
	BroadCastGranaryUpdateResponse *BroadCastGranaryUpdateResponse `protobuf:"bytes,65621,opt,name=broad_cast_granary_update_response,json=broadCastGranaryUpdateResponse,proto3,oneof"`
}

type Envelope_BroadCastUpGranaryItemResponse struct {
	BroadCastUpGranaryItemResponse *BroadCastUpGranaryItemResponse `protobuf:"bytes,65623,opt,name=broad_cast_up_granary_item_response,json=broadCastUpGranaryItemResponse,proto3,oneof"`
}

type Envelope_UpgradeTalentNodeRequest struct {
	UpgradeTalentNodeRequest *UpgradeTalentNodeRequest `protobuf:"bytes,65625,opt,name=upgrade_talent_node_request,json=upgradeTalentNodeRequest,proto3,oneof"`
}

type Envelope_UpgradeTalentNodeResponse struct {
	UpgradeTalentNodeResponse *UpgradeTalentNodeResponse `protobuf:"bytes,65632,opt,name=upgrade_talent_node_response,json=upgradeTalentNodeResponse,proto3,oneof"`
}

type Envelope_QueryTalentExpRequest struct {
	QueryTalentExpRequest *QueryTalentExpRequest `protobuf:"bytes,65633,opt,name=query_talent_exp_request,json=queryTalentExpRequest,proto3,oneof"`
}

type Envelope_QueryTalentExpResponse struct {
	QueryTalentExpResponse *QueryTalentExpResponse `protobuf:"bytes,65634,opt,name=query_talent_exp_response,json=queryTalentExpResponse,proto3,oneof"`
}

type Envelope_BroadCastUpTalentExpResponse struct {
	BroadCastUpTalentExpResponse *BroadCastUpTalentExpResponse `protobuf:"bytes,65635,opt,name=broad_cast_up_talent_exp_response,json=broadCastUpTalentExpResponse,proto3,oneof"`
}

type Envelope_QueryPlayerRequest struct {
	//accountSer协议 : 0x02ZZZZ  账号服务 协议 ************************************
	QueryPlayerRequest *QueryPlayerRequest `protobuf:"bytes,131073,opt,name=query_player_request,json=queryPlayerRequest,proto3,oneof"`
}

type Envelope_QueryPlayerResponse struct {
	QueryPlayerResponse *QueryPlayerResponse `protobuf:"bytes,131074,opt,name=query_player_response,json=queryPlayerResponse,proto3,oneof"`
}

type Envelope_CreatePlayerRequest struct {
	CreatePlayerRequest *CreatePlayerRequest `protobuf:"bytes,131075,opt,name=create_player_request,json=createPlayerRequest,proto3,oneof"`
}

type Envelope_CreatePlayerResponse struct {
	CreatePlayerResponse *CreatePlayerResponse `protobuf:"bytes,131076,opt,name=create_player_response,json=createPlayerResponse,proto3,oneof"`
}

type Envelope_EnterMapRequest struct {
	//sceneSer 协议 : 0x03ZZZZ  战斗服务 协议 ************************************
	EnterMapRequest *EnterMapRequest `protobuf:"bytes,196609,opt,name=enter_map_request,json=enterMapRequest,proto3,oneof"`
}

type Envelope_EnterMapResponse struct {
	EnterMapResponse *EnterMapResponse `protobuf:"bytes,196610,opt,name=enter_map_response,json=enterMapResponse,proto3,oneof"`
}

type Envelope_UpdateSelfLocationRequest struct {
	UpdateSelfLocationRequest *UpdateSelfLocationRequest `protobuf:"bytes,196611,opt,name=update_self_location_request,json=updateSelfLocationRequest,proto3,oneof"`
}

type Envelope_UpdateSelfLocationResponse struct {
	UpdateSelfLocationResponse *UpdateSelfLocationResponse `protobuf:"bytes,196612,opt,name=update_self_location_response,json=updateSelfLocationResponse,proto3,oneof"`
}

type Envelope_UseSkillRequest struct {
	UseSkillRequest *UseSkillRequest `protobuf:"bytes,196613,opt,name=use_skill_request,json=useSkillRequest,proto3,oneof"`
}

type Envelope_UseSkillResponse struct {
	UseSkillResponse *UseSkillResponse `protobuf:"bytes,196614,opt,name=use_skill_response,json=useSkillResponse,proto3,oneof"`
}

type Envelope_RespawnPlayerRequest struct {
	RespawnPlayerRequest *RespawnPlayerRequest `protobuf:"bytes,196617,opt,name=respawn_player_request,json=respawnPlayerRequest,proto3,oneof"`
}

type Envelope_RespawnPlayerResponse struct {
	RespawnPlayerResponse *RespawnPlayerResponse `protobuf:"bytes,196624,opt,name=respawn_player_response,json=respawnPlayerResponse,proto3,oneof"`
}

type Envelope_BroadCastInitMapElementResponse struct {
	BroadCastInitMapElementResponse *BroadCastInitMapElementResponse `protobuf:"bytes,196625,opt,name=broad_cast_init_map_element_response,json=broadCastInitMapElementResponse,proto3,oneof"`
}

type Envelope_BroadCastMapEntityUpdateResponse struct {
	BroadCastMapEntityUpdateResponse *BroadCastMapEntityUpdateResponse `protobuf:"bytes,196626,opt,name=broad_cast_map_entity_update_response,json=broadCastMapEntityUpdateResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityDestroyResponse struct {
	BroadCastEntityDestroyResponse *BroadCastEntityDestroyResponse `protobuf:"bytes,196627,opt,name=broad_cast_entity_destroy_response,json=broadCastEntityDestroyResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityMoveResponse struct {
	BroadCastEntityMoveResponse *BroadCastEntityMoveResponse `protobuf:"bytes,196628,opt,name=broad_cast_entity_move_response,json=broadCastEntityMoveResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityCombatResponse struct {
	BroadCastEntityCombatResponse *BroadCastEntityCombatResponse `protobuf:"bytes,196629,opt,name=broad_cast_entity_combat_response,json=broadCastEntityCombatResponse,proto3,oneof"`
}

type Envelope_BroadCastRespawnPlayerResponse struct {
	BroadCastRespawnPlayerResponse *BroadCastRespawnPlayerResponse `protobuf:"bytes,196630,opt,name=broad_cast_respawn_player_response,json=broadCastRespawnPlayerResponse,proto3,oneof"`
}

type Envelope_TeleportRequest struct {
	TeleportRequest *TeleportRequest `protobuf:"bytes,196631,opt,name=teleport_request,json=teleportRequest,proto3,oneof"`
}

type Envelope_TeleportResponse struct {
	TeleportResponse *TeleportResponse `protobuf:"bytes,196632,opt,name=teleport_response,json=teleportResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityProfileUpdateResponse struct {
	BroadCastEntityProfileUpdateResponse *BroadCastEntityProfileUpdateResponse `protobuf:"bytes,196633,opt,name=broad_cast_entity_profile_update_response,json=broadCastEntityProfileUpdateResponse,proto3,oneof"`
}

type Envelope_BroadCastMonsterDeathResponse struct {
	BroadCastMonsterDeathResponse *BroadCastMonsterDeathResponse `protobuf:"bytes,196641,opt,name=broad_cast_monster_death_response,json=broadCastMonsterDeathResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityAvatarUpdateResponse struct {
	BroadCastEntityAvatarUpdateResponse *BroadCastEntityAvatarUpdateResponse `protobuf:"bytes,196642,opt,name=broad_cast_entity_avatar_update_response,json=broadCastEntityAvatarUpdateResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityBattleDataUpdateResponse struct {
	BroadCastEntityBattleDataUpdateResponse *BroadCastEntityBattleDataUpdateResponse `protobuf:"bytes,196643,opt,name=broad_cast_entity_battle_data_update_response,json=broadCastEntityBattleDataUpdateResponse,proto3,oneof"`
}

type Envelope_BroadCastEntityBuildDataUpdateResponse struct {
	BroadCastEntityBuildDataUpdateResponse *BroadCastEntityBuildDataUpdateResponse `protobuf:"bytes,196645,opt,name=broad_cast_entity_build_data_update_response,json=broadCastEntityBuildDataUpdateResponse,proto3,oneof"`
}

type Envelope_PlayerActionCollectRequest struct {
	PlayerActionCollectRequest *PlayerActionCollectRequest `protobuf:"bytes,196647,opt,name=player_action_collect_request,json=playerActionCollectRequest,proto3,oneof"`
}

type Envelope_PlayerActionCollectResponse struct {
	PlayerActionCollectResponse *PlayerActionCollectResponse `protobuf:"bytes,196649,opt,name=player_action_collect_response,json=playerActionCollectResponse,proto3,oneof"`
}

type Envelope_BroadCastPlayerActionCollectResponse struct {
	BroadCastPlayerActionCollectResponse *BroadCastPlayerActionCollectResponse `protobuf:"bytes,196657,opt,name=broad_cast_player_action_collect_response,json=broadCastPlayerActionCollectResponse,proto3,oneof"`
}

type Envelope_SceneDestructionRequest struct {
	SceneDestructionRequest *SceneDestructionRequest `protobuf:"bytes,196659,opt,name=scene_destruction_request,json=sceneDestructionRequest,proto3,oneof"`
}

type Envelope_SceneDestructionResponse struct {
	SceneDestructionResponse *SceneDestructionResponse `protobuf:"bytes,196660,opt,name=scene_destruction_response,json=sceneDestructionResponse,proto3,oneof"`
}

type Envelope_BroadCastSceneDestructionResponse struct {
	BroadCastSceneDestructionResponse *BroadCastSceneDestructionResponse `protobuf:"bytes,196661,opt,name=broad_cast_scene_destruction_response,json=broadCastSceneDestructionResponse,proto3,oneof"`
}

type Envelope_PlayerActionChatRequest struct {
	PlayerActionChatRequest *PlayerActionChatRequest `protobuf:"bytes,196663,opt,name=player_action_chat_request,json=playerActionChatRequest,proto3,oneof"`
}

type Envelope_PlayerActionChatResponse struct {
	PlayerActionChatResponse *PlayerActionChatResponse `protobuf:"bytes,196664,opt,name=player_action_chat_response,json=playerActionChatResponse,proto3,oneof"`
}

type Envelope_BroadCastPlayerActionChatResponse struct {
	BroadCastPlayerActionChatResponse *BroadCastPlayerActionChatResponse `protobuf:"bytes,196665,opt,name=broad_cast_player_action_chat_response,json=broadCastPlayerActionChatResponse,proto3,oneof"`
}

type Envelope_GetHomeDataRequest struct {
	GetHomeDataRequest *GetHomeDataRequest `protobuf:"bytes,196673,opt,name=get_home_data_request,json=getHomeDataRequest,proto3,oneof"`
}

type Envelope_GetHomeDataResponse struct {
	GetHomeDataResponse *GetHomeDataResponse `protobuf:"bytes,196674,opt,name=get_home_data_response,json=getHomeDataResponse,proto3,oneof"`
}

type Envelope_Query_ServerTimeRequest struct {
	Query_ServerTimeRequest *QueryServerTimeRequest `protobuf:"bytes,196675,opt,name=query_Server_time_request,json=queryServerTimeRequest,proto3,oneof"`
}

type Envelope_Query_ServerTimeResponse struct {
	Query_ServerTimeResponse *QueryServerTimeResponse `protobuf:"bytes,196676,opt,name=query_Server_time_response,json=queryServerTimeResponse,proto3,oneof"`
}

type Envelope_BroadCastChangeServiceResponse struct {
	BroadCastChangeServiceResponse *BroadCastChangeServiceResponse `protobuf:"bytes,196677,opt,name=broad_cast_change_service_response,json=broadCastChangeServiceResponse,proto3,oneof"`
}

type Envelope_HomeResourceOperateRequest struct {
	HomeResourceOperateRequest *HomeResourceOperateRequest `protobuf:"bytes,196679,opt,name=home_resource_operate_request,json=homeResourceOperateRequest,proto3,oneof"`
}

type Envelope_HomeResourceOperateResponse struct {
	HomeResourceOperateResponse *HomeResourceOperateResponse `protobuf:"bytes,196680,opt,name=home_resource_operate_response,json=homeResourceOperateResponse,proto3,oneof"`
}

type Envelope_BroadCastHomeDataInitBatchResponse struct {
	BroadCastHomeDataInitBatchResponse *BroadCastHomeDataInitBatchResponse `protobuf:"bytes,196681,opt,name=broad_cast_home_data_init_batch_response,json=broadCastHomeDataInitBatchResponse,proto3,oneof"`
}

type Envelope_QueryTalentTreeRequest struct {
	QueryTalentTreeRequest *QueryTalentTreeRequest `protobuf:"bytes,196689,opt,name=query_talent_tree_request,json=queryTalentTreeRequest,proto3,oneof"`
}

type Envelope_QueryTalentTreeResponse struct {
	QueryTalentTreeResponse *QueryTalentTreeResponse `protobuf:"bytes,196690,opt,name=query_talent_tree_response,json=queryTalentTreeResponse,proto3,oneof"`
}

type Envelope_BroadCastTalentTreeUpdateResponse struct {
	BroadCastTalentTreeUpdateResponse *BroadCastTalentTreeUpdateResponse `protobuf:"bytes,196691,opt,name=broad_cast_talent_tree_update_response,json=broadCastTalentTreeUpdateResponse,proto3,oneof"`
}

type Envelope_SelfTasksRequest struct {
	//taskServer协议 : 0x04ZZZZ  任务服务 协议 ************************************
	SelfTasksRequest *SelfTasksRequest `protobuf:"bytes,262145,opt,name=self_tasks_request,json=selfTasksRequest,proto3,oneof"`
}

type Envelope_SelfTasksResponse struct {
	SelfTasksResponse *SelfTasksResponse `protobuf:"bytes,262146,opt,name=self_tasks_response,json=selfTasksResponse,proto3,oneof"`
}

type Envelope_BroadCastUpdateTaskListResponse struct {
	BroadCastUpdateTaskListResponse *BroadCastUpdateTaskListResponse `protobuf:"bytes,262147,opt,name=broad_cast_update_task_list_response,json=broadCastUpdateTaskListResponse,proto3,oneof"`
}

type Envelope_AcceptTaskRequest struct {
	AcceptTaskRequest *AcceptTaskRequest `protobuf:"bytes,262148,opt,name=accept_task_request,json=acceptTaskRequest,proto3,oneof"`
}

type Envelope_AcceptTaskResponse struct {
	AcceptTaskResponse *AcceptTaskResponse `protobuf:"bytes,262149,opt,name=accept_task_response,json=acceptTaskResponse,proto3,oneof"`
}

type Envelope_AbandonmentTaskRequest struct {
	AbandonmentTaskRequest *AbandonmentTaskRequest `protobuf:"bytes,262150,opt,name=abandonment_task_request,json=abandonmentTaskRequest,proto3,oneof"`
}

type Envelope_AbandonmentTaskResponse struct {
	AbandonmentTaskResponse *AbandonmentTaskResponse `protobuf:"bytes,262151,opt,name=abandonment_task_response,json=abandonmentTaskResponse,proto3,oneof"`
}

type Envelope_TaskRewardRequest struct {
	TaskRewardRequest *TaskRewardRequest `protobuf:"bytes,262152,opt,name=task_reward_request,json=taskRewardRequest,proto3,oneof"`
}

type Envelope_TaskRewardResponse struct {
	TaskRewardResponse *TaskRewardResponse `protobuf:"bytes,262153,opt,name=task_reward_response,json=taskRewardResponse,proto3,oneof"`
}

type Envelope_TaskListRewardRequest struct {
	TaskListRewardRequest *TaskListRewardRequest `protobuf:"bytes,262160,opt,name=task_list_reward_request,json=taskListRewardRequest,proto3,oneof"`
}

type Envelope_TaskListRewardResponse struct {
	TaskListRewardResponse *TaskListRewardResponse `protobuf:"bytes,262161,opt,name=task_list_reward_response,json=taskListRewardResponse,proto3,oneof"`
}

type Envelope_UpgradeTaskProgressRequest struct {
	UpgradeTaskProgressRequest *UpgradeTaskProgressRequest `protobuf:"bytes,262162,opt,name=upgrade_task_progress_request,json=upgradeTaskProgressRequest,proto3,oneof"`
}

type Envelope_UpgradeTaskProgressResponse struct {
	UpgradeTaskProgressResponse *UpgradeTaskProgressResponse `protobuf:"bytes,262163,opt,name=upgrade_task_progress_response,json=upgradeTaskProgressResponse,proto3,oneof"`
}

type Envelope_BroadCastTaskRewardResponse struct {
	BroadCastTaskRewardResponse *BroadCastTaskRewardResponse `protobuf:"bytes,262164,opt,name=broad_cast_task_reward_response,json=broadCastTaskRewardResponse,proto3,oneof"`
}

type Envelope_SendChatMessageRequest struct {
	//chatServer协议 : 0x05ZZZZ  聊天服务 协议 ************************************
	SendChatMessageRequest *SendChatMessageRequest `protobuf:"bytes,5308417,opt,name=send_chat_message_request,json=sendChatMessageRequest,proto3,oneof"`
}

type Envelope_SendChatMessageResponse struct {
	SendChatMessageResponse *SendChatMessageResponse `protobuf:"bytes,5308418,opt,name=send_chat_message_response,json=sendChatMessageResponse,proto3,oneof"`
}

type Envelope_BroadCastChatMessagesResponse struct {
	BroadCastChatMessagesResponse *BroadCastChatMessagesResponse `protobuf:"bytes,5308419,opt,name=broad_cast_chat_messages_response,json=broadCastChatMessagesResponse,proto3,oneof"`
}

type Envelope_BroadCastRemoveChatMessageResponse struct {
	BroadCastRemoveChatMessageResponse *BroadCastRemoveChatMessageResponse `protobuf:"bytes,5308420,opt,name=broad_cast_remove_chat_message_response,json=broadCastRemoveChatMessageResponse,proto3,oneof"`
}

type Envelope_BroadCastUpdateChatStateResponse struct {
	BroadCastUpdateChatStateResponse *BroadCastUpdateChatStateResponse `protobuf:"bytes,5308421,opt,name=broad_cast_update_chat_state_response,json=broadCastUpdateChatStateResponse,proto3,oneof"`
}

type Envelope_PingRequest struct {
	//getaway   协议 : 0x06ZZZZ  网关服务 协议 ************************************
	PingRequest *PingRequest `protobuf:"bytes,393217,opt,name=ping_request,json=pingRequest,proto3,oneof"`
}

type Envelope_PingResponse struct {
	PingResponse *PingResponse `protobuf:"bytes,393218,opt,name=ping_response,json=pingResponse,proto3,oneof"`
}

func (*Envelope_BroadCastTickOutResponse) isEnvelope_Payload() {}

func (*Envelope_ItemGetRequest) isEnvelope_Payload() {}

func (*Envelope_ItemGetResponse) isEnvelope_Payload() {}

func (*Envelope_ItemUseRequest) isEnvelope_Payload() {}

func (*Envelope_ItemUseResponse) isEnvelope_Payload() {}

func (*Envelope_ItemDropRequest) isEnvelope_Payload() {}

func (*Envelope_ItemDropResponse) isEnvelope_Payload() {}

func (*Envelope_UpdateAvatarRequest) isEnvelope_Payload() {}

func (*Envelope_UpdateAvatarResponse) isEnvelope_Payload() {}

func (*Envelope_UnloadAvatarRequest) isEnvelope_Payload() {}

func (*Envelope_UnloadAvatarResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastItemAddResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastItemUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastItemDelResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastUpdateItemSlotResponse) isEnvelope_Payload() {}

func (*Envelope_GetItemSlotRequest) isEnvelope_Payload() {}

func (*Envelope_GetItemSlotResponse) isEnvelope_Payload() {}

func (*Envelope_UpgradeItemSlotRequest) isEnvelope_Payload() {}

func (*Envelope_UpgradeItemSlotResponse) isEnvelope_Payload() {}

func (*Envelope_SigninPlayerRequest) isEnvelope_Payload() {}

func (*Envelope_SigninPlayerResponse) isEnvelope_Payload() {}

func (*Envelope_SignOutPlayerRequest) isEnvelope_Payload() {}

func (*Envelope_SignOutPlayerResponse) isEnvelope_Payload() {}

func (*Envelope_UpgradePlayerLevelRequest) isEnvelope_Payload() {}

func (*Envelope_UpgradePlayerLevelResponse) isEnvelope_Payload() {}

func (*Envelope_QueryLandsRequest) isEnvelope_Payload() {}

func (*Envelope_QueryLandsResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastInitLandResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastInitItemResponse) isEnvelope_Payload() {}

func (*Envelope_BuildRequest) isEnvelope_Payload() {}

func (*Envelope_BuildResponse) isEnvelope_Payload() {}

func (*Envelope_RecyclingRequest) isEnvelope_Payload() {}

func (*Envelope_RecyclingResponse) isEnvelope_Payload() {}

func (*Envelope_ChargedRequest) isEnvelope_Payload() {}

func (*Envelope_ChargedResponse) isEnvelope_Payload() {}

func (*Envelope_HarvestRequest) isEnvelope_Payload() {}

func (*Envelope_HarvestResponse) isEnvelope_Payload() {}

func (*Envelope_CollectionRequest) isEnvelope_Payload() {}

func (*Envelope_CollectionResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastMultiUpLandResponse) isEnvelope_Payload() {}

func (*Envelope_SelfNftBuildsRequest) isEnvelope_Payload() {}

func (*Envelope_SelfNftBuildsResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastSelfBuildUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastSelfBuildRecyclingResponse) isEnvelope_Payload() {}

func (*Envelope_MintBatteryRequest) isEnvelope_Payload() {}

func (*Envelope_MintBatteryResponse) isEnvelope_Payload() {}

func (*Envelope_QueryGranaryRequest) isEnvelope_Payload() {}

func (*Envelope_QueryGranaryResponse) isEnvelope_Payload() {}

func (*Envelope_GranaryCollectRequest) isEnvelope_Payload() {}

func (*Envelope_GranaryCollectResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastGranaryUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastUpGranaryItemResponse) isEnvelope_Payload() {}

func (*Envelope_UpgradeTalentNodeRequest) isEnvelope_Payload() {}

func (*Envelope_UpgradeTalentNodeResponse) isEnvelope_Payload() {}

func (*Envelope_QueryTalentExpRequest) isEnvelope_Payload() {}

func (*Envelope_QueryTalentExpResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastUpTalentExpResponse) isEnvelope_Payload() {}

func (*Envelope_QueryPlayerRequest) isEnvelope_Payload() {}

func (*Envelope_QueryPlayerResponse) isEnvelope_Payload() {}

func (*Envelope_CreatePlayerRequest) isEnvelope_Payload() {}

func (*Envelope_CreatePlayerResponse) isEnvelope_Payload() {}

func (*Envelope_EnterMapRequest) isEnvelope_Payload() {}

func (*Envelope_EnterMapResponse) isEnvelope_Payload() {}

func (*Envelope_UpdateSelfLocationRequest) isEnvelope_Payload() {}

func (*Envelope_UpdateSelfLocationResponse) isEnvelope_Payload() {}

func (*Envelope_UseSkillRequest) isEnvelope_Payload() {}

func (*Envelope_UseSkillResponse) isEnvelope_Payload() {}

func (*Envelope_RespawnPlayerRequest) isEnvelope_Payload() {}

func (*Envelope_RespawnPlayerResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastInitMapElementResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastMapEntityUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityDestroyResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityMoveResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityCombatResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastRespawnPlayerResponse) isEnvelope_Payload() {}

func (*Envelope_TeleportRequest) isEnvelope_Payload() {}

func (*Envelope_TeleportResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityProfileUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastMonsterDeathResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityAvatarUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityBattleDataUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastEntityBuildDataUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_PlayerActionCollectRequest) isEnvelope_Payload() {}

func (*Envelope_PlayerActionCollectResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastPlayerActionCollectResponse) isEnvelope_Payload() {}

func (*Envelope_SceneDestructionRequest) isEnvelope_Payload() {}

func (*Envelope_SceneDestructionResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastSceneDestructionResponse) isEnvelope_Payload() {}

func (*Envelope_PlayerActionChatRequest) isEnvelope_Payload() {}

func (*Envelope_PlayerActionChatResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastPlayerActionChatResponse) isEnvelope_Payload() {}

func (*Envelope_GetHomeDataRequest) isEnvelope_Payload() {}

func (*Envelope_GetHomeDataResponse) isEnvelope_Payload() {}

func (*Envelope_Query_ServerTimeRequest) isEnvelope_Payload() {}

func (*Envelope_Query_ServerTimeResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastChangeServiceResponse) isEnvelope_Payload() {}

func (*Envelope_HomeResourceOperateRequest) isEnvelope_Payload() {}

func (*Envelope_HomeResourceOperateResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastHomeDataInitBatchResponse) isEnvelope_Payload() {}

func (*Envelope_QueryTalentTreeRequest) isEnvelope_Payload() {}

func (*Envelope_QueryTalentTreeResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastTalentTreeUpdateResponse) isEnvelope_Payload() {}

func (*Envelope_SelfTasksRequest) isEnvelope_Payload() {}

func (*Envelope_SelfTasksResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastUpdateTaskListResponse) isEnvelope_Payload() {}

func (*Envelope_AcceptTaskRequest) isEnvelope_Payload() {}

func (*Envelope_AcceptTaskResponse) isEnvelope_Payload() {}

func (*Envelope_AbandonmentTaskRequest) isEnvelope_Payload() {}

func (*Envelope_AbandonmentTaskResponse) isEnvelope_Payload() {}

func (*Envelope_TaskRewardRequest) isEnvelope_Payload() {}

func (*Envelope_TaskRewardResponse) isEnvelope_Payload() {}

func (*Envelope_TaskListRewardRequest) isEnvelope_Payload() {}

func (*Envelope_TaskListRewardResponse) isEnvelope_Payload() {}

func (*Envelope_UpgradeTaskProgressRequest) isEnvelope_Payload() {}

func (*Envelope_UpgradeTaskProgressResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastTaskRewardResponse) isEnvelope_Payload() {}

func (*Envelope_SendChatMessageRequest) isEnvelope_Payload() {}

func (*Envelope_SendChatMessageResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastChatMessagesResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastRemoveChatMessageResponse) isEnvelope_Payload() {}

func (*Envelope_BroadCastUpdateChatStateResponse) isEnvelope_Payload() {}

func (*Envelope_PingRequest) isEnvelope_Payload() {}

func (*Envelope_PingResponse) isEnvelope_Payload() {}

type BroadCastTickOutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind TickOutType `protobuf:"varint,1,opt,name=kind,proto3,enum=gameMessageCore.TickOutType" json:"kind,omitempty"`
}

func (x *BroadCastTickOutResponse) Reset() {
	*x = BroadCastTickOutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastTickOutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastTickOutResponse) ProtoMessage() {}

func (x *BroadCastTickOutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastTickOutResponse.ProtoReflect.Descriptor instead.
func (*BroadCastTickOutResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{1}
}

func (x *BroadCastTickOutResponse) GetKind() TickOutType {
	if x != nil {
		return x.Kind
	}
	return TickOutType_TickOutTypeUnknown
}

//mainServer协议 : 0x01ZZZZ  主数据服务协议************************************
type ItemGetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ItemGetRequest) Reset() {
	*x = ItemGetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGetRequest) ProtoMessage() {}

func (x *ItemGetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGetRequest.ProtoReflect.Descriptor instead.
func (*ItemGetRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{2}
}

type ItemGetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ItemGetResponse) Reset() {
	*x = ItemGetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemGetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemGetResponse) ProtoMessage() {}

func (x *ItemGetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemGetResponse.ProtoReflect.Descriptor instead.
func (*ItemGetResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{3}
}

type BroadCastInitItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BroadCastInitItemResponse) Reset() {
	*x = BroadCastInitItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastInitItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastInitItemResponse) ProtoMessage() {}

func (x *BroadCastInitItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastInitItemResponse.ProtoReflect.Descriptor instead.
func (*BroadCastInitItemResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{4}
}

func (x *BroadCastInitItemResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type ItemUseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 使用的道具 id
	ItemId string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	// 使用消耗品的动态参数
	Args string `protobuf:"bytes,2,opt,name=args,proto3" json:"args,omitempty"`
}

func (x *ItemUseRequest) Reset() {
	*x = ItemUseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseRequest) ProtoMessage() {}

func (x *ItemUseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseRequest.ProtoReflect.Descriptor instead.
func (*ItemUseRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{5}
}

func (x *ItemUseRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemUseRequest) GetArgs() string {
	if x != nil {
		return x.Args
	}
	return ""
}

type ItemUseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ItemUseResponse) Reset() {
	*x = ItemUseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemUseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemUseResponse) ProtoMessage() {}

func (x *ItemUseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemUseResponse.ProtoReflect.Descriptor instead.
func (*ItemUseResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{6}
}

type ItemDropRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
	Num    int32  `protobuf:"varint,2,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *ItemDropRequest) Reset() {
	*x = ItemDropRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemDropRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDropRequest) ProtoMessage() {}

func (x *ItemDropRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDropRequest.ProtoReflect.Descriptor instead.
func (*ItemDropRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{7}
}

func (x *ItemDropRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *ItemDropRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type ItemDropResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ItemDropResponse) Reset() {
	*x = ItemDropResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ItemDropResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemDropResponse) ProtoMessage() {}

func (x *ItemDropResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemDropResponse.ProtoReflect.Descriptor instead.
func (*ItemDropResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{8}
}

// 穿装备
type UpdateAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId       string `protobuf:"bytes,1,opt,name=itemId,proto3" json:"itemId,omitempty"`
	IsAppearance bool   `protobuf:"varint,2,opt,name=isAppearance,proto3" json:"isAppearance,omitempty"` // 是否使用为时装
}

func (x *UpdateAvatarRequest) Reset() {
	*x = UpdateAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvatarRequest) ProtoMessage() {}

func (x *UpdateAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvatarRequest.ProtoReflect.Descriptor instead.
func (*UpdateAvatarRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateAvatarRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

func (x *UpdateAvatarRequest) GetIsAppearance() bool {
	if x != nil {
		return x.IsAppearance
	}
	return false
}

type UpdateAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAvatarResponse) Reset() {
	*x = UpdateAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAvatarResponse) ProtoMessage() {}

func (x *UpdateAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAvatarResponse.ProtoReflect.Descriptor instead.
func (*UpdateAvatarResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{10}
}

// 卸下装备
type UnloadAvatarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemId string `protobuf:"bytes,1,opt,name=item_id,json=itemId,proto3" json:"item_id,omitempty"`
}

func (x *UnloadAvatarRequest) Reset() {
	*x = UnloadAvatarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadAvatarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadAvatarRequest) ProtoMessage() {}

func (x *UnloadAvatarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadAvatarRequest.ProtoReflect.Descriptor instead.
func (*UnloadAvatarRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{11}
}

func (x *UnloadAvatarRequest) GetItemId() string {
	if x != nil {
		return x.ItemId
	}
	return ""
}

type UnloadAvatarResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnloadAvatarResponse) Reset() {
	*x = UnloadAvatarResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnloadAvatarResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnloadAvatarResponse) ProtoMessage() {}

func (x *UnloadAvatarResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnloadAvatarResponse.ProtoReflect.Descriptor instead.
func (*UnloadAvatarResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{12}
}

type BroadCastItemAddResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BroadCastItemAddResponse) Reset() {
	*x = BroadCastItemAddResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastItemAddResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastItemAddResponse) ProtoMessage() {}

func (x *BroadCastItemAddResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastItemAddResponse.ProtoReflect.Descriptor instead.
func (*BroadCastItemAddResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{13}
}

func (x *BroadCastItemAddResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BroadCastItemUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BroadCastItemUpdateResponse) Reset() {
	*x = BroadCastItemUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastItemUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastItemUpdateResponse) ProtoMessage() {}

func (x *BroadCastItemUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastItemUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastItemUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{14}
}

func (x *BroadCastItemUpdateResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BroadCastItemDelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*Item `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BroadCastItemDelResponse) Reset() {
	*x = BroadCastItemDelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastItemDelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastItemDelResponse) ProtoMessage() {}

func (x *BroadCastItemDelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastItemDelResponse.ProtoReflect.Descriptor instead.
func (*BroadCastItemDelResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{15}
}

func (x *BroadCastItemDelResponse) GetItems() []*Item {
	if x != nil {
		return x.Items
	}
	return nil
}

type BroadCastUpdateItemSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots []*ItemSlot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *BroadCastUpdateItemSlotResponse) Reset() {
	*x = BroadCastUpdateItemSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastUpdateItemSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastUpdateItemSlotResponse) ProtoMessage() {}

func (x *BroadCastUpdateItemSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastUpdateItemSlotResponse.ProtoReflect.Descriptor instead.
func (*BroadCastUpdateItemSlotResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{16}
}

func (x *BroadCastUpdateItemSlotResponse) GetSlots() []*ItemSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type GetItemSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetItemSlotRequest) Reset() {
	*x = GetItemSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemSlotRequest) ProtoMessage() {}

func (x *GetItemSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemSlotRequest.ProtoReflect.Descriptor instead.
func (*GetItemSlotRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{17}
}

type GetItemSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots []*ItemSlot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *GetItemSlotResponse) Reset() {
	*x = GetItemSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetItemSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetItemSlotResponse) ProtoMessage() {}

func (x *GetItemSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetItemSlotResponse.ProtoReflect.Descriptor instead.
func (*GetItemSlotResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{18}
}

func (x *GetItemSlotResponse) GetSlots() []*ItemSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type UpgradeItemSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Position AvatarPosition `protobuf:"varint,1,opt,name=position,proto3,enum=gameMessageCore.AvatarPosition" json:"position,omitempty"`
}

func (x *UpgradeItemSlotRequest) Reset() {
	*x = UpgradeItemSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeItemSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeItemSlotRequest) ProtoMessage() {}

func (x *UpgradeItemSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeItemSlotRequest.ProtoReflect.Descriptor instead.
func (*UpgradeItemSlotRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{19}
}

func (x *UpgradeItemSlotRequest) GetPosition() AvatarPosition {
	if x != nil {
		return x.Position
	}
	return AvatarPosition_AvatarPositionNone
}

type UpgradeItemSlotResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Slots []*ItemSlot `protobuf:"bytes,1,rep,name=slots,proto3" json:"slots,omitempty"`
}

func (x *UpgradeItemSlotResponse) Reset() {
	*x = UpgradeItemSlotResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeItemSlotResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeItemSlotResponse) ProtoMessage() {}

func (x *UpgradeItemSlotResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeItemSlotResponse.ProtoReflect.Descriptor instead.
func (*UpgradeItemSlotResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{20}
}

func (x *UpgradeItemSlotResponse) GetSlots() []*ItemSlot {
	if x != nil {
		return x.Slots
	}
	return nil
}

type SigninPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64        `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Token      string       `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"` // token校验信息
	ClientTime int64        `protobuf:"varint,3,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
	Reconnect  bool         `protobuf:"varint,4,opt,name=reconnect,proto3" json:"reconnect,omitempty"`
	OsType     OSType       `protobuf:"varint,5,opt,name=os_type,json=osType,proto3,enum=gameMessageCore.OSType" json:"os_type,omitempty"` // 渠道(android/ios)
	Platform   PlatformType `protobuf:"varint,6,opt,name=platform,proto3,enum=gameMessageCore.PlatformType" json:"platform,omitempty"`     // 平台(taptap...)
	// 客户端期望链接的scene_service_app_id,仅在开发模式有效
	SceneServiceAppId string `protobuf:"bytes,7,opt,name=scene_service_app_id,json=sceneServiceAppId,proto3" json:"scene_service_app_id,omitempty"`
}

func (x *SigninPlayerRequest) Reset() {
	*x = SigninPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigninPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigninPlayerRequest) ProtoMessage() {}

func (x *SigninPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigninPlayerRequest.ProtoReflect.Descriptor instead.
func (*SigninPlayerRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{21}
}

func (x *SigninPlayerRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SigninPlayerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *SigninPlayerRequest) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

func (x *SigninPlayerRequest) GetReconnect() bool {
	if x != nil {
		return x.Reconnect
	}
	return false
}

func (x *SigninPlayerRequest) GetOsType() OSType {
	if x != nil {
		return x.OsType
	}
	return OSType_OSTypeUnknow
}

func (x *SigninPlayerRequest) GetPlatform() PlatformType {
	if x != nil {
		return x.Platform
	}
	return PlatformType_PlatformUnKnow
}

func (x *SigninPlayerRequest) GetSceneServiceAppId() string {
	if x != nil {
		return x.SceneServiceAppId
	}
	return ""
}

type SigninPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player            *Player `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"` // 玩家信息
	ServerTime        int64   `protobuf:"varint,2,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	ClientTime        int64   `protobuf:"varint,3,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
	SceneServiceAppId string  `protobuf:"bytes,4,opt,name=scene_service_app_id,json=sceneServiceAppId,proto3" json:"scene_service_app_id,omitempty"`
	LastLoginTime     int64   `protobuf:"varint,5,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"` //上次登录banner的时间
}

func (x *SigninPlayerResponse) Reset() {
	*x = SigninPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SigninPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SigninPlayerResponse) ProtoMessage() {}

func (x *SigninPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SigninPlayerResponse.ProtoReflect.Descriptor instead.
func (*SigninPlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{22}
}

func (x *SigninPlayerResponse) GetPlayer() *Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *SigninPlayerResponse) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *SigninPlayerResponse) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

func (x *SigninPlayerResponse) GetSceneServiceAppId() string {
	if x != nil {
		return x.SceneServiceAppId
	}
	return ""
}

func (x *SigninPlayerResponse) GetLastLoginTime() int64 {
	if x != nil {
		return x.LastLoginTime
	}
	return 0
}

type SignOutPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignOutPlayerRequest) Reset() {
	*x = SignOutPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutPlayerRequest) ProtoMessage() {}

func (x *SignOutPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutPlayerRequest.ProtoReflect.Descriptor instead.
func (*SignOutPlayerRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{23}
}

type SignOutPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SignOutPlayerResponse) Reset() {
	*x = SignOutPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignOutPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignOutPlayerResponse) ProtoMessage() {}

func (x *SignOutPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignOutPlayerResponse.ProtoReflect.Descriptor instead.
func (*SignOutPlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{24}
}

type BroadCastEntityProfileUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId *EntityId              `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	Profiles []*EntityProfileUpdate `protobuf:"bytes,2,rep,name=profiles,proto3" json:"profiles,omitempty"`
}

func (x *BroadCastEntityProfileUpdateResponse) Reset() {
	*x = BroadCastEntityProfileUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityProfileUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityProfileUpdateResponse) ProtoMessage() {}

func (x *BroadCastEntityProfileUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityProfileUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityProfileUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{25}
}

func (x *BroadCastEntityProfileUpdateResponse) GetEntityId() *EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *BroadCastEntityProfileUpdateResponse) GetProfiles() []*EntityProfileUpdate {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type BroadCastMonsterDeathResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MapId     int32           `protobuf:"varint,1,opt,name=map_id,json=mapId,proto3" json:"map_id,omitempty"`
	KillerId  int64           `protobuf:"varint,2,opt,name=killer_id,json=killerId,proto3" json:"killer_id,omitempty"`
	MonsterId int64           `protobuf:"varint,3,opt,name=monster_id,json=monsterId,proto3" json:"monster_id,omitempty"`
	Cid       int32           `protobuf:"varint,4,opt,name=cid,proto3" json:"cid,omitempty"`
	Pos       *Vector3        `protobuf:"bytes,5,opt,name=pos,proto3" json:"pos,omitempty"`
	DropList  []*ItemBaseInfo `protobuf:"bytes,6,rep,name=drop_list,json=dropList,proto3" json:"drop_list,omitempty"`
}

func (x *BroadCastMonsterDeathResponse) Reset() {
	*x = BroadCastMonsterDeathResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastMonsterDeathResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastMonsterDeathResponse) ProtoMessage() {}

func (x *BroadCastMonsterDeathResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastMonsterDeathResponse.ProtoReflect.Descriptor instead.
func (*BroadCastMonsterDeathResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{26}
}

func (x *BroadCastMonsterDeathResponse) GetMapId() int32 {
	if x != nil {
		return x.MapId
	}
	return 0
}

func (x *BroadCastMonsterDeathResponse) GetKillerId() int64 {
	if x != nil {
		return x.KillerId
	}
	return 0
}

func (x *BroadCastMonsterDeathResponse) GetMonsterId() int64 {
	if x != nil {
		return x.MonsterId
	}
	return 0
}

func (x *BroadCastMonsterDeathResponse) GetCid() int32 {
	if x != nil {
		return x.Cid
	}
	return 0
}

func (x *BroadCastMonsterDeathResponse) GetPos() *Vector3 {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *BroadCastMonsterDeathResponse) GetDropList() []*ItemBaseInfo {
	if x != nil {
		return x.DropList
	}
	return nil
}

type BroadCastEntityBattleDataUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntityId   *EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	IsInBattle bool      `protobuf:"varint,2,opt,name=isInBattle,proto3" json:"isInBattle,omitempty"`
}

func (x *BroadCastEntityBattleDataUpdateResponse) Reset() {
	*x = BroadCastEntityBattleDataUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityBattleDataUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityBattleDataUpdateResponse) ProtoMessage() {}

func (x *BroadCastEntityBattleDataUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityBattleDataUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityBattleDataUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{27}
}

func (x *BroadCastEntityBattleDataUpdateResponse) GetEntityId() *EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *BroadCastEntityBattleDataUpdateResponse) GetIsInBattle() bool {
	if x != nil {
		return x.IsInBattle
	}
	return false
}

type UpgradePlayerLevelRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpgradePlayerLevelRequest) Reset() {
	*x = UpgradePlayerLevelRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradePlayerLevelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradePlayerLevelRequest) ProtoMessage() {}

func (x *UpgradePlayerLevelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradePlayerLevelRequest.ProtoReflect.Descriptor instead.
func (*UpgradePlayerLevelRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{28}
}

type UpgradePlayerLevelResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurLevel int32 `protobuf:"varint,1,opt,name=cur_level,json=curLevel,proto3" json:"cur_level,omitempty"`
	CurExp   int64 `protobuf:"varint,2,opt,name=cur_exp,json=curExp,proto3" json:"cur_exp,omitempty"`
}

func (x *UpgradePlayerLevelResponse) Reset() {
	*x = UpgradePlayerLevelResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradePlayerLevelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradePlayerLevelResponse) ProtoMessage() {}

func (x *UpgradePlayerLevelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradePlayerLevelResponse.ProtoReflect.Descriptor instead.
func (*UpgradePlayerLevelResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{29}
}

func (x *UpgradePlayerLevelResponse) GetCurLevel() int32 {
	if x != nil {
		return x.CurLevel
	}
	return 0
}

func (x *UpgradePlayerLevelResponse) GetCurExp() int64 {
	if x != nil {
		return x.CurExp
	}
	return 0
}

// 占地相关
type QueryLandsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryLandsRequest) Reset() {
	*x = QueryLandsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLandsRequest) ProtoMessage() {}

func (x *QueryLandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLandsRequest.ProtoReflect.Descriptor instead.
func (*QueryLandsRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{30}
}

type QueryLandsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryLandsResponse) Reset() {
	*x = QueryLandsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryLandsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryLandsResponse) ProtoMessage() {}

func (x *QueryLandsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryLandsResponse.ProtoReflect.Descriptor instead.
func (*QueryLandsResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{31}
}

type BroadCastInitLandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lands []*LandData `protobuf:"bytes,1,rep,name=lands,proto3" json:"lands,omitempty"`
}

func (x *BroadCastInitLandResponse) Reset() {
	*x = BroadCastInitLandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastInitLandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastInitLandResponse) ProtoMessage() {}

func (x *BroadCastInitLandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastInitLandResponse.ProtoReflect.Descriptor instead.
func (*BroadCastInitLandResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{32}
}

func (x *BroadCastInitLandResponse) GetLands() []*LandData {
	if x != nil {
		return x.Lands
	}
	return nil
}

type BuildRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NftId    string   `protobuf:"bytes,1,opt,name=nftId,proto3" json:"nftId,omitempty"`
	Position *Vector3 `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
	LandIds  []int32  `protobuf:"varint,3,rep,packed,name=landIds,proto3" json:"landIds,omitempty"`
}

func (x *BuildRequest) Reset() {
	*x = BuildRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildRequest) ProtoMessage() {}

func (x *BuildRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildRequest.ProtoReflect.Descriptor instead.
func (*BuildRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{33}
}

func (x *BuildRequest) GetNftId() string {
	if x != nil {
		return x.NftId
	}
	return ""
}

func (x *BuildRequest) GetPosition() *Vector3 {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *BuildRequest) GetLandIds() []int32 {
	if x != nil {
		return x.LandIds
	}
	return nil
}

type BuildResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Build *NftBuild `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
}

func (x *BuildResponse) Reset() {
	*x = BuildResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildResponse) ProtoMessage() {}

func (x *BuildResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildResponse.ProtoReflect.Descriptor instead.
func (*BuildResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{34}
}

func (x *BuildResponse) GetBuild() *NftBuild {
	if x != nil {
		return x.Build
	}
	return nil
}

type RecyclingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId int64  `protobuf:"varint,1,opt,name=buildId,proto3" json:"buildId,omitempty"` // == entity Id
	NftId   string `protobuf:"bytes,2,opt,name=nftId,proto3" json:"nftId,omitempty"`
}

func (x *RecyclingRequest) Reset() {
	*x = RecyclingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecyclingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecyclingRequest) ProtoMessage() {}

func (x *RecyclingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecyclingRequest.ProtoReflect.Descriptor instead.
func (*RecyclingRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{35}
}

func (x *RecyclingRequest) GetBuildId() int64 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

func (x *RecyclingRequest) GetNftId() string {
	if x != nil {
		return x.NftId
	}
	return ""
}

type RecyclingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RecyclingResponse) Reset() {
	*x = RecyclingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RecyclingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecyclingResponse) ProtoMessage() {}

func (x *RecyclingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecyclingResponse.ProtoReflect.Descriptor instead.
func (*RecyclingResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{36}
}

type ChargedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId int64  `protobuf:"varint,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
	NftId   string `protobuf:"bytes,2,opt,name=nftId,proto3" json:"nftId,omitempty"`
	Num     int32  `protobuf:"varint,3,opt,name=num,proto3" json:"num,omitempty"`
}

func (x *ChargedRequest) Reset() {
	*x = ChargedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargedRequest) ProtoMessage() {}

func (x *ChargedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargedRequest.ProtoReflect.Descriptor instead.
func (*ChargedRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{37}
}

func (x *ChargedRequest) GetBuildId() int64 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

func (x *ChargedRequest) GetNftId() string {
	if x != nil {
		return x.NftId
	}
	return ""
}

func (x *ChargedRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type ChargedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ChargedResponse) Reset() {
	*x = ChargedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChargedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChargedResponse) ProtoMessage() {}

func (x *ChargedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChargedResponse.ProtoReflect.Descriptor instead.
func (*ChargedResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{38}
}

type HarvestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId int64  `protobuf:"varint,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
	NftId   string `protobuf:"bytes,2,opt,name=nftId,proto3" json:"nftId,omitempty"`
}

func (x *HarvestRequest) Reset() {
	*x = HarvestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HarvestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HarvestRequest) ProtoMessage() {}

func (x *HarvestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HarvestRequest.ProtoReflect.Descriptor instead.
func (*HarvestRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{39}
}

func (x *HarvestRequest) GetBuildId() int64 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

func (x *HarvestRequest) GetNftId() string {
	if x != nil {
		return x.NftId
	}
	return ""
}

type HarvestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *HarvestResponse) Reset() {
	*x = HarvestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HarvestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HarvestResponse) ProtoMessage() {}

func (x *HarvestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HarvestResponse.ProtoReflect.Descriptor instead.
func (*HarvestResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{40}
}

type CollectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId int64  `protobuf:"varint,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
	NftId   string `protobuf:"bytes,2,opt,name=nftId,proto3" json:"nftId,omitempty"`
}

func (x *CollectionRequest) Reset() {
	*x = CollectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionRequest) ProtoMessage() {}

func (x *CollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionRequest.ProtoReflect.Descriptor instead.
func (*CollectionRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{41}
}

func (x *CollectionRequest) GetBuildId() int64 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

func (x *CollectionRequest) GetNftId() string {
	if x != nil {
		return x.NftId
	}
	return ""
}

type CollectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CollectionResponse) Reset() {
	*x = CollectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionResponse) ProtoMessage() {}

func (x *CollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionResponse.ProtoReflect.Descriptor instead.
func (*CollectionResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{42}
}

type BroadCastMultiUpLandResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lands []*LandData `protobuf:"bytes,1,rep,name=lands,proto3" json:"lands,omitempty"`
}

func (x *BroadCastMultiUpLandResponse) Reset() {
	*x = BroadCastMultiUpLandResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastMultiUpLandResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastMultiUpLandResponse) ProtoMessage() {}

func (x *BroadCastMultiUpLandResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastMultiUpLandResponse.ProtoReflect.Descriptor instead.
func (*BroadCastMultiUpLandResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{43}
}

func (x *BroadCastMultiUpLandResponse) GetLands() []*LandData {
	if x != nil {
		return x.Lands
	}
	return nil
}

type SelfNftBuildsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SelfNftBuildsRequest) Reset() {
	*x = SelfNftBuildsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfNftBuildsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfNftBuildsRequest) ProtoMessage() {}

func (x *SelfNftBuildsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfNftBuildsRequest.ProtoReflect.Descriptor instead.
func (*SelfNftBuildsRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{44}
}

type SelfNftBuildsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Builds []*NftBuild `protobuf:"bytes,1,rep,name=builds,proto3" json:"builds,omitempty"`
}

func (x *SelfNftBuildsResponse) Reset() {
	*x = SelfNftBuildsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfNftBuildsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfNftBuildsResponse) ProtoMessage() {}

func (x *SelfNftBuildsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfNftBuildsResponse.ProtoReflect.Descriptor instead.
func (*SelfNftBuildsResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{45}
}

func (x *SelfNftBuildsResponse) GetBuilds() []*NftBuild {
	if x != nil {
		return x.Builds
	}
	return nil
}

type BroadCastSelfBuildUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Build *NftBuild `protobuf:"bytes,1,opt,name=build,proto3" json:"build,omitempty"`
}

func (x *BroadCastSelfBuildUpdateResponse) Reset() {
	*x = BroadCastSelfBuildUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastSelfBuildUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastSelfBuildUpdateResponse) ProtoMessage() {}

func (x *BroadCastSelfBuildUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastSelfBuildUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastSelfBuildUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{46}
}

func (x *BroadCastSelfBuildUpdateResponse) GetBuild() *NftBuild {
	if x != nil {
		return x.Build
	}
	return nil
}

type BroadCastSelfBuildRecyclingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BuildId int64  `protobuf:"varint,1,opt,name=buildId,proto3" json:"buildId,omitempty"`
	FromNft string `protobuf:"bytes,2,opt,name=fromNft,proto3" json:"fromNft,omitempty"`
	Owner   int64  `protobuf:"varint,3,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *BroadCastSelfBuildRecyclingResponse) Reset() {
	*x = BroadCastSelfBuildRecyclingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastSelfBuildRecyclingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastSelfBuildRecyclingResponse) ProtoMessage() {}

func (x *BroadCastSelfBuildRecyclingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastSelfBuildRecyclingResponse.ProtoReflect.Descriptor instead.
func (*BroadCastSelfBuildRecyclingResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{47}
}

func (x *BroadCastSelfBuildRecyclingResponse) GetBuildId() int64 {
	if x != nil {
		return x.BuildId
	}
	return 0
}

func (x *BroadCastSelfBuildRecyclingResponse) GetFromNft() string {
	if x != nil {
		return x.FromNft
	}
	return ""
}

func (x *BroadCastSelfBuildRecyclingResponse) GetOwner() int64 {
	if x != nil {
		return x.Owner
	}
	return 0
}

type MintBatteryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// mint 数量
	MintNum int32 `protobuf:"varint,1,opt,name=mintNum,proto3" json:"mintNum,omitempty"`
	// 赠送数量, 由前端传过来, 防止后端配表跟前端不一致时, 出现问题
	GiftNum int32 `protobuf:"varint,2,opt,name=giftNum,proto3" json:"giftNum,omitempty"`
}

func (x *MintBatteryRequest) Reset() {
	*x = MintBatteryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintBatteryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintBatteryRequest) ProtoMessage() {}

func (x *MintBatteryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintBatteryRequest.ProtoReflect.Descriptor instead.
func (*MintBatteryRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{48}
}

func (x *MintBatteryRequest) GetMintNum() int32 {
	if x != nil {
		return x.MintNum
	}
	return 0
}

func (x *MintBatteryRequest) GetGiftNum() int32 {
	if x != nil {
		return x.GiftNum
	}
	return 0
}

type MintBatteryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MintBatteryResponse) Reset() {
	*x = MintBatteryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintBatteryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintBatteryResponse) ProtoMessage() {}

func (x *MintBatteryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintBatteryResponse.ProtoReflect.Descriptor instead.
func (*MintBatteryResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{49}
}

type QueryGranaryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryGranaryRequest) Reset() {
	*x = QueryGranaryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGranaryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGranaryRequest) ProtoMessage() {}

func (x *QueryGranaryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGranaryRequest.ProtoReflect.Descriptor instead.
func (*QueryGranaryRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{50}
}

type QueryGranaryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ItemBaseInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *QueryGranaryResponse) Reset() {
	*x = QueryGranaryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryGranaryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryGranaryResponse) ProtoMessage() {}

func (x *QueryGranaryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryGranaryResponse.ProtoReflect.Descriptor instead.
func (*QueryGranaryResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{51}
}

func (x *QueryGranaryResponse) GetItems() []*ItemBaseInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type GranaryCollectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GranaryCollectRequest) Reset() {
	*x = GranaryCollectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GranaryCollectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GranaryCollectRequest) ProtoMessage() {}

func (x *GranaryCollectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GranaryCollectRequest.ProtoReflect.Descriptor instead.
func (*GranaryCollectRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{52}
}

type GranaryCollectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ItemBaseInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *GranaryCollectResponse) Reset() {
	*x = GranaryCollectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GranaryCollectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GranaryCollectResponse) ProtoMessage() {}

func (x *GranaryCollectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GranaryCollectResponse.ProtoReflect.Descriptor instead.
func (*GranaryCollectResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{53}
}

func (x *GranaryCollectResponse) GetItems() []*ItemBaseInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type BroadCastGranaryUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items []*ItemBaseInfo `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
}

func (x *BroadCastGranaryUpdateResponse) Reset() {
	*x = BroadCastGranaryUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastGranaryUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastGranaryUpdateResponse) ProtoMessage() {}

func (x *BroadCastGranaryUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastGranaryUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastGranaryUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{54}
}

func (x *BroadCastGranaryUpdateResponse) GetItems() []*ItemBaseInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

type BroadCastUpGranaryItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Items *ItemBaseInfo `protobuf:"bytes,1,opt,name=items,proto3" json:"items,omitempty"`
}

func (x *BroadCastUpGranaryItemResponse) Reset() {
	*x = BroadCastUpGranaryItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastUpGranaryItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastUpGranaryItemResponse) ProtoMessage() {}

func (x *BroadCastUpGranaryItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastUpGranaryItemResponse.ProtoReflect.Descriptor instead.
func (*BroadCastUpGranaryItemResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{55}
}

func (x *BroadCastUpGranaryItemResponse) GetItems() *ItemBaseInfo {
	if x != nil {
		return x.Items
	}
	return nil
}

// 天赋树相关
type UpgradeTalentNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   TalentType `protobuf:"varint,1,opt,name=type,proto3,enum=gameMessageCore.TalentType" json:"type,omitempty"`
	NodeId int32      `protobuf:"varint,2,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
}

func (x *UpgradeTalentNodeRequest) Reset() {
	*x = UpgradeTalentNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeTalentNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeTalentNodeRequest) ProtoMessage() {}

func (x *UpgradeTalentNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeTalentNodeRequest.ProtoReflect.Descriptor instead.
func (*UpgradeTalentNodeRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{56}
}

func (x *UpgradeTalentNodeRequest) GetType() TalentType {
	if x != nil {
		return x.Type
	}
	return TalentType_TalentTypeUnknown
}

func (x *UpgradeTalentNodeRequest) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

type UpgradeTalentNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpgradeTalentNodeResponse) Reset() {
	*x = UpgradeTalentNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeTalentNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeTalentNodeResponse) ProtoMessage() {}

func (x *UpgradeTalentNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeTalentNodeResponse.ProtoReflect.Descriptor instead.
func (*UpgradeTalentNodeResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{57}
}

type QueryTalentExpRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryTalentExpRequest) Reset() {
	*x = QueryTalentExpRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTalentExpRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTalentExpRequest) ProtoMessage() {}

func (x *QueryTalentExpRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTalentExpRequest.ProtoReflect.Descriptor instead.
func (*QueryTalentExpRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{58}
}

type QueryTalentExpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpData []*TalentExp `protobuf:"bytes,1,rep,name=expData,proto3" json:"expData,omitempty"`
}

func (x *QueryTalentExpResponse) Reset() {
	*x = QueryTalentExpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTalentExpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTalentExpResponse) ProtoMessage() {}

func (x *QueryTalentExpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTalentExpResponse.ProtoReflect.Descriptor instead.
func (*QueryTalentExpResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{59}
}

func (x *QueryTalentExpResponse) GetExpData() []*TalentExp {
	if x != nil {
		return x.ExpData
	}
	return nil
}

type BroadCastUpTalentExpResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UpdateExps []*TalentExp `protobuf:"bytes,1,rep,name=updateExps,proto3" json:"updateExps,omitempty"`
}

func (x *BroadCastUpTalentExpResponse) Reset() {
	*x = BroadCastUpTalentExpResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastUpTalentExpResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastUpTalentExpResponse) ProtoMessage() {}

func (x *BroadCastUpTalentExpResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastUpTalentExpResponse.ProtoReflect.Descriptor instead.
func (*BroadCastUpTalentExpResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{60}
}

func (x *BroadCastUpTalentExpResponse) GetUpdateExps() []*TalentExp {
	if x != nil {
		return x.UpdateExps
	}
	return nil
}

//accountSer协议 : 0x02ZZZZ  账号服务 协议 ************************************
type QueryPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *QueryPlayerRequest) Reset() {
	*x = QueryPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlayerRequest) ProtoMessage() {}

func (x *QueryPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlayerRequest.ProtoReflect.Descriptor instead.
func (*QueryPlayerRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{61}
}

func (x *QueryPlayerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type QueryPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *PlayerBaseData `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"` // 玩家信息
}

func (x *QueryPlayerResponse) Reset() {
	*x = QueryPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryPlayerResponse) ProtoMessage() {}

func (x *QueryPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryPlayerResponse.ProtoReflect.Descriptor instead.
func (*QueryPlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{62}
}

func (x *QueryPlayerResponse) GetPlayer() *PlayerBaseData {
	if x != nil {
		return x.Player
	}
	return nil
}

type CreatePlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token    string         `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	NickName string         `protobuf:"bytes,2,opt,name=nick_name,json=nickName,proto3" json:"nick_name,omitempty"`                        // 名字
	RoleId   int32          `protobuf:"varint,3,opt,name=role_id,json=roleId,proto3" json:"role_id,omitempty"`                             // 配置 ID
	Gender   string         `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"`                                            // 玩家性别，男生为 male, 女生为 female
	Icon     string         `protobuf:"bytes,5,opt,name=icon,proto3" json:"icon,omitempty"`                                                //角色头像
	Feature  *PlayerFeature `protobuf:"bytes,6,opt,name=feature,proto3" json:"feature,omitempty"`                                          // 容貌数据
	OsType   OSType         `protobuf:"varint,7,opt,name=os_type,json=osType,proto3,enum=gameMessageCore.OSType" json:"os_type,omitempty"` // 渠道(android/ios)
	Platform PlatformType   `protobuf:"varint,8,opt,name=platform,proto3,enum=gameMessageCore.PlatformType" json:"platform,omitempty"`     // 平台(taptap...)
}

func (x *CreatePlayerRequest) Reset() {
	*x = CreatePlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayerRequest) ProtoMessage() {}

func (x *CreatePlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayerRequest.ProtoReflect.Descriptor instead.
func (*CreatePlayerRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{63}
}

func (x *CreatePlayerRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *CreatePlayerRequest) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

func (x *CreatePlayerRequest) GetRoleId() int32 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *CreatePlayerRequest) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *CreatePlayerRequest) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *CreatePlayerRequest) GetFeature() *PlayerFeature {
	if x != nil {
		return x.Feature
	}
	return nil
}

func (x *CreatePlayerRequest) GetOsType() OSType {
	if x != nil {
		return x.OsType
	}
	return OSType_OSTypeUnknow
}

func (x *CreatePlayerRequest) GetPlatform() PlatformType {
	if x != nil {
		return x.Platform
	}
	return PlatformType_PlatformUnKnow
}

type CreatePlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player *PlayerBaseData `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"` // 玩家信息
}

func (x *CreatePlayerResponse) Reset() {
	*x = CreatePlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePlayerResponse) ProtoMessage() {}

func (x *CreatePlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePlayerResponse.ProtoReflect.Descriptor instead.
func (*CreatePlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{64}
}

func (x *CreatePlayerResponse) GetPlayer() *PlayerBaseData {
	if x != nil {
		return x.Player
	}
	return nil
}

//screenSer 协议 : 0x03ZZZZ  战斗服务 协议 ************************************
type EnterMapRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnterMapRequest) Reset() {
	*x = EnterMapRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterMapRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterMapRequest) ProtoMessage() {}

func (x *EnterMapRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterMapRequest.ProtoReflect.Descriptor instead.
func (*EnterMapRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{65}
}

type EnterMapResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 当前玩家信息
	Me *Player `protobuf:"bytes,1,opt,name=me,proto3" json:"me,omitempty"`
	// 当前玩家位置
	Location   *EntityLocation `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`
	ReliveTime int32           `protobuf:"varint,3,opt,name=relive_time,json=reliveTime,proto3" json:"relive_time,omitempty"`
}

func (x *EnterMapResponse) Reset() {
	*x = EnterMapResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnterMapResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnterMapResponse) ProtoMessage() {}

func (x *EnterMapResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnterMapResponse.ProtoReflect.Descriptor instead.
func (*EnterMapResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{66}
}

func (x *EnterMapResponse) GetMe() *Player {
	if x != nil {
		return x.Me
	}
	return nil
}

func (x *EnterMapResponse) GetLocation() *EntityLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *EnterMapResponse) GetReliveTime() int32 {
	if x != nil {
		return x.ReliveTime
	}
	return 0
}

type UpdateSelfLocationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movement *EntityMovement `protobuf:"bytes,1,opt,name=movement,proto3" json:"movement,omitempty"`
}

func (x *UpdateSelfLocationRequest) Reset() {
	*x = UpdateSelfLocationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSelfLocationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSelfLocationRequest) ProtoMessage() {}

func (x *UpdateSelfLocationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSelfLocationRequest.ProtoReflect.Descriptor instead.
func (*UpdateSelfLocationRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{67}
}

func (x *UpdateSelfLocationRequest) GetMovement() *EntityMovement {
	if x != nil {
		return x.Movement
	}
	return nil
}

type UpdateSelfLocationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Movement *EntityMovement `protobuf:"bytes,1,opt,name=movement,proto3" json:"movement,omitempty"`
}

func (x *UpdateSelfLocationResponse) Reset() {
	*x = UpdateSelfLocationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSelfLocationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSelfLocationResponse) ProtoMessage() {}

func (x *UpdateSelfLocationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSelfLocationResponse.ProtoReflect.Descriptor instead.
func (*UpdateSelfLocationResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{68}
}

func (x *UpdateSelfLocationResponse) GetMovement() *EntityMovement {
	if x != nil {
		return x.Movement
	}
	return nil
}

type UseSkillRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 使用的技能 id
	SkillId int32 `protobuf:"varint,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	// 技能使用方向，相对于玩家当前位置.
	Dir *EntityLocation `protobuf:"bytes,2,opt,name=dir,proto3" json:"dir,omitempty"`
	// 技能使用的位置  指定后，会将玩家重置到该位置.
	FromLocation *EntityLocation `protobuf:"bytes,3,opt,name=from_location,json=fromLocation,proto3" json:"from_location,omitempty"`
	// 技能指定使用的目标
	TargetId *EntityId `protobuf:"bytes,4,opt,name=target_id,json=targetId,proto3" json:"target_id,omitempty"`
	//是技能开始还是停止 有些持续需要手动停止
	IsStart bool `protobuf:"varint,5,opt,name=is_start,json=isStart,proto3" json:"is_start,omitempty"`
}

func (x *UseSkillRequest) Reset() {
	*x = UseSkillRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseSkillRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseSkillRequest) ProtoMessage() {}

func (x *UseSkillRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseSkillRequest.ProtoReflect.Descriptor instead.
func (*UseSkillRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{69}
}

func (x *UseSkillRequest) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *UseSkillRequest) GetDir() *EntityLocation {
	if x != nil {
		return x.Dir
	}
	return nil
}

func (x *UseSkillRequest) GetFromLocation() *EntityLocation {
	if x != nil {
		return x.FromLocation
	}
	return nil
}

func (x *UseSkillRequest) GetTargetId() *EntityId {
	if x != nil {
		return x.TargetId
	}
	return nil
}

func (x *UseSkillRequest) GetIsStart() bool {
	if x != nil {
		return x.IsStart
	}
	return false
}

type UseSkillResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UseSkillResponse) Reset() {
	*x = UseSkillResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UseSkillResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UseSkillResponse) ProtoMessage() {}

func (x *UseSkillResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UseSkillResponse.ProtoReflect.Descriptor instead.
func (*UseSkillResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{70}
}

type RespawnPlayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RespawnPoint PlayerRespawnPoint `protobuf:"varint,1,opt,name=respawn_point,json=respawnPoint,proto3,enum=gameMessageCore.PlayerRespawnPoint" json:"respawn_point,omitempty"`
}

func (x *RespawnPlayerRequest) Reset() {
	*x = RespawnPlayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespawnPlayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespawnPlayerRequest) ProtoMessage() {}

func (x *RespawnPlayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespawnPlayerRequest.ProtoReflect.Descriptor instead.
func (*RespawnPlayerRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{71}
}

func (x *RespawnPlayerRequest) GetRespawnPoint() PlayerRespawnPoint {
	if x != nil {
		return x.RespawnPoint
	}
	return PlayerRespawnPoint_PlayerRespawnPointLcoal
}

type RespawnPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64           `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CurHp    int32           `protobuf:"varint,2,opt,name=cur_hp,json=curHp,proto3" json:"cur_hp,omitempty"`
	Active   bool            `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Location *EntityLocation `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *RespawnPlayerResponse) Reset() {
	*x = RespawnPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RespawnPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespawnPlayerResponse) ProtoMessage() {}

func (x *RespawnPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespawnPlayerResponse.ProtoReflect.Descriptor instead.
func (*RespawnPlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{72}
}

func (x *RespawnPlayerResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *RespawnPlayerResponse) GetCurHp() int32 {
	if x != nil {
		return x.CurHp
	}
	return 0
}

func (x *RespawnPlayerResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *RespawnPlayerResponse) GetLocation() *EntityLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

type BroadCastRespawnPlayerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   int64           `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	CurHp    int32           `protobuf:"varint,2,opt,name=cur_hp,json=curHp,proto3" json:"cur_hp,omitempty"`
	Active   bool            `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
	Location *EntityLocation `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
	ReviveCd int64           `protobuf:"varint,5,opt,name=revive_cd,json=reviveCd,proto3" json:"revive_cd,omitempty"`
}

func (x *BroadCastRespawnPlayerResponse) Reset() {
	*x = BroadCastRespawnPlayerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastRespawnPlayerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastRespawnPlayerResponse) ProtoMessage() {}

func (x *BroadCastRespawnPlayerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastRespawnPlayerResponse.ProtoReflect.Descriptor instead.
func (*BroadCastRespawnPlayerResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{73}
}

func (x *BroadCastRespawnPlayerResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BroadCastRespawnPlayerResponse) GetCurHp() int32 {
	if x != nil {
		return x.CurHp
	}
	return 0
}

func (x *BroadCastRespawnPlayerResponse) GetActive() bool {
	if x != nil {
		return x.Active
	}
	return false
}

func (x *BroadCastRespawnPlayerResponse) GetLocation() *EntityLocation {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *BroadCastRespawnPlayerResponse) GetReviveCd() int64 {
	if x != nil {
		return x.ReviveCd
	}
	return 0
}

type PlayerActionCollectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlayerActionCollectRequest) Reset() {
	*x = PlayerActionCollectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerActionCollectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerActionCollectRequest) ProtoMessage() {}

func (x *PlayerActionCollectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerActionCollectRequest.ProtoReflect.Descriptor instead.
func (*PlayerActionCollectRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{74}
}

type PlayerActionCollectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlayerActionCollectResponse) Reset() {
	*x = PlayerActionCollectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerActionCollectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerActionCollectResponse) ProtoMessage() {}

func (x *PlayerActionCollectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerActionCollectResponse.ProtoReflect.Descriptor instead.
func (*PlayerActionCollectResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{75}
}

type BroadCastPlayerActionCollectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
}

func (x *BroadCastPlayerActionCollectResponse) Reset() {
	*x = BroadCastPlayerActionCollectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastPlayerActionCollectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastPlayerActionCollectResponse) ProtoMessage() {}

func (x *BroadCastPlayerActionCollectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastPlayerActionCollectResponse.ProtoReflect.Descriptor instead.
func (*BroadCastPlayerActionCollectResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{76}
}

func (x *BroadCastPlayerActionCollectResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type PlayerActionChatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Show bool `protobuf:"varint,1,opt,name=show,proto3" json:"show,omitempty"`
}

func (x *PlayerActionChatRequest) Reset() {
	*x = PlayerActionChatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerActionChatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerActionChatRequest) ProtoMessage() {}

func (x *PlayerActionChatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerActionChatRequest.ProtoReflect.Descriptor instead.
func (*PlayerActionChatRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{77}
}

func (x *PlayerActionChatRequest) GetShow() bool {
	if x != nil {
		return x.Show
	}
	return false
}

type PlayerActionChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PlayerActionChatResponse) Reset() {
	*x = PlayerActionChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlayerActionChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlayerActionChatResponse) ProtoMessage() {}

func (x *PlayerActionChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlayerActionChatResponse.ProtoReflect.Descriptor instead.
func (*PlayerActionChatResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{78}
}

type BroadCastPlayerActionChatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Show   bool  `protobuf:"varint,2,opt,name=show,proto3" json:"show,omitempty"`
}

func (x *BroadCastPlayerActionChatResponse) Reset() {
	*x = BroadCastPlayerActionChatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastPlayerActionChatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastPlayerActionChatResponse) ProtoMessage() {}

func (x *BroadCastPlayerActionChatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastPlayerActionChatResponse.ProtoReflect.Descriptor instead.
func (*BroadCastPlayerActionChatResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{79}
}

func (x *BroadCastPlayerActionChatResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *BroadCastPlayerActionChatResponse) GetShow() bool {
	if x != nil {
		return x.Show
	}
	return false
}

type GetHomeDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReqDataUserId int64 `protobuf:"varint,1,opt,name=req_data_user_id,json=reqDataUserId,proto3" json:"req_data_user_id,omitempty"`
}

func (x *GetHomeDataRequest) Reset() {
	*x = GetHomeDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomeDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeDataRequest) ProtoMessage() {}

func (x *GetHomeDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeDataRequest.ProtoReflect.Descriptor instead.
func (*GetHomeDataRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{80}
}

func (x *GetHomeDataRequest) GetReqDataUserId() int64 {
	if x != nil {
		return x.ReqDataUserId
	}
	return 0
}

type GetHomeDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerUserId      int64  `protobuf:"varint,1,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	OwnerName        string `protobuf:"bytes,2,opt,name=owner_name,json=ownerName,proto3" json:"owner_name,omitempty"`
	SoilDataAllCount int32  `protobuf:"varint,3,opt,name=soilDataAllCount,proto3" json:"soilDataAllCount,omitempty"`
}

func (x *GetHomeDataResponse) Reset() {
	*x = GetHomeDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHomeDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHomeDataResponse) ProtoMessage() {}

func (x *GetHomeDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHomeDataResponse.ProtoReflect.Descriptor instead.
func (*GetHomeDataResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{81}
}

func (x *GetHomeDataResponse) GetOwnerUserId() int64 {
	if x != nil {
		return x.OwnerUserId
	}
	return 0
}

func (x *GetHomeDataResponse) GetOwnerName() string {
	if x != nil {
		return x.OwnerName
	}
	return ""
}

func (x *GetHomeDataResponse) GetSoilDataAllCount() int32 {
	if x != nil {
		return x.SoilDataAllCount
	}
	return 0
}

type BroadCastHomeDataInitBatchResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SoilDataList []*ProxySoilData `protobuf:"bytes,1,rep,name=soilDataList,proto3" json:"soilDataList,omitempty"`
	OwnerUserId  int64            `protobuf:"varint,2,opt,name=owner_user_id,json=ownerUserId,proto3" json:"owner_user_id,omitempty"`
	Final        bool             `protobuf:"varint,3,opt,name=final,proto3" json:"final,omitempty"`
}

func (x *BroadCastHomeDataInitBatchResponse) Reset() {
	*x = BroadCastHomeDataInitBatchResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastHomeDataInitBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastHomeDataInitBatchResponse) ProtoMessage() {}

func (x *BroadCastHomeDataInitBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastHomeDataInitBatchResponse.ProtoReflect.Descriptor instead.
func (*BroadCastHomeDataInitBatchResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{82}
}

func (x *BroadCastHomeDataInitBatchResponse) GetSoilDataList() []*ProxySoilData {
	if x != nil {
		return x.SoilDataList
	}
	return nil
}

func (x *BroadCastHomeDataInitBatchResponse) GetOwnerUserId() int64 {
	if x != nil {
		return x.OwnerUserId
	}
	return 0
}

func (x *BroadCastHomeDataInitBatchResponse) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

type BroadCastInitMapElementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视野内新增的实体列表
	Entity              []*EntityWithLocation     `protobuf:"bytes,1,rep,name=entity,proto3" json:"entity,omitempty"`                                                      //实体
	DestructionElements []*DestructionElementData `protobuf:"bytes,2,rep,name=destruction_elements,json=destructionElements,proto3" json:"destruction_elements,omitempty"` // 视野内当前场景中被破坏的元素列表
	Final               bool                      `protobuf:"varint,3,opt,name=final,proto3" json:"final,omitempty"`                                                       // 是否最后一个包
}

func (x *BroadCastInitMapElementResponse) Reset() {
	*x = BroadCastInitMapElementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastInitMapElementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastInitMapElementResponse) ProtoMessage() {}

func (x *BroadCastInitMapElementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastInitMapElementResponse.ProtoReflect.Descriptor instead.
func (*BroadCastInitMapElementResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{83}
}

func (x *BroadCastInitMapElementResponse) GetEntity() []*EntityWithLocation {
	if x != nil {
		return x.Entity
	}
	return nil
}

func (x *BroadCastInitMapElementResponse) GetDestructionElements() []*DestructionElementData {
	if x != nil {
		return x.DestructionElements
	}
	return nil
}

func (x *BroadCastInitMapElementResponse) GetFinal() bool {
	if x != nil {
		return x.Final
	}
	return false
}

type BroadCastMapEntityUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 视野内新增的实体列表
	EntityAdded []*EntityWithLocation `protobuf:"bytes,1,rep,name=entity_added,json=entityAdded,proto3" json:"entity_added,omitempty"`
	// 视野内移除的实体列表
	EntityRemoved []*EntityId `protobuf:"bytes,2,rep,name=entity_removed,json=entityRemoved,proto3" json:"entity_removed,omitempty"`
	// 视野内当前场景中被破坏的元素列表
	DestructionElements []*DestructionElementData `protobuf:"bytes,3,rep,name=destruction_elements,json=destructionElements,proto3" json:"destruction_elements,omitempty"`
}

func (x *BroadCastMapEntityUpdateResponse) Reset() {
	*x = BroadCastMapEntityUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastMapEntityUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastMapEntityUpdateResponse) ProtoMessage() {}

func (x *BroadCastMapEntityUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastMapEntityUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastMapEntityUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{84}
}

func (x *BroadCastMapEntityUpdateResponse) GetEntityAdded() []*EntityWithLocation {
	if x != nil {
		return x.EntityAdded
	}
	return nil
}

func (x *BroadCastMapEntityUpdateResponse) GetEntityRemoved() []*EntityId {
	if x != nil {
		return x.EntityRemoved
	}
	return nil
}

func (x *BroadCastMapEntityUpdateResponse) GetDestructionElements() []*DestructionElementData {
	if x != nil {
		return x.DestructionElements
	}
	return nil
}

type BroadCastEntityMoveResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Moves []*EntityMovement `protobuf:"bytes,1,rep,name=moves,proto3" json:"moves,omitempty"`
}

func (x *BroadCastEntityMoveResponse) Reset() {
	*x = BroadCastEntityMoveResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityMoveResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityMoveResponse) ProtoMessage() {}

func (x *BroadCastEntityMoveResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityMoveResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityMoveResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{85}
}

func (x *BroadCastEntityMoveResponse) GetMoves() []*EntityMovement {
	if x != nil {
		return x.Moves
	}
	return nil
}

type BroadCastEntityDestroyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 销毁的 实体列表
	Entities []*EntityId `protobuf:"bytes,1,rep,name=entities,proto3" json:"entities,omitempty"`
}

func (x *BroadCastEntityDestroyResponse) Reset() {
	*x = BroadCastEntityDestroyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityDestroyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityDestroyResponse) ProtoMessage() {}

func (x *BroadCastEntityDestroyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityDestroyResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityDestroyResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{86}
}

func (x *BroadCastEntityDestroyResponse) GetEntities() []*EntityId {
	if x != nil {
		return x.Entities
	}
	return nil
}

type BroadCastEntityCombatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 技能释放阶段
	State EntityCombatState `protobuf:"varint,1,opt,name=state,proto3,enum=gameMessageCore.EntityCombatState" json:"state,omitempty"`
	// 使用的技能 id
	SkillId int32 `protobuf:"varint,2,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	// 连击动作
	ComboIndex int32 `protobuf:"varint,3,opt,name=combo_index,json=comboIndex,proto3" json:"combo_index,omitempty"`
	// 使用技能的对象 id
	FromEntity *EntityId `protobuf:"bytes,4,opt,name=from_entity,json=fromEntity,proto3" json:"from_entity,omitempty"`
	// 使用技能的目标
	TargetList []int64 `protobuf:"varint,5,rep,packed,name=target_list,json=targetList,proto3" json:"target_list,omitempty"`
	// 技能使用方向，相对于释放玩家当前位置.
	Dir *EntityLocation `protobuf:"bytes,6,opt,name=dir,proto3" json:"dir,omitempty"`
	// 技能释放的位置
	FromLocation *EntityLocation `protobuf:"bytes,7,opt,name=from_location,json=fromLocation,proto3" json:"from_location,omitempty"`
	// 当前消息状态的服务器时间
	CurStamp int64 `protobuf:"varint,8,opt,name=cur_stamp,json=curStamp,proto3" json:"cur_stamp,omitempty"`
	// 接收技能伤害的对象 id 数组
	Targets []*EntityDamage `protobuf:"bytes,9,rep,name=targets,proto3" json:"targets,omitempty"`
	// 产生的所有技能飞行物
	Flyers []*SkillFlyerData `protobuf:"bytes,10,rep,name=flyers,proto3" json:"flyers,omitempty"`
}

func (x *BroadCastEntityCombatResponse) Reset() {
	*x = BroadCastEntityCombatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityCombatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityCombatResponse) ProtoMessage() {}

func (x *BroadCastEntityCombatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityCombatResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityCombatResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{87}
}

func (x *BroadCastEntityCombatResponse) GetState() EntityCombatState {
	if x != nil {
		return x.State
	}
	return EntityCombatState_EntityCombatStateUnknown
}

func (x *BroadCastEntityCombatResponse) GetSkillId() int32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *BroadCastEntityCombatResponse) GetComboIndex() int32 {
	if x != nil {
		return x.ComboIndex
	}
	return 0
}

func (x *BroadCastEntityCombatResponse) GetFromEntity() *EntityId {
	if x != nil {
		return x.FromEntity
	}
	return nil
}

func (x *BroadCastEntityCombatResponse) GetTargetList() []int64 {
	if x != nil {
		return x.TargetList
	}
	return nil
}

func (x *BroadCastEntityCombatResponse) GetDir() *EntityLocation {
	if x != nil {
		return x.Dir
	}
	return nil
}

func (x *BroadCastEntityCombatResponse) GetFromLocation() *EntityLocation {
	if x != nil {
		return x.FromLocation
	}
	return nil
}

func (x *BroadCastEntityCombatResponse) GetCurStamp() int64 {
	if x != nil {
		return x.CurStamp
	}
	return 0
}

func (x *BroadCastEntityCombatResponse) GetTargets() []*EntityDamage {
	if x != nil {
		return x.Targets
	}
	return nil
}

func (x *BroadCastEntityCombatResponse) GetFlyers() []*SkillFlyerData {
	if x != nil {
		return x.Flyers
	}
	return nil
}

type TeleportRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToPos *Vector3 `protobuf:"bytes,9,opt,name=to_pos,json=toPos,proto3" json:"to_pos,omitempty"`
}

func (x *TeleportRequest) Reset() {
	*x = TeleportRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeleportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleportRequest) ProtoMessage() {}

func (x *TeleportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleportRequest.ProtoReflect.Descriptor instead.
func (*TeleportRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{88}
}

func (x *TeleportRequest) GetToPos() *Vector3 {
	if x != nil {
		return x.ToPos
	}
	return nil
}

type TeleportResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TeleportResponse) Reset() {
	*x = TeleportResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TeleportResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TeleportResponse) ProtoMessage() {}

func (x *TeleportResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TeleportResponse.ProtoReflect.Descriptor instead.
func (*TeleportResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{89}
}

type BroadCastEntityAvatarUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 变化的entity id
	EntityId *EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// 变化后的 avatar 装备列表
	Avatars []*PlayerAvatar `protobuf:"bytes,2,rep,name=avatars,proto3" json:"avatars,omitempty"`
}

func (x *BroadCastEntityAvatarUpdateResponse) Reset() {
	*x = BroadCastEntityAvatarUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityAvatarUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityAvatarUpdateResponse) ProtoMessage() {}

func (x *BroadCastEntityAvatarUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityAvatarUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityAvatarUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{90}
}

func (x *BroadCastEntityAvatarUpdateResponse) GetEntityId() *EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *BroadCastEntityAvatarUpdateResponse) GetAvatars() []*PlayerAvatar {
	if x != nil {
		return x.Avatars
	}
	return nil
}

type BroadCastEntityBuildDataUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 变化的entity id
	EntityId *EntityId `protobuf:"bytes,1,opt,name=entity_id,json=entityId,proto3" json:"entity_id,omitempty"`
	// 电量过期时间 单位秒
	ElectricEnd int32 `protobuf:"varint,2,opt,name=electricEnd,proto3" json:"electricEnd,omitempty"`
	// 产出开始时间点.
	HarvestStartAt int32 `protobuf:"varint,3,opt,name=harvestStartAt,proto3" json:"harvestStartAt,omitempty"`
	// 可以收集的时间
	HarvestAt int32 `protobuf:"varint,4,opt,name=harvestAt,proto3" json:"harvestAt,omitempty"`
	// 可收获的物品数量统计(没电时转移到采集) 单位秒
	HarvestItemCount int32 `protobuf:"varint,5,opt,name=harvestItemCount,proto3" json:"harvestItemCount,omitempty"`
	// 采集开始时间点
	CollectionStartAt int32 `protobuf:"varint,6,opt,name=collectionStartAt,proto3" json:"collectionStartAt,omitempty"`
	// 下次可采集(偷取)的时间戳 单位秒
	CollectionAt int32 `protobuf:"varint,7,opt,name=collectionAt,proto3" json:"collectionAt,omitempty"`
	// 可采集(偷取)物品数量统计
	CollectionItemCount int32 `protobuf:"varint,8,opt,name=collectionItemCount,proto3" json:"collectionItemCount,omitempty"`
}

func (x *BroadCastEntityBuildDataUpdateResponse) Reset() {
	*x = BroadCastEntityBuildDataUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastEntityBuildDataUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastEntityBuildDataUpdateResponse) ProtoMessage() {}

func (x *BroadCastEntityBuildDataUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastEntityBuildDataUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastEntityBuildDataUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{91}
}

func (x *BroadCastEntityBuildDataUpdateResponse) GetEntityId() *EntityId {
	if x != nil {
		return x.EntityId
	}
	return nil
}

func (x *BroadCastEntityBuildDataUpdateResponse) GetElectricEnd() int32 {
	if x != nil {
		return x.ElectricEnd
	}
	return 0
}

func (x *BroadCastEntityBuildDataUpdateResponse) GetHarvestStartAt() int32 {
	if x != nil {
		return x.HarvestStartAt
	}
	return 0
}

func (x *BroadCastEntityBuildDataUpdateResponse) GetHarvestAt() int32 {
	if x != nil {
		return x.HarvestAt
	}
	return 0
}

func (x *BroadCastEntityBuildDataUpdateResponse) GetHarvestItemCount() int32 {
	if x != nil {
		return x.HarvestItemCount
	}
	return 0
}

func (x *BroadCastEntityBuildDataUpdateResponse) GetCollectionStartAt() int32 {
	if x != nil {
		return x.CollectionStartAt
	}
	return 0
}

func (x *BroadCastEntityBuildDataUpdateResponse) GetCollectionAt() int32 {
	if x != nil {
		return x.CollectionAt
	}
	return 0
}

func (x *BroadCastEntityBuildDataUpdateResponse) GetCollectionItemCount() int32 {
	if x != nil {
		return x.CollectionItemCount
	}
	return 0
}

type SceneDestructionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ids []int64 `protobuf:"varint,1,rep,packed,name=ids,proto3" json:"ids,omitempty"`
}

func (x *SceneDestructionRequest) Reset() {
	*x = SceneDestructionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneDestructionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneDestructionRequest) ProtoMessage() {}

func (x *SceneDestructionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneDestructionRequest.ProtoReflect.Descriptor instead.
func (*SceneDestructionRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{92}
}

func (x *SceneDestructionRequest) GetIds() []int64 {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SceneDestructionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SceneDestructionResponse) Reset() {
	*x = SceneDestructionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SceneDestructionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SceneDestructionResponse) ProtoMessage() {}

func (x *SceneDestructionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SceneDestructionResponse.ProtoReflect.Descriptor instead.
func (*SceneDestructionResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{93}
}

type BroadCastSceneDestructionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DestructionElements []*DestructionElementData `protobuf:"bytes,1,rep,name=destruction_elements,json=destructionElements,proto3" json:"destruction_elements,omitempty"`
}

func (x *BroadCastSceneDestructionResponse) Reset() {
	*x = BroadCastSceneDestructionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastSceneDestructionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastSceneDestructionResponse) ProtoMessage() {}

func (x *BroadCastSceneDestructionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastSceneDestructionResponse.ProtoReflect.Descriptor instead.
func (*BroadCastSceneDestructionResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{94}
}

func (x *BroadCastSceneDestructionResponse) GetDestructionElements() []*DestructionElementData {
	if x != nil {
		return x.DestructionElements
	}
	return nil
}

type QueryServerTimeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTime int64 `protobuf:"varint,1,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
}

func (x *QueryServerTimeRequest) Reset() {
	*x = QueryServerTimeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryServerTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryServerTimeRequest) ProtoMessage() {}

func (x *QueryServerTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryServerTimeRequest.ProtoReflect.Descriptor instead.
func (*QueryServerTimeRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{95}
}

func (x *QueryServerTimeRequest) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

type QueryServerTimeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientTime int64 `protobuf:"varint,1,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
	SystemTime int64 `protobuf:"varint,2,opt,name=system_time,json=systemTime,proto3" json:"system_time,omitempty"`
}

func (x *QueryServerTimeResponse) Reset() {
	*x = QueryServerTimeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryServerTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryServerTimeResponse) ProtoMessage() {}

func (x *QueryServerTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryServerTimeResponse.ProtoReflect.Descriptor instead.
func (*QueryServerTimeResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{96}
}

func (x *QueryServerTimeResponse) GetClientTime() int64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

func (x *QueryServerTimeResponse) GetSystemTime() int64 {
	if x != nil {
		return x.SystemTime
	}
	return 0
}

type BroadCastChangeServiceResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerType    ServiceType         `protobuf:"varint,1,opt,name=serType,proto3,enum=gameMessageCore.ServiceType" json:"serType,omitempty"`
	SerSubType SceneServiceSubType `protobuf:"varint,2,opt,name=serSubType,proto3,enum=gameMessageCore.SceneServiceSubType" json:"serSubType,omitempty"`
	SerOwner   int64               `protobuf:"varint,3,opt,name=serOwner,proto3" json:"serOwner,omitempty"`
}

func (x *BroadCastChangeServiceResponse) Reset() {
	*x = BroadCastChangeServiceResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastChangeServiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastChangeServiceResponse) ProtoMessage() {}

func (x *BroadCastChangeServiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastChangeServiceResponse.ProtoReflect.Descriptor instead.
func (*BroadCastChangeServiceResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{97}
}

func (x *BroadCastChangeServiceResponse) GetSerType() ServiceType {
	if x != nil {
		return x.SerType
	}
	return ServiceType_ServiceTypeUnknown
}

func (x *BroadCastChangeServiceResponse) GetSerSubType() SceneServiceSubType {
	if x != nil {
		return x.SerSubType
	}
	return SceneServiceSubType_UnknownSubType
}

func (x *BroadCastChangeServiceResponse) GetSerOwner() int64 {
	if x != nil {
		return x.SerOwner
	}
	return 0
}

type HomeResourceOperateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperateInfoList []*CollectResourceOperateInfo `protobuf:"bytes,1,rep,name=operateInfoList,proto3" json:"operateInfoList,omitempty"`
}

func (x *HomeResourceOperateRequest) Reset() {
	*x = HomeResourceOperateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeResourceOperateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeResourceOperateRequest) ProtoMessage() {}

func (x *HomeResourceOperateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeResourceOperateRequest.ProtoReflect.Descriptor instead.
func (*HomeResourceOperateRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{98}
}

func (x *HomeResourceOperateRequest) GetOperateInfoList() []*CollectResourceOperateInfo {
	if x != nil {
		return x.OperateInfoList
	}
	return nil
}

type HomeResourceOperateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperateResultList []*CollectResourceOperateResult `protobuf:"bytes,1,rep,name=operateResultList,proto3" json:"operateResultList,omitempty"`
}

func (x *HomeResourceOperateResponse) Reset() {
	*x = HomeResourceOperateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HomeResourceOperateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HomeResourceOperateResponse) ProtoMessage() {}

func (x *HomeResourceOperateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HomeResourceOperateResponse.ProtoReflect.Descriptor instead.
func (*HomeResourceOperateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{99}
}

func (x *HomeResourceOperateResponse) GetOperateResultList() []*CollectResourceOperateResult {
	if x != nil {
		return x.OperateResultList
	}
	return nil
}

type QueryTalentTreeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryTalentTreeRequest) Reset() {
	*x = QueryTalentTreeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTalentTreeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTalentTreeRequest) ProtoMessage() {}

func (x *QueryTalentTreeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTalentTreeRequest.ProtoReflect.Descriptor instead.
func (*QueryTalentTreeRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{100}
}

type QueryTalentTreeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelData []*TalentLevel `protobuf:"bytes,1,rep,name=levelData,proto3" json:"levelData,omitempty"`
	Tree      []*TalentTree  `protobuf:"bytes,2,rep,name=tree,proto3" json:"tree,omitempty"`
}

func (x *QueryTalentTreeResponse) Reset() {
	*x = QueryTalentTreeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryTalentTreeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryTalentTreeResponse) ProtoMessage() {}

func (x *QueryTalentTreeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryTalentTreeResponse.ProtoReflect.Descriptor instead.
func (*QueryTalentTreeResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{101}
}

func (x *QueryTalentTreeResponse) GetLevelData() []*TalentLevel {
	if x != nil {
		return x.LevelData
	}
	return nil
}

func (x *QueryTalentTreeResponse) GetTree() []*TalentTree {
	if x != nil {
		return x.Tree
	}
	return nil
}

type BroadCastTalentTreeUpdateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LevelData []*TalentLevel `protobuf:"bytes,1,rep,name=levelData,proto3" json:"levelData,omitempty"`
	Tree      []*TalentTree  `protobuf:"bytes,2,rep,name=tree,proto3" json:"tree,omitempty"`
}

func (x *BroadCastTalentTreeUpdateResponse) Reset() {
	*x = BroadCastTalentTreeUpdateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastTalentTreeUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastTalentTreeUpdateResponse) ProtoMessage() {}

func (x *BroadCastTalentTreeUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastTalentTreeUpdateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastTalentTreeUpdateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{102}
}

func (x *BroadCastTalentTreeUpdateResponse) GetLevelData() []*TalentLevel {
	if x != nil {
		return x.LevelData
	}
	return nil
}

func (x *BroadCastTalentTreeUpdateResponse) GetTree() []*TalentTree {
	if x != nil {
		return x.Tree
	}
	return nil
}

type SelfTasksRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SelfTasksRequest) Reset() {
	*x = SelfTasksRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfTasksRequest) ProtoMessage() {}

func (x *SelfTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfTasksRequest.ProtoReflect.Descriptor instead.
func (*SelfTasksRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{103}
}

type SelfTasksResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 玩家已经接取的任务列表
	Tasks *PlayerTask `protobuf:"bytes,1,opt,name=tasks,proto3" json:"tasks,omitempty"`
}

func (x *SelfTasksResponse) Reset() {
	*x = SelfTasksResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelfTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelfTasksResponse) ProtoMessage() {}

func (x *SelfTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelfTasksResponse.ProtoReflect.Descriptor instead.
func (*SelfTasksResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{104}
}

func (x *SelfTasksResponse) GetTasks() *PlayerTask {
	if x != nil {
		return x.Tasks
	}
	return nil
}

// 玩家任务状态更新
type BroadCastUpdateTaskListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind         TaskListType `protobuf:"varint,1,opt,name=kind,proto3,enum=gameMessageCore.TaskListType" json:"kind,omitempty"`
	TaskListInfo *TaskList    `protobuf:"bytes,2,opt,name=task_list_info,json=taskListInfo,proto3" json:"task_list_info,omitempty"`
}

func (x *BroadCastUpdateTaskListResponse) Reset() {
	*x = BroadCastUpdateTaskListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastUpdateTaskListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastUpdateTaskListResponse) ProtoMessage() {}

func (x *BroadCastUpdateTaskListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastUpdateTaskListResponse.ProtoReflect.Descriptor instead.
func (*BroadCastUpdateTaskListResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{105}
}

func (x *BroadCastUpdateTaskListResponse) GetKind() TaskListType {
	if x != nil {
		return x.Kind
	}
	return TaskListType_TaskListTypeUnknown
}

func (x *BroadCastUpdateTaskListResponse) GetTaskListInfo() *TaskList {
	if x != nil {
		return x.TaskListInfo
	}
	return nil
}

// 领取任务
type AcceptTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind TaskListType `protobuf:"varint,1,opt,name=kind,proto3,enum=gameMessageCore.TaskListType" json:"kind,omitempty"`
}

func (x *AcceptTaskRequest) Reset() {
	*x = AcceptTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTaskRequest) ProtoMessage() {}

func (x *AcceptTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTaskRequest.ProtoReflect.Descriptor instead.
func (*AcceptTaskRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{106}
}

func (x *AcceptTaskRequest) GetKind() TaskListType {
	if x != nil {
		return x.Kind
	}
	return TaskListType_TaskListTypeUnknown
}

type AcceptTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListInfo *TaskList `protobuf:"bytes,1,opt,name=task_list_info,json=taskListInfo,proto3" json:"task_list_info,omitempty"`
}

func (x *AcceptTaskResponse) Reset() {
	*x = AcceptTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AcceptTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AcceptTaskResponse) ProtoMessage() {}

func (x *AcceptTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AcceptTaskResponse.ProtoReflect.Descriptor instead.
func (*AcceptTaskResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{107}
}

func (x *AcceptTaskResponse) GetTaskListInfo() *TaskList {
	if x != nil {
		return x.TaskListInfo
	}
	return nil
}

// 放弃任务(任务有保护时间)
type AbandonmentTaskRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// task list type
	Kind TaskListType `protobuf:"varint,1,opt,name=kind,proto3,enum=gameMessageCore.TaskListType" json:"kind,omitempty"`
}

func (x *AbandonmentTaskRequest) Reset() {
	*x = AbandonmentTaskRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonmentTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonmentTaskRequest) ProtoMessage() {}

func (x *AbandonmentTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonmentTaskRequest.ProtoReflect.Descriptor instead.
func (*AbandonmentTaskRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{108}
}

func (x *AbandonmentTaskRequest) GetKind() TaskListType {
	if x != nil {
		return x.Kind
	}
	return TaskListType_TaskListTypeUnknown
}

type AbandonmentTaskResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListInfo *TaskList `protobuf:"bytes,1,opt,name=task_list_info,json=taskListInfo,proto3" json:"task_list_info,omitempty"`
}

func (x *AbandonmentTaskResponse) Reset() {
	*x = AbandonmentTaskResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AbandonmentTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AbandonmentTaskResponse) ProtoMessage() {}

func (x *AbandonmentTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AbandonmentTaskResponse.ProtoReflect.Descriptor instead.
func (*AbandonmentTaskResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{109}
}

func (x *AbandonmentTaskResponse) GetTaskListInfo() *TaskList {
	if x != nil {
		return x.TaskListInfo
	}
	return nil
}

// 获取任务奖励
type TaskRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListKind TaskListType `protobuf:"varint,1,opt,name=task_list_kind,json=taskListKind,proto3,enum=gameMessageCore.TaskListType" json:"task_list_kind,omitempty"`
}

func (x *TaskRewardRequest) Reset() {
	*x = TaskRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRewardRequest) ProtoMessage() {}

func (x *TaskRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRewardRequest.ProtoReflect.Descriptor instead.
func (*TaskRewardRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{110}
}

func (x *TaskRewardRequest) GetTaskListKind() TaskListType {
	if x != nil {
		return x.TaskListKind
	}
	return TaskListType_TaskListTypeUnknown
}

type TaskRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListInfo *TaskList `protobuf:"bytes,1,opt,name=task_list_info,json=taskListInfo,proto3" json:"task_list_info,omitempty"`
}

func (x *TaskRewardResponse) Reset() {
	*x = TaskRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRewardResponse) ProtoMessage() {}

func (x *TaskRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRewardResponse.ProtoReflect.Descriptor instead.
func (*TaskRewardResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{111}
}

func (x *TaskRewardResponse) GetTaskListInfo() *TaskList {
	if x != nil {
		return x.TaskListInfo
	}
	return nil
}

// 获取任务链奖励
type TaskListRewardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind TaskListType `protobuf:"varint,1,opt,name=kind,proto3,enum=gameMessageCore.TaskListType" json:"kind,omitempty"`
}

func (x *TaskListRewardRequest) Reset() {
	*x = TaskListRewardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListRewardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListRewardRequest) ProtoMessage() {}

func (x *TaskListRewardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListRewardRequest.ProtoReflect.Descriptor instead.
func (*TaskListRewardRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{112}
}

func (x *TaskListRewardRequest) GetKind() TaskListType {
	if x != nil {
		return x.Kind
	}
	return TaskListType_TaskListTypeUnknown
}

type TaskListRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListInfo *TaskList `protobuf:"bytes,1,opt,name=task_list_info,json=taskListInfo,proto3" json:"task_list_info,omitempty"`
}

func (x *TaskListRewardResponse) Reset() {
	*x = TaskListRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TaskListRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskListRewardResponse) ProtoMessage() {}

func (x *TaskListRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskListRewardResponse.ProtoReflect.Descriptor instead.
func (*TaskListRewardResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{113}
}

func (x *TaskListRewardResponse) GetTaskListInfo() *TaskList {
	if x != nil {
		return x.TaskListInfo
	}
	return nil
}

type UpgradeTaskProgressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TaskListKind TaskListType `protobuf:"varint,1,opt,name=task_list_kind,json=taskListKind,proto3,enum=gameMessageCore.TaskListType" json:"task_list_kind,omitempty"`
	// item NFT ids : 上交若干数量的指定道具
	Items []*TaskOptionItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	// 到达指定坐标点指定半径范围内的区域
	Pos *TaskOptionTargetPosition `protobuf:"bytes,3,opt,name=pos,proto3" json:"pos,omitempty"`
	// 使用指定的配方合成
	UseRecipe *TaskOptionUseRecipe `protobuf:"bytes,4,opt,name=useRecipe,proto3" json:"useRecipe,omitempty"`
	// 指定合成技能达到某等级
	CraftSkillLevel *TaskOptionCraftSkillLevel `protobuf:"bytes,5,opt,name=craftSkillLevel,proto3" json:"craftSkillLevel,omitempty"`
}

func (x *UpgradeTaskProgressRequest) Reset() {
	*x = UpgradeTaskProgressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeTaskProgressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeTaskProgressRequest) ProtoMessage() {}

func (x *UpgradeTaskProgressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeTaskProgressRequest.ProtoReflect.Descriptor instead.
func (*UpgradeTaskProgressRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{114}
}

func (x *UpgradeTaskProgressRequest) GetTaskListKind() TaskListType {
	if x != nil {
		return x.TaskListKind
	}
	return TaskListType_TaskListTypeUnknown
}

func (x *UpgradeTaskProgressRequest) GetItems() []*TaskOptionItem {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *UpgradeTaskProgressRequest) GetPos() *TaskOptionTargetPosition {
	if x != nil {
		return x.Pos
	}
	return nil
}

func (x *UpgradeTaskProgressRequest) GetUseRecipe() *TaskOptionUseRecipe {
	if x != nil {
		return x.UseRecipe
	}
	return nil
}

func (x *UpgradeTaskProgressRequest) GetCraftSkillLevel() *TaskOptionCraftSkillLevel {
	if x != nil {
		return x.CraftSkillLevel
	}
	return nil
}

type UpgradeTaskProgressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpgradeTaskProgressResponse) Reset() {
	*x = UpgradeTaskProgressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpgradeTaskProgressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpgradeTaskProgressResponse) ProtoMessage() {}

func (x *UpgradeTaskProgressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpgradeTaskProgressResponse.ProtoReflect.Descriptor instead.
func (*UpgradeTaskProgressResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{115}
}

type BroadCastTaskRewardResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsTaskListReward bool            `protobuf:"varint,1,opt,name=is_task_list_reward,json=isTaskListReward,proto3" json:"is_task_list_reward,omitempty"`
	TaskListKind     TaskListType    `protobuf:"varint,2,opt,name=task_list_kind,json=taskListKind,proto3,enum=gameMessageCore.TaskListType" json:"task_list_kind,omitempty"`
	RewardExp        int32           `protobuf:"varint,3,opt,name=reward_exp,json=rewardExp,proto3" json:"reward_exp,omitempty"`
	RewardItem       []*ItemBaseInfo `protobuf:"bytes,4,rep,name=reward_item,json=rewardItem,proto3" json:"reward_item,omitempty"`
}

func (x *BroadCastTaskRewardResponse) Reset() {
	*x = BroadCastTaskRewardResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastTaskRewardResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastTaskRewardResponse) ProtoMessage() {}

func (x *BroadCastTaskRewardResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastTaskRewardResponse.ProtoReflect.Descriptor instead.
func (*BroadCastTaskRewardResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{116}
}

func (x *BroadCastTaskRewardResponse) GetIsTaskListReward() bool {
	if x != nil {
		return x.IsTaskListReward
	}
	return false
}

func (x *BroadCastTaskRewardResponse) GetTaskListKind() TaskListType {
	if x != nil {
		return x.TaskListKind
	}
	return TaskListType_TaskListTypeUnknown
}

func (x *BroadCastTaskRewardResponse) GetRewardExp() int32 {
	if x != nil {
		return x.RewardExp
	}
	return 0
}

func (x *BroadCastTaskRewardResponse) GetRewardItem() []*ItemBaseInfo {
	if x != nil {
		return x.RewardItem
	}
	return nil
}

type SendChatMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatType ChatChannelType `protobuf:"varint,1,opt,name=chat_type,json=chatType,proto3,enum=gameMessageCore.ChatChannelType" json:"chat_type,omitempty"`
	Content  string          `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	// 发送到*世界/分线/附近/副本*这些公共频道的时候不需要带`receiver_id`
	// 只有*私聊*需要带`receiver_id`
	ReceiverPlayerId int64 `protobuf:"varint,3,opt,name=receiver_player_id,json=receiverPlayerId,proto3" json:"receiver_player_id,omitempty"`
}

func (x *SendChatMessageRequest) Reset() {
	*x = SendChatMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageRequest) ProtoMessage() {}

func (x *SendChatMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageRequest.ProtoReflect.Descriptor instead.
func (*SendChatMessageRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{117}
}

func (x *SendChatMessageRequest) GetChatType() ChatChannelType {
	if x != nil {
		return x.ChatType
	}
	return ChatChannelType_ChatChannelTypeUnknown
}

func (x *SendChatMessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *SendChatMessageRequest) GetReceiverPlayerId() int64 {
	if x != nil {
		return x.ReceiverPlayerId
	}
	return 0
}

type SendChatMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgId int64 `protobuf:"varint,1,opt,name=msg_id,json=msgId,proto3" json:"msg_id,omitempty"`
}

func (x *SendChatMessageResponse) Reset() {
	*x = SendChatMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendChatMessageResponse) ProtoMessage() {}

func (x *SendChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendChatMessageResponse.ProtoReflect.Descriptor instead.
func (*SendChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{118}
}

func (x *SendChatMessageResponse) GetMsgId() int64 {
	if x != nil {
		return x.MsgId
	}
	return 0
}

// 玩家接收到的聊天信息
type BroadCastChatMessagesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Messages         []*ChatMessage `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"`
	HistoricalRecord bool           `protobuf:"varint,2,opt,name=historical_record,json=historicalRecord,proto3" json:"historical_record,omitempty"`
}

func (x *BroadCastChatMessagesResponse) Reset() {
	*x = BroadCastChatMessagesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastChatMessagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastChatMessagesResponse) ProtoMessage() {}

func (x *BroadCastChatMessagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastChatMessagesResponse.ProtoReflect.Descriptor instead.
func (*BroadCastChatMessagesResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{119}
}

func (x *BroadCastChatMessagesResponse) GetMessages() []*ChatMessage {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *BroadCastChatMessagesResponse) GetHistoricalRecord() bool {
	if x != nil {
		return x.HistoricalRecord
	}
	return false
}

type BroadCastRemoveChatMessageResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MsgIds []int64 `protobuf:"varint,1,rep,packed,name=msg_ids,json=msgIds,proto3" json:"msg_ids,omitempty"`
}

func (x *BroadCastRemoveChatMessageResponse) Reset() {
	*x = BroadCastRemoveChatMessageResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastRemoveChatMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastRemoveChatMessageResponse) ProtoMessage() {}

func (x *BroadCastRemoveChatMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastRemoveChatMessageResponse.ProtoReflect.Descriptor instead.
func (*BroadCastRemoveChatMessageResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{120}
}

func (x *BroadCastRemoveChatMessageResponse) GetMsgIds() []int64 {
	if x != nil {
		return x.MsgIds
	}
	return nil
}

type BroadCastUpdateChatStateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChatState ChatState `protobuf:"varint,1,opt,name=chat_state,json=chatState,proto3,enum=gameMessageCore.ChatState" json:"chat_state,omitempty"`
}

func (x *BroadCastUpdateChatStateResponse) Reset() {
	*x = BroadCastUpdateChatStateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadCastUpdateChatStateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadCastUpdateChatStateResponse) ProtoMessage() {}

func (x *BroadCastUpdateChatStateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadCastUpdateChatStateResponse.ProtoReflect.Descriptor instead.
func (*BroadCastUpdateChatStateResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{121}
}

func (x *BroadCastUpdateChatStateResponse) GetChatState() ChatState {
	if x != nil {
		return x.ChatState
	}
	return ChatState_ChatStateNormal
}

//getaway   协议 : 0x06ZZZZ  网关服务 协议 ************************************
type PingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{122}
}

type PingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_message_body_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_message_body_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_message_body_proto_rawDescGZIP(), []int{123}
}

var File_message_body_proto protoreflect.FileDescriptor

var file_message_body_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x62, 0x6f, 0x64, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x1a, 0x11, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63,
	0x6d, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x08, 0x6f, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0e, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0a, 0x69, 0x74, 0x65, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x0b, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x74,
	0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x6c, 0x61, 0x6e, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a,
	0x68, 0x6f, 0x6d, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x74, 0x61, 0x6c, 0x65,
	0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x67, 0x0a, 0x08, 0x45, 0x6e, 0x76,
	0x65, 0x6c, 0x6f, 0x70, 0x65, 0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x73, 0x65, 0x71, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x65, 0x71, 0x49, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x12, 0x6d, 0x0a, 0x1c, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x74, 0x69, 0x63, 0x6b, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x99, 0xb3, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x81, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x50, 0x0a, 0x11, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x67, 0x65, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x82, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4d, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x83, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x0e, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x50, 0x0a, 0x11, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x84, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x55, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64, 0x72, 0x6f,
	0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x85, 0x80, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x64,
	0x72, 0x6f, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x86, 0x80, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x69, 0x74, 0x65, 0x6d, 0x44,
	0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x87, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x16, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x88, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x75, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x89, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x13, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x16, 0x75, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x90, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x14, 0x75, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6d, 0x0a, 0x1c, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x61, 0x64, 0x64,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x91, 0x80, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x41, 0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41, 0x64, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a, 0x1f, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x92, 0x80, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x1b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74,
	0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x6d, 0x0a, 0x1c, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x64, 0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x93, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x83, 0x01, 0x0a, 0x24, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x94, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x1f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x95,
	0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x67,
	0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x5d, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x96, 0x80, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x66, 0x0a, 0x19, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x97, 0x80,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x16, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x1a, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x98, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x5f, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x99, 0x80, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x5f, 0x0a, 0x16, 0x73, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa0, 0x80, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x73, 0x69,
	0x67, 0x6e, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x60, 0x0a, 0x17, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x75, 0x74, 0x5f, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xa1, 0x80,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14,
	0x73, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x18, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x6f, 0x75, 0x74,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0xa2, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4f,
	0x75, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x15, 0x73, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f, 0x0a, 0x1c, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xa3, 0x80, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x19, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x72, 0x0a, 0x1d, 0x75, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa4, 0x80, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x1a, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xa5, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x11, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x6c, 0x61, 0x6e, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa6,
	0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61,
	0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x70, 0x0a, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x69, 0x6e, 0x69, 0x74, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0xa7, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x70, 0x0a, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa9, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb1, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a,
	0x0e, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0xb2, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb3, 0x80,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x63, 0x79,
	0x63, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x12,
	0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0xb4, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x52, 0x65, 0x63,
	0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x11, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb5, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x0e, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4f, 0x0a, 0x10, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xb6, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0f, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0f, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb7, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0e, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x4f, 0x0a, 0x10, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0xb8, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x48,
	0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0f, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x55, 0x0a, 0x12, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb9, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0xc0, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12,
	0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x7a, 0x0a, 0x21, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x5f, 0x75, 0x70, 0x5f, 0x6c, 0x61, 0x6e, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xc1, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x55, 0x70, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x1c, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x55, 0x70, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60,
	0x0a, 0x17, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6e, 0x66, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xc3, 0x80, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x4e, 0x66, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x6c, 0x66,
	0x4e, 0x66, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x63, 0x0a, 0x18, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6e, 0x66, 0x74, 0x5f, 0x62, 0x75, 0x69,
	0x6c, 0x64, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xc4, 0x80, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x4e, 0x66, 0x74, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15,
	0x73, 0x65, 0x6c, 0x66, 0x4e, 0x66, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x25, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0xc5, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x20, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f,
	0x01, 0x0a, 0x28, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x73, 0x65,
	0x6c, 0x66, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69,
	0x6e, 0x67, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xc7, 0x80, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x53,
	0x65, 0x6c, 0x66, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x23, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x59, 0x0a, 0x14, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xc9, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x6d, 0x69, 0x6e, 0x74, 0x42, 0x61, 0x74,
	0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x15, 0x6d,
	0x69, 0x6e, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0xd0, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4d,
	0x69, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x6d, 0x69, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0xd1, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x16, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x5f, 0x67, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0xd2, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x14, 0x71, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x62, 0x0a, 0x17, 0x67, 0x72, 0x61, 0x6e,
	0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0xd3, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x72,
	0x61, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x67, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x18,
	0x67, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xd4, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x67, 0x72, 0x61,
	0x6e, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x22, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xd5, 0x80, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x47, 0x72, 0x61,
	0x6e, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x47,
	0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x23, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x5f, 0x67, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xd7, 0x80, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x73, 0x74, 0x55, 0x70, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6c, 0x0a, 0x1b, 0x75, 0x70, 0x67, 0x72, 0x61,
	0x64, 0x65, 0x5f, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xd9, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f,
	0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x18, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6f, 0x0a, 0x1c, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x5f, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xe0, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x19, 0x75, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x18, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0xe1, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x45, 0x78, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x19, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xe2, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x45, 0x78,
	0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x71, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x7a, 0x0a, 0x21, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x75, 0x70, 0x5f, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x65, 0x78, 0x70, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xe3, 0x80, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x54, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x1c, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x54, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x59, 0x0a, 0x14, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x81, 0x80, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5c, 0x0a, 0x15, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x82, 0x80, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x13, 0x71, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x15, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x83, 0x80, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5f, 0x0a, 0x16, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x84, 0x80, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x14, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x65, 0x6e, 0x74, 0x65, 0x72,
	0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x81, 0x80, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x4d,
	0x61, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x65, 0x6e, 0x74,
	0x65, 0x72, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x82, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d,
	0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x65, 0x6e,
	0x74, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6f,
	0x0a, 0x1c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x83,
	0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x6c, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x72, 0x0a, 0x1d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x84, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x6c, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x6c, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x11, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x85, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x75, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x12, 0x75, 0x73, 0x65, 0x5f, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x86, 0x80, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x75, 0x73, 0x65, 0x53, 0x6b, 0x69,
	0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x16, 0x72, 0x65,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x18, 0x89, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x17, 0x72,
	0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x90, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x52, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x15, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77,
	0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x83, 0x01, 0x0a, 0x24, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x69,
	0x6e, 0x69, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x91, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x30, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74,
	0x4d, 0x61, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x1f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49,
	0x6e, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x25, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f,
	0x63, 0x61, 0x73, 0x74, 0x5f, 0x6d, 0x61, 0x70, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x92, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x20, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f,
	0x0a, 0x22, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x93, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65,
	0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x44, 0x65, 0x73, 0x74, 0x72, 0x6f, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x76, 0x0a, 0x1f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x94, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7c, 0x0a, 0x21, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x63, 0x6f, 0x6d,
	0x62, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x95, 0x80, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7f, 0x0a, 0x22, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x96, 0x80, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x10, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x97, 0x80, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x74, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x11, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x98, 0x80, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x74, 0x65, 0x6c, 0x65, 0x70,
	0x6f, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x29,
	0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x99, 0x80, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x35, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x24, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7c, 0x0a, 0x21, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x6d,
	0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x61, 0x74, 0x68, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa1, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72,
	0x44, 0x65, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x1d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x44, 0x65, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8f,
	0x01, 0x0a, 0x28, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x5f, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xa2, 0x80, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x23, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x9c, 0x01, 0x0a, 0x2d, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f,
	0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0xa3, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x38, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x61, 0x74, 0x74,
	0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x27, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x99, 0x01, 0x0a, 0x2c, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0xa5, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44,
	0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x26, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x72, 0x0a, 0x1d, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xa7, 0x80, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x1a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x75, 0x0a, 0x1e, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0xa9, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x70, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x92, 0x01, 0x0a, 0x29, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0xb1, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x24, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x19, 0x73,
	0x63, 0x65, 0x6e, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb3, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x73, 0x63,
	0x65, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6b, 0x0a, 0x1a, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x64,
	0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0xb4, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x25, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xb5, 0x80, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x21, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x69, 0x0a,
	0x1a, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63,
	0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xb7, 0x80, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x17, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6c, 0x0a, 0x1b, 0x70, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xb8, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x29, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x89, 0x01, 0x0a, 0x26, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0xb9, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x21, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xc1, 0x80, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x67, 0x65, 0x74, 0x48,
	0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d,
	0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xc2, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x48, 0x6f, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x19, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xc3, 0x80, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x1a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x53,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0xc4, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x7f, 0x0a, 0x22, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xc5, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x1e, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x72, 0x0a, 0x1d, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0xc7, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x48, 0x6f, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x68, 0x6f, 0x6d, 0x65, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x1e, 0x68, 0x6f, 0x6d, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xc8, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x1b, 0x68, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a,
	0x28, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x68, 0x6f, 0x6d, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x5f, 0x62, 0x61, 0x74, 0x63, 0x68,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xc9, 0x80, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x48, 0x6f, 0x6d,
	0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x22, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x69, 0x74, 0x42,
	0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a, 0x19,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x65,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0xd1, 0x80, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54,
	0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x69, 0x0a, 0x1a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x74, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0xd2, 0x80, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x71, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x89, 0x01, 0x0a, 0x26, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74,
	0x61, 0x6c, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x72, 0x65, 0x65, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0xd3, 0x80, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x32, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x54, 0x61,
	0x6c, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x21, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x12, 0x73,
	0x65, 0x6c, 0x66, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x81, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x6c, 0x66,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10,
	0x73, 0x65, 0x6c, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x56, 0x0a, 0x13, 0x73, 0x65, 0x6c, 0x66, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x82, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x83, 0x01, 0x0a, 0x24, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x83, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1f, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56,
	0x0a, 0x13, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x84, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x11, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x61, 0x63, 0x63, 0x65, 0x70, 0x74,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x85,
	0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x61,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x65, 0x0a, 0x18, 0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x86, 0x80,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x16, 0x61, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x19, 0x61, 0x62, 0x61, 0x6e,
	0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x87, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x17, 0x61, 0x62, 0x61, 0x6e, 0x64,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x56, 0x0a, 0x13, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x88, 0x80, 0x10, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x11, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x59, 0x0a, 0x14, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x89, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x12, 0x74, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x63, 0x0a, 0x18, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x18, 0x90, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x15, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x66, 0x0a, 0x19, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x91, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x74, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x72, 0x0a, 0x1d, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x92, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x55, 0x70,
	0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x75, 0x70, 0x67, 0x72,
	0x61, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x1e, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64,
	0x65, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x93, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x1b, 0x75, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x76, 0x0a,
	0x1f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x94, 0x80, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67, 0x0a, 0x19, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x68,
	0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x81, 0x80, 0xc4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65,
	0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x6a,
	0x0a, 0x1a, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x82, 0x80, 0xc4,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x17, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a, 0x21, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x83, 0x80, 0xc4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1d, 0x62, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x8d, 0x01, 0x0a, 0x27, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x84, 0x80, 0xc4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x22, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x87, 0x01, 0x0a, 0x25, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x5f, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x63, 0x68, 0x61, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x85, 0x80, 0xc4, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x31, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x20, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x81, 0x80, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x0d, 0x70, 0x69, 0x6e, 0x67,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x82, 0x80, 0x18, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x0c, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x4c, 0x0a, 0x18, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x69, 0x63, 0x6b, 0x4f, 0x75, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x10, 0x0a, 0x0e, 0x49, 0x74, 0x65,
	0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x49,
	0x74, 0x65, 0x6d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x48,
	0x0a, 0x19, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69,
	0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x3c, 0x0a, 0x0e, 0x49, 0x74, 0x65, 0x6d,
	0x55, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d,
	0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x11, 0x0a, 0x0f, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3c, 0x0a, 0x0f, 0x49, 0x74, 0x65,
	0x6d, 0x44, 0x72, 0x6f, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69,
	0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d, 0x22, 0x12, 0x0a, 0x10, 0x49, 0x74, 0x65, 0x6d, 0x44,
	0x72, 0x6f, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51, 0x0a, 0x13, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x73,
	0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x69, 0x73, 0x41, 0x70, 0x70, 0x65, 0x61, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x16,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2e, 0x0a, 0x13, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
	0x07, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x16, 0x0a, 0x14, 0x55, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x47,
	0x0a, 0x18, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x41,
	0x64, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x4a, 0x0a, 0x1b, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x47, 0x0a, 0x18, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x44, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2b, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x52, 0x0a, 0x1f,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2f, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73,
	0x22, 0x14, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x49, 0x74, 0x65,
	0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x22, 0x55,
	0x0a, 0x16, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x41, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x4a, 0x0a, 0x17, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2f, 0x0a, 0x05, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x05, 0x73, 0x6c, 0x6f, 0x74,
	0x73, 0x22, 0xa1, 0x02, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x53, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x06, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x12, 0x2f, 0x0a, 0x14, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x41, 0x70, 0x70, 0x49, 0x64, 0x22, 0xe2, 0x01, 0x0a, 0x14, 0x53, 0x69, 0x67, 0x6e, 0x69, 0x6e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f,
	0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x2f, 0x0a, 0x14, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x73, 0x63, 0x65, 0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x6c, 0x61, 0x73,
	0x74, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x69,
	0x67, 0x6e, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x22, 0x17, 0x0a, 0x15, 0x53, 0x69, 0x67, 0x6e, 0x4f, 0x75, 0x74, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa0, 0x01, 0x0a, 0x24,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x40, 0x0a, 0x08,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x22, 0xec,
	0x01, 0x0a, 0x1d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x4d, 0x6f, 0x6e, 0x73,
	0x74, 0x65, 0x72, 0x44, 0x65, 0x61, 0x74, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x6d, 0x61, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6d, 0x61, 0x70, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6b, 0x69, 0x6c, 0x6c, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6b, 0x69, 0x6c, 0x6c,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x6f, 0x6e, 0x73, 0x74, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x63, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x63, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x03, 0x70, 0x6f,
	0x73, 0x12, 0x3a, 0x0a, 0x09, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x08, 0x64, 0x72, 0x6f, 0x70, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x81, 0x01,
	0x0a, 0x27, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x49, 0x6e, 0x42, 0x61, 0x74, 0x74, 0x6c,
	0x65, 0x22, 0x1b, 0x0a, 0x19, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79,
	0x65, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x52,
	0x0a, 0x1a, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x75, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x63, 0x75, 0x72, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x75, 0x72,
	0x5f, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x75, 0x72, 0x45,
	0x78, 0x70, 0x22, 0x13, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x61, 0x6e, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x14, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4c, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4c, 0x0a,
	0x19, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x69, 0x74, 0x4c, 0x61,
	0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x6c, 0x61,
	0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x61, 0x6e, 0x64,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x22, 0x74, 0x0a, 0x0c, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e,
	0x66, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x66, 0x74, 0x49,
	0x64, 0x12, 0x34, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x61, 0x6e, 0x64, 0x49,
	0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x07, 0x6c, 0x61, 0x6e, 0x64, 0x49, 0x64,
	0x73, 0x22, 0x40, 0x0a, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x66, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x62, 0x75,
	0x69, 0x6c, 0x64, 0x22, 0x42, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x66, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6e, 0x66, 0x74, 0x49, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x52, 0x65, 0x63, 0x79, 0x63,
	0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x52, 0x0a, 0x0e,
	0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x66, 0x74, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x66, 0x74, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6e, 0x75, 0x6d,
	0x22, 0x11, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x72, 0x67, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x40, 0x0a, 0x0e, 0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x66, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x66, 0x74, 0x49, 0x64, 0x22, 0x11, 0x0a, 0x0f, 0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x43, 0x0a, 0x11, 0x43, 0x6f, 0x6c, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x66, 0x74, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x66, 0x74, 0x49, 0x64, 0x22, 0x14, 0x0a,
	0x12, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x1c, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x55, 0x70, 0x4c, 0x61, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05, 0x6c, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4c, 0x61, 0x6e, 0x64, 0x44, 0x61, 0x74, 0x61, 0x52, 0x05, 0x6c,
	0x61, 0x6e, 0x64, 0x73, 0x22, 0x16, 0x0a, 0x14, 0x53, 0x65, 0x6c, 0x66, 0x4e, 0x66, 0x74, 0x42,
	0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4a, 0x0a, 0x15,
	0x53, 0x65, 0x6c, 0x66, 0x4e, 0x66, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x66, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x06, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x73, 0x22, 0x53, 0x0a, 0x20, 0x42, 0x72, 0x6f, 0x61,
	0x64, 0x43, 0x61, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x05,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4e, 0x66,
	0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x22, 0x6f, 0x0a,
	0x23, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x53, 0x65, 0x6c, 0x66, 0x42, 0x75,
	0x69, 0x6c, 0x64, 0x52, 0x65, 0x63, 0x79, 0x63, 0x6c, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x66, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x66, 0x72, 0x6f, 0x6d, 0x4e, 0x66, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x48,
	0x0a, 0x12, 0x4d, 0x69, 0x6e, 0x74, 0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x69, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6d, 0x69, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x18,
	0x0a, 0x07, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x67, 0x69, 0x66, 0x74, 0x4e, 0x75, 0x6d, 0x22, 0x15, 0x0a, 0x13, 0x4d, 0x69, 0x6e, 0x74,
	0x42, 0x61, 0x74, 0x74, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x15, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4b, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x47,
	0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33,
	0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74,
	0x65, 0x6d, 0x73, 0x22, 0x17, 0x0a, 0x15, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x6f,
	0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x16,
	0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x55, 0x0a, 0x1e, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a,
	0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65,
	0x6d, 0x73, 0x22, 0x55, 0x0a, 0x1e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55,
	0x70, 0x47, 0x72, 0x61, 0x6e, 0x61, 0x72, 0x79, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x22, 0x63, 0x0a, 0x18, 0x55, 0x70, 0x67,
	0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x22, 0x1b,
	0x0a, 0x19, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x0a, 0x15, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x22, 0x4e, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34,
	0x0a, 0x07, 0x65, 0x78, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x52, 0x07, 0x65, 0x78, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x5a, 0x0a, 0x1c, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x55, 0x70, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78,
	0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x45, 0x78, 0x70, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x45, 0x78, 0x70, 0x73,
	0x22, 0x2a, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x4e, 0x0a, 0x13,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0xb4, 0x02, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x69,
	0x63, 0x6b, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e,
	0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x72, 0x6f, 0x6c, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x07,
	0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x07, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x30, 0x0a, 0x07, 0x6f, 0x73, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x4f, 0x53, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x06, 0x6f, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x22, 0x4f, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x70,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x42, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x70, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x11, 0x0a, 0x0f, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x99, 0x01, 0x0a, 0x10, 0x45, 0x6e, 0x74, 0x65,
	0x72, 0x4d, 0x61, 0x70, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x02,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x52, 0x02, 0x6d, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x72, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x58, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c,
	0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3b, 0x0a, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x59, 0x0a,
	0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x66, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6d,
	0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08,
	0x6d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0xf8, 0x01, 0x0a, 0x0f, 0x55, 0x73, 0x65,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x44, 0x0a, 0x0d, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x36, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08,
	0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x73,
	0x74, 0x61, 0x72, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x60, 0x0a, 0x14, 0x52, 0x65, 0x73, 0x70, 0x61,
	0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x48, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0c, 0x72, 0x65, 0x73,
	0x70, 0x61, 0x77, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x22, 0x9c, 0x01, 0x0a, 0x15, 0x52, 0x65,
	0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06,
	0x63, 0x75, 0x72, 0x5f, 0x68, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x75,
	0x72, 0x48, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08,
	0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x1e, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x50, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x5f, 0x68, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x75, 0x72, 0x48, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x08, 0x72, 0x65, 0x76, 0x69, 0x76, 0x65, 0x43, 0x64, 0x22, 0x1c, 0x0a,
	0x1a, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c,
	0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x1d, 0x0a, 0x1b, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x3f, 0x0a, 0x24, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x2d, 0x0a, 0x17, 0x50,
	0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x22, 0x1a, 0x0a, 0x18, 0x50, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x50, 0x0a, 0x21, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x77, 0x22, 0x3d, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x10, 0x72, 0x65, 0x71, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x44, 0x61, 0x74,
	0x61, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x84, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x48,
	0x6f, 0x6d, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6c,
	0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x73, 0x6f,
	0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x41, 0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xa2,
	0x01, 0x0a, 0x22, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x48, 0x6f, 0x6d, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x6e, 0x69, 0x74, 0x42, 0x61, 0x74, 0x63, 0x68, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x0c, 0x73, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74,
	0x61, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x72,
	0x6f, 0x78, 0x79, 0x53, 0x6f, 0x69, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0c, 0x73, 0x6f, 0x69,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x6f, 0x77, 0x6e,
	0x65, 0x72, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x69,
	0x6e, 0x61, 0x6c, 0x22, 0xd0, 0x01, 0x0a, 0x1f, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x49, 0x6e, 0x69, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x5a, 0x0a, 0x14, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x64, 0x65, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0x88, 0x02, 0x0a, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x65,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x61, 0x64, 0x64, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x57, 0x69, 0x74, 0x68, 0x4c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x64,
	0x64, 0x65, 0x64, 0x12, 0x40, 0x0a, 0x0e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x72, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x0d, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x64, 0x12, 0x5a, 0x0a, 0x14, 0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13, 0x64, 0x65,
	0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x54, 0x0a, 0x1b, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x35, 0x0a, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4d, 0x6f, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x6d, 0x6f, 0x76, 0x65, 0x73, 0x22, 0x57, 0x0a, 0x1e, 0x42, 0x72, 0x6f, 0x61, 0x64,
	0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x65, 0x73, 0x74, 0x72, 0x6f,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x22, 0xfa, 0x03, 0x0a, 0x1d, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x38, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x22, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x43, 0x6f, 0x6d, 0x62, 0x61, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07,
	0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x62, 0x6f,
	0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x62, 0x6f, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x3a, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x45, 0x6e,
	0x74, 0x69, 0x74, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0a, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x03, 0x64, 0x69, 0x72, 0x12, 0x44, 0x0a, 0x0d, 0x66, 0x72, 0x6f, 0x6d,
	0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b,
	0x0a, 0x09, 0x63, 0x75, 0x72, 0x5f, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x63, 0x75, 0x72, 0x53, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x37, 0x0a, 0x07, 0x74,
	0x61, 0x72, 0x67, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x44, 0x61, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x07, 0x74, 0x61, 0x72,
	0x67, 0x65, 0x74, 0x73, 0x12, 0x37, 0x0a, 0x06, 0x66, 0x6c, 0x79, 0x65, 0x72, 0x73, 0x18, 0x0a,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x46, 0x6c, 0x79, 0x65,
	0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x06, 0x66, 0x6c, 0x79, 0x65, 0x72, 0x73, 0x22, 0x42, 0x0a,
	0x0f, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x2f, 0x0a, 0x06, 0x74, 0x6f, 0x5f, 0x70, 0x6f, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x33, 0x52, 0x05, 0x74, 0x6f, 0x50, 0x6f,
	0x73, 0x22, 0x12, 0x0a, 0x10, 0x54, 0x65, 0x6c, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x96, 0x01, 0x0a, 0x23, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43,
	0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a,
	0x09, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x07, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x52, 0x07, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x73, 0x22, 0xf8,
	0x02, 0x0a, 0x26, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x45, 0x6e, 0x74, 0x69,
	0x74, 0x79, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x44, 0x61, 0x74, 0x61, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x65, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x45,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x08, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x49,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63, 0x45, 0x6e, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x72, 0x69, 0x63,
	0x45, 0x6e, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x68, 0x61, 0x72,
	0x76, 0x65, 0x73, 0x74, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x68,
	0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09,
	0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x41, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x68, 0x61, 0x72,
	0x76, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x10, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x41, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x72,
	0x74, 0x41, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2b, 0x0a, 0x17, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x1a, 0x0a, 0x18, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x44,
	0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x7f, 0x0a, 0x21, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x14, 0x64, 0x65, 0x73, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x13,
	0x64, 0x65, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x6c, 0x65, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x22, 0x39, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a,
	0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5b,
	0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x1e,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36,
	0x0a, 0x07, 0x73, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x73,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x0a, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x53, 0x63, 0x65,
	0x6e, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x73, 0x65, 0x72, 0x53, 0x75, 0x62, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x73, 0x65, 0x72, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x22, 0x73, 0x0a, 0x1a, 0x48, 0x6f, 0x6d, 0x65,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x55, 0x0a, 0x0f, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x2b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x6f, 0x70,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x7a, 0x0a,
	0x1b, 0x48, 0x6f, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b, 0x0a, 0x11,
	0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x63,
	0x74, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x11, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x18, 0x0a, 0x16, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x3a, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x04, 0x74,
	0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65,
	0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x22, 0x90, 0x01, 0x0a,
	0x21, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74,
	0x54, 0x72, 0x65, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2f,
	0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54,
	0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x04, 0x74, 0x72, 0x65, 0x65, 0x22,
	0x12, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x46, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x66, 0x54, 0x61, 0x73, 0x6b, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x31, 0x0a, 0x05, 0x74, 0x61, 0x73, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x54, 0x61, 0x73, 0x6b, 0x52, 0x05, 0x74, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x95, 0x01, 0x0a, 0x1f,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x31, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69,
	0x6e, 0x64, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x46, 0x0a, 0x11, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x61, 0x73,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x55, 0x0a, 0x12, 0x41,
	0x63, 0x63, 0x65, 0x70, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69,
	0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x22, 0x4b, 0x0a, 0x16, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22,
	0x5a, 0x0a, 0x17, 0x41, 0x62, 0x61, 0x6e, 0x64, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x61,
	0x73, 0x6b, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x61,
	0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x74,
	0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x58, 0x0a, 0x11, 0x54,
	0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x43, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x6b, 0x69,
	0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73,
	0x74, 0x4b, 0x69, 0x6e, 0x64, 0x22, 0x55, 0x0a, 0x12, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74,
	0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c,
	0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0x4a, 0x0a, 0x15,
	0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x22, 0x59, 0x0a, 0x16, 0x54, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3f, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0xef, 0x02, 0x0a, 0x1a, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x54,
	0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x43, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x6b, 0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73,
	0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b, 0x4c,
	0x69, 0x73, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x35, 0x0a, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x69, 0x74, 0x65, 0x6d, 0x73, 0x12, 0x3b,
	0x0a, 0x03, 0x70, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x03, 0x70, 0x6f, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x75,
	0x73, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x52, 0x65,
	0x63, 0x69, 0x70, 0x65, 0x52, 0x09, 0x75, 0x73, 0x65, 0x52, 0x65, 0x63, 0x69, 0x70, 0x65, 0x12,
	0x54, 0x0a, 0x0f, 0x63, 0x72, 0x61, 0x66, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x72, 0x61, 0x66, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x4c,
	0x65, 0x76, 0x65, 0x6c, 0x52, 0x0f, 0x63, 0x72, 0x61, 0x66, 0x74, 0x53, 0x6b, 0x69, 0x6c, 0x6c,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x1d, 0x0a, 0x1b, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x61, 0x73, 0x6b, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0xf0, 0x01, 0x0a, 0x1b, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61,
	0x73, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x13, 0x69, 0x73, 0x5f, 0x74, 0x61, 0x73, 0x6b, 0x5f,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x69, 0x73, 0x54, 0x61, 0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x12, 0x43, 0x0a, 0x0e, 0x74, 0x61, 0x73, 0x6b, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61,
	0x73, 0x6b, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x61, 0x73, 0x6b,
	0x4c, 0x69, 0x73, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x77, 0x61,
	0x72, 0x64, 0x5f, 0x65, 0x78, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x65,
	0x77, 0x61, 0x72, 0x64, 0x45, 0x78, 0x70, 0x12, 0x3e, 0x0a, 0x0b, 0x72, 0x65, 0x77, 0x61, 0x72,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x67,
	0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x49,
	0x74, 0x65, 0x6d, 0x42, 0x61, 0x73, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0a, 0x72, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x9f, 0x01, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x5f, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x72, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x49, 0x64, 0x22, 0x30, 0x0a, 0x17, 0x53, 0x65, 0x6e,
	0x64, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6d, 0x73, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6d, 0x73, 0x67, 0x49, 0x64, 0x22, 0x86, 0x01, 0x0a, 0x1d,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a,
	0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x68, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x69, 0x63, 0x61, 0x6c, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x10, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x69, 0x63, 0x61, 0x6c, 0x52, 0x65,
	0x63, 0x6f, 0x72, 0x64, 0x22, 0x3d, 0x0a, 0x22, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73,
	0x74, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x73,
	0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x73, 0x67,
	0x49, 0x64, 0x73, 0x22, 0x5d, 0x0a, 0x20, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x43, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1a, 0x2e, 0x67, 0x61,
	0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x63, 0x68, 0x61, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x22, 0x0d, 0x0a, 0x0b, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x6f,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_message_body_proto_rawDescOnce sync.Once
	file_message_body_proto_rawDescData = file_message_body_proto_rawDesc
)

func file_message_body_proto_rawDescGZIP() []byte {
	file_message_body_proto_rawDescOnce.Do(func() {
		file_message_body_proto_rawDescData = protoimpl.X.CompressGZIP(file_message_body_proto_rawDescData)
	})
	return file_message_body_proto_rawDescData
}

var file_message_body_proto_msgTypes = make([]protoimpl.MessageInfo, 124)
var file_message_body_proto_goTypes = []interface{}{
	(*Envelope)(nil),                                // 0: gameMessageCore.Envelope
	(*BroadCastTickOutResponse)(nil),                // 1: gameMessageCore.BroadCastTickOutResponse
	(*ItemGetRequest)(nil),                          // 2: gameMessageCore.ItemGetRequest
	(*ItemGetResponse)(nil),                         // 3: gameMessageCore.ItemGetResponse
	(*BroadCastInitItemResponse)(nil),               // 4: gameMessageCore.BroadCastInitItemResponse
	(*ItemUseRequest)(nil),                          // 5: gameMessageCore.ItemUseRequest
	(*ItemUseResponse)(nil),                         // 6: gameMessageCore.ItemUseResponse
	(*ItemDropRequest)(nil),                         // 7: gameMessageCore.ItemDropRequest
	(*ItemDropResponse)(nil),                        // 8: gameMessageCore.ItemDropResponse
	(*UpdateAvatarRequest)(nil),                     // 9: gameMessageCore.UpdateAvatarRequest
	(*UpdateAvatarResponse)(nil),                    // 10: gameMessageCore.UpdateAvatarResponse
	(*UnloadAvatarRequest)(nil),                     // 11: gameMessageCore.UnloadAvatarRequest
	(*UnloadAvatarResponse)(nil),                    // 12: gameMessageCore.UnloadAvatarResponse
	(*BroadCastItemAddResponse)(nil),                // 13: gameMessageCore.BroadCastItemAddResponse
	(*BroadCastItemUpdateResponse)(nil),             // 14: gameMessageCore.BroadCastItemUpdateResponse
	(*BroadCastItemDelResponse)(nil),                // 15: gameMessageCore.BroadCastItemDelResponse
	(*BroadCastUpdateItemSlotResponse)(nil),         // 16: gameMessageCore.BroadCastUpdateItemSlotResponse
	(*GetItemSlotRequest)(nil),                      // 17: gameMessageCore.GetItemSlotRequest
	(*GetItemSlotResponse)(nil),                     // 18: gameMessageCore.GetItemSlotResponse
	(*UpgradeItemSlotRequest)(nil),                  // 19: gameMessageCore.UpgradeItemSlotRequest
	(*UpgradeItemSlotResponse)(nil),                 // 20: gameMessageCore.UpgradeItemSlotResponse
	(*SigninPlayerRequest)(nil),                     // 21: gameMessageCore.SigninPlayerRequest
	(*SigninPlayerResponse)(nil),                    // 22: gameMessageCore.SigninPlayerResponse
	(*SignOutPlayerRequest)(nil),                    // 23: gameMessageCore.SignOutPlayerRequest
	(*SignOutPlayerResponse)(nil),                   // 24: gameMessageCore.SignOutPlayerResponse
	(*BroadCastEntityProfileUpdateResponse)(nil),    // 25: gameMessageCore.BroadCastEntityProfileUpdateResponse
	(*BroadCastMonsterDeathResponse)(nil),           // 26: gameMessageCore.BroadCastMonsterDeathResponse
	(*BroadCastEntityBattleDataUpdateResponse)(nil), // 27: gameMessageCore.BroadCastEntityBattleDataUpdateResponse
	(*UpgradePlayerLevelRequest)(nil),               // 28: gameMessageCore.UpgradePlayerLevelRequest
	(*UpgradePlayerLevelResponse)(nil),              // 29: gameMessageCore.UpgradePlayerLevelResponse
	(*QueryLandsRequest)(nil),                       // 30: gameMessageCore.QueryLandsRequest
	(*QueryLandsResponse)(nil),                      // 31: gameMessageCore.QueryLandsResponse
	(*BroadCastInitLandResponse)(nil),               // 32: gameMessageCore.BroadCastInitLandResponse
	(*BuildRequest)(nil),                            // 33: gameMessageCore.BuildRequest
	(*BuildResponse)(nil),                           // 34: gameMessageCore.BuildResponse
	(*RecyclingRequest)(nil),                        // 35: gameMessageCore.RecyclingRequest
	(*RecyclingResponse)(nil),                       // 36: gameMessageCore.RecyclingResponse
	(*ChargedRequest)(nil),                          // 37: gameMessageCore.ChargedRequest
	(*ChargedResponse)(nil),                         // 38: gameMessageCore.ChargedResponse
	(*HarvestRequest)(nil),                          // 39: gameMessageCore.HarvestRequest
	(*HarvestResponse)(nil),                         // 40: gameMessageCore.HarvestResponse
	(*CollectionRequest)(nil),                       // 41: gameMessageCore.CollectionRequest
	(*CollectionResponse)(nil),                      // 42: gameMessageCore.CollectionResponse
	(*BroadCastMultiUpLandResponse)(nil),            // 43: gameMessageCore.BroadCastMultiUpLandResponse
	(*SelfNftBuildsRequest)(nil),                    // 44: gameMessageCore.SelfNftBuildsRequest
	(*SelfNftBuildsResponse)(nil),                   // 45: gameMessageCore.SelfNftBuildsResponse
	(*BroadCastSelfBuildUpdateResponse)(nil),        // 46: gameMessageCore.BroadCastSelfBuildUpdateResponse
	(*BroadCastSelfBuildRecyclingResponse)(nil),     // 47: gameMessageCore.BroadCastSelfBuildRecyclingResponse
	(*MintBatteryRequest)(nil),                      // 48: gameMessageCore.MintBatteryRequest
	(*MintBatteryResponse)(nil),                     // 49: gameMessageCore.MintBatteryResponse
	(*QueryGranaryRequest)(nil),                     // 50: gameMessageCore.QueryGranaryRequest
	(*QueryGranaryResponse)(nil),                    // 51: gameMessageCore.QueryGranaryResponse
	(*GranaryCollectRequest)(nil),                   // 52: gameMessageCore.GranaryCollectRequest
	(*GranaryCollectResponse)(nil),                  // 53: gameMessageCore.GranaryCollectResponse
	(*BroadCastGranaryUpdateResponse)(nil),          // 54: gameMessageCore.BroadCastGranaryUpdateResponse
	(*BroadCastUpGranaryItemResponse)(nil),          // 55: gameMessageCore.BroadCastUpGranaryItemResponse
	(*UpgradeTalentNodeRequest)(nil),                // 56: gameMessageCore.UpgradeTalentNodeRequest
	(*UpgradeTalentNodeResponse)(nil),               // 57: gameMessageCore.UpgradeTalentNodeResponse
	(*QueryTalentExpRequest)(nil),                   // 58: gameMessageCore.QueryTalentExpRequest
	(*QueryTalentExpResponse)(nil),                  // 59: gameMessageCore.QueryTalentExpResponse
	(*BroadCastUpTalentExpResponse)(nil),            // 60: gameMessageCore.BroadCastUpTalentExpResponse
	(*QueryPlayerRequest)(nil),                      // 61: gameMessageCore.QueryPlayerRequest
	(*QueryPlayerResponse)(nil),                     // 62: gameMessageCore.QueryPlayerResponse
	(*CreatePlayerRequest)(nil),                     // 63: gameMessageCore.CreatePlayerRequest
	(*CreatePlayerResponse)(nil),                    // 64: gameMessageCore.CreatePlayerResponse
	(*EnterMapRequest)(nil),                         // 65: gameMessageCore.EnterMapRequest
	(*EnterMapResponse)(nil),                        // 66: gameMessageCore.EnterMapResponse
	(*UpdateSelfLocationRequest)(nil),               // 67: gameMessageCore.UpdateSelfLocationRequest
	(*UpdateSelfLocationResponse)(nil),              // 68: gameMessageCore.UpdateSelfLocationResponse
	(*UseSkillRequest)(nil),                         // 69: gameMessageCore.UseSkillRequest
	(*UseSkillResponse)(nil),                        // 70: gameMessageCore.UseSkillResponse
	(*RespawnPlayerRequest)(nil),                    // 71: gameMessageCore.RespawnPlayerRequest
	(*RespawnPlayerResponse)(nil),                   // 72: gameMessageCore.RespawnPlayerResponse
	(*BroadCastRespawnPlayerResponse)(nil),          // 73: gameMessageCore.BroadCastRespawnPlayerResponse
	(*PlayerActionCollectRequest)(nil),              // 74: gameMessageCore.PlayerActionCollectRequest
	(*PlayerActionCollectResponse)(nil),             // 75: gameMessageCore.PlayerActionCollectResponse
	(*BroadCastPlayerActionCollectResponse)(nil),    // 76: gameMessageCore.BroadCastPlayerActionCollectResponse
	(*PlayerActionChatRequest)(nil),                 // 77: gameMessageCore.PlayerActionChatRequest
	(*PlayerActionChatResponse)(nil),                // 78: gameMessageCore.PlayerActionChatResponse
	(*BroadCastPlayerActionChatResponse)(nil),       // 79: gameMessageCore.BroadCastPlayerActionChatResponse
	(*GetHomeDataRequest)(nil),                      // 80: gameMessageCore.GetHomeDataRequest
	(*GetHomeDataResponse)(nil),                     // 81: gameMessageCore.GetHomeDataResponse
	(*BroadCastHomeDataInitBatchResponse)(nil),      // 82: gameMessageCore.BroadCastHomeDataInitBatchResponse
	(*BroadCastInitMapElementResponse)(nil),         // 83: gameMessageCore.BroadCastInitMapElementResponse
	(*BroadCastMapEntityUpdateResponse)(nil),        // 84: gameMessageCore.BroadCastMapEntityUpdateResponse
	(*BroadCastEntityMoveResponse)(nil),             // 85: gameMessageCore.BroadCastEntityMoveResponse
	(*BroadCastEntityDestroyResponse)(nil),          // 86: gameMessageCore.BroadCastEntityDestroyResponse
	(*BroadCastEntityCombatResponse)(nil),           // 87: gameMessageCore.BroadCastEntityCombatResponse
	(*TeleportRequest)(nil),                         // 88: gameMessageCore.TeleportRequest
	(*TeleportResponse)(nil),                        // 89: gameMessageCore.TeleportResponse
	(*BroadCastEntityAvatarUpdateResponse)(nil),     // 90: gameMessageCore.BroadCastEntityAvatarUpdateResponse
	(*BroadCastEntityBuildDataUpdateResponse)(nil),  // 91: gameMessageCore.BroadCastEntityBuildDataUpdateResponse
	(*SceneDestructionRequest)(nil),                 // 92: gameMessageCore.SceneDestructionRequest
	(*SceneDestructionResponse)(nil),                // 93: gameMessageCore.SceneDestructionResponse
	(*BroadCastSceneDestructionResponse)(nil),       // 94: gameMessageCore.BroadCastSceneDestructionResponse
	(*QueryServerTimeRequest)(nil),                  // 95: gameMessageCore.QueryServerTimeRequest
	(*QueryServerTimeResponse)(nil),                 // 96: gameMessageCore.QueryServerTimeResponse
	(*BroadCastChangeServiceResponse)(nil),          // 97: gameMessageCore.BroadCastChangeServiceResponse
	(*HomeResourceOperateRequest)(nil),              // 98: gameMessageCore.HomeResourceOperateRequest
	(*HomeResourceOperateResponse)(nil),             // 99: gameMessageCore.HomeResourceOperateResponse
	(*QueryTalentTreeRequest)(nil),                  // 100: gameMessageCore.QueryTalentTreeRequest
	(*QueryTalentTreeResponse)(nil),                 // 101: gameMessageCore.QueryTalentTreeResponse
	(*BroadCastTalentTreeUpdateResponse)(nil),       // 102: gameMessageCore.BroadCastTalentTreeUpdateResponse
	(*SelfTasksRequest)(nil),                        // 103: gameMessageCore.SelfTasksRequest
	(*SelfTasksResponse)(nil),                       // 104: gameMessageCore.SelfTasksResponse
	(*BroadCastUpdateTaskListResponse)(nil),         // 105: gameMessageCore.BroadCastUpdateTaskListResponse
	(*AcceptTaskRequest)(nil),                       // 106: gameMessageCore.AcceptTaskRequest
	(*AcceptTaskResponse)(nil),                      // 107: gameMessageCore.AcceptTaskResponse
	(*AbandonmentTaskRequest)(nil),                  // 108: gameMessageCore.AbandonmentTaskRequest
	(*AbandonmentTaskResponse)(nil),                 // 109: gameMessageCore.AbandonmentTaskResponse
	(*TaskRewardRequest)(nil),                       // 110: gameMessageCore.TaskRewardRequest
	(*TaskRewardResponse)(nil),                      // 111: gameMessageCore.TaskRewardResponse
	(*TaskListRewardRequest)(nil),                   // 112: gameMessageCore.TaskListRewardRequest
	(*TaskListRewardResponse)(nil),                  // 113: gameMessageCore.TaskListRewardResponse
	(*UpgradeTaskProgressRequest)(nil),              // 114: gameMessageCore.UpgradeTaskProgressRequest
	(*UpgradeTaskProgressResponse)(nil),             // 115: gameMessageCore.UpgradeTaskProgressResponse
	(*BroadCastTaskRewardResponse)(nil),             // 116: gameMessageCore.BroadCastTaskRewardResponse
	(*SendChatMessageRequest)(nil),                  // 117: gameMessageCore.SendChatMessageRequest
	(*SendChatMessageResponse)(nil),                 // 118: gameMessageCore.SendChatMessageResponse
	(*BroadCastChatMessagesResponse)(nil),           // 119: gameMessageCore.BroadCastChatMessagesResponse
	(*BroadCastRemoveChatMessageResponse)(nil),      // 120: gameMessageCore.BroadCastRemoveChatMessageResponse
	(*BroadCastUpdateChatStateResponse)(nil),        // 121: gameMessageCore.BroadCastUpdateChatStateResponse
	(*PingRequest)(nil),                             // 122: gameMessageCore.PingRequest
	(*PingResponse)(nil),                            // 123: gameMessageCore.PingResponse
	(EnvelopeType)(0),                               // 124: gameMessageCore.EnvelopeType
	(TickOutType)(0),                                // 125: gameMessageCore.TickOutType
	(*Item)(nil),                                    // 126: gameMessageCore.Item
	(*ItemSlot)(nil),                                // 127: gameMessageCore.ItemSlot
	(AvatarPosition)(0),                             // 128: gameMessageCore.AvatarPosition
	(OSType)(0),                                     // 129: gameMessageCore.OSType
	(PlatformType)(0),                               // 130: gameMessageCore.PlatformType
	(*Player)(nil),                                  // 131: gameMessageCore.Player
	(*EntityId)(nil),                                // 132: gameMessageCore.EntityId
	(*EntityProfileUpdate)(nil),                     // 133: gameMessageCore.EntityProfileUpdate
	(*Vector3)(nil),                                 // 134: gameMessageCore.Vector3
	(*ItemBaseInfo)(nil),                            // 135: gameMessageCore.ItemBaseInfo
	(*LandData)(nil),                                // 136: gameMessageCore.LandData
	(*NftBuild)(nil),                                // 137: gameMessageCore.NftBuild
	(TalentType)(0),                                 // 138: gameMessageCore.TalentType
	(*TalentExp)(nil),                               // 139: gameMessageCore.TalentExp
	(*PlayerBaseData)(nil),                          // 140: gameMessageCore.PlayerBaseData
	(*PlayerFeature)(nil),                           // 141: gameMessageCore.PlayerFeature
	(*EntityLocation)(nil),                          // 142: gameMessageCore.EntityLocation
	(*EntityMovement)(nil),                          // 143: gameMessageCore.EntityMovement
	(PlayerRespawnPoint)(0),                         // 144: gameMessageCore.PlayerRespawnPoint
	(*ProxySoilData)(nil),                           // 145: gameMessageCore.ProxySoilData
	(*EntityWithLocation)(nil),                      // 146: gameMessageCore.EntityWithLocation
	(*DestructionElementData)(nil),                  // 147: gameMessageCore.DestructionElementData
	(EntityCombatState)(0),                          // 148: gameMessageCore.EntityCombatState
	(*EntityDamage)(nil),                            // 149: gameMessageCore.EntityDamage
	(*SkillFlyerData)(nil),                          // 150: gameMessageCore.SkillFlyerData
	(*PlayerAvatar)(nil),                            // 151: gameMessageCore.PlayerAvatar
	(ServiceType)(0),                                // 152: gameMessageCore.ServiceType
	(SceneServiceSubType)(0),                        // 153: gameMessageCore.SceneServiceSubType
	(*CollectResourceOperateInfo)(nil),              // 154: gameMessageCore.CollectResourceOperateInfo
	(*CollectResourceOperateResult)(nil),            // 155: gameMessageCore.CollectResourceOperateResult
	(*TalentLevel)(nil),                             // 156: gameMessageCore.TalentLevel
	(*TalentTree)(nil),                              // 157: gameMessageCore.TalentTree
	(*PlayerTask)(nil),                              // 158: gameMessageCore.PlayerTask
	(TaskListType)(0),                               // 159: gameMessageCore.TaskListType
	(*TaskList)(nil),                                // 160: gameMessageCore.TaskList
	(*TaskOptionItem)(nil),                          // 161: gameMessageCore.TaskOptionItem
	(*TaskOptionTargetPosition)(nil),                // 162: gameMessageCore.TaskOptionTargetPosition
	(*TaskOptionUseRecipe)(nil),                     // 163: gameMessageCore.TaskOptionUseRecipe
	(*TaskOptionCraftSkillLevel)(nil),               // 164: gameMessageCore.TaskOptionCraftSkillLevel
	(ChatChannelType)(0),                            // 165: gameMessageCore.ChatChannelType
	(*ChatMessage)(nil),                             // 166: gameMessageCore.ChatMessage
	(ChatState)(0),                                  // 167: gameMessageCore.ChatState
}
var file_message_body_proto_depIdxs = []int32{
	124, // 0: gameMessageCore.Envelope.type:type_name -> gameMessageCore.EnvelopeType
	1,   // 1: gameMessageCore.Envelope.broad_cast_tick_out_response:type_name -> gameMessageCore.BroadCastTickOutResponse
	2,   // 2: gameMessageCore.Envelope.item_get_request:type_name -> gameMessageCore.ItemGetRequest
	3,   // 3: gameMessageCore.Envelope.item_get_response:type_name -> gameMessageCore.ItemGetResponse
	5,   // 4: gameMessageCore.Envelope.item_use_request:type_name -> gameMessageCore.ItemUseRequest
	6,   // 5: gameMessageCore.Envelope.item_use_response:type_name -> gameMessageCore.ItemUseResponse
	7,   // 6: gameMessageCore.Envelope.item_drop_request:type_name -> gameMessageCore.ItemDropRequest
	8,   // 7: gameMessageCore.Envelope.item_drop_response:type_name -> gameMessageCore.ItemDropResponse
	9,   // 8: gameMessageCore.Envelope.update_avatar_request:type_name -> gameMessageCore.UpdateAvatarRequest
	10,  // 9: gameMessageCore.Envelope.update_avatar_response:type_name -> gameMessageCore.UpdateAvatarResponse
	11,  // 10: gameMessageCore.Envelope.unload_avatar_request:type_name -> gameMessageCore.UnloadAvatarRequest
	12,  // 11: gameMessageCore.Envelope.unload_avatar_response:type_name -> gameMessageCore.UnloadAvatarResponse
	13,  // 12: gameMessageCore.Envelope.broad_cast_item_add_response:type_name -> gameMessageCore.BroadCastItemAddResponse
	14,  // 13: gameMessageCore.Envelope.broad_cast_item_update_response:type_name -> gameMessageCore.BroadCastItemUpdateResponse
	15,  // 14: gameMessageCore.Envelope.broad_cast_item_del_response:type_name -> gameMessageCore.BroadCastItemDelResponse
	16,  // 15: gameMessageCore.Envelope.broad_cast_update_item_slot_response:type_name -> gameMessageCore.BroadCastUpdateItemSlotResponse
	17,  // 16: gameMessageCore.Envelope.get_item_slot_request:type_name -> gameMessageCore.GetItemSlotRequest
	18,  // 17: gameMessageCore.Envelope.get_item_slot_response:type_name -> gameMessageCore.GetItemSlotResponse
	19,  // 18: gameMessageCore.Envelope.upgrade_item_slot_request:type_name -> gameMessageCore.UpgradeItemSlotRequest
	20,  // 19: gameMessageCore.Envelope.upgrade_item_slot_response:type_name -> gameMessageCore.UpgradeItemSlotResponse
	21,  // 20: gameMessageCore.Envelope.signin_player_request:type_name -> gameMessageCore.SigninPlayerRequest
	22,  // 21: gameMessageCore.Envelope.signin_player_response:type_name -> gameMessageCore.SigninPlayerResponse
	23,  // 22: gameMessageCore.Envelope.sign_out_player_request:type_name -> gameMessageCore.SignOutPlayerRequest
	24,  // 23: gameMessageCore.Envelope.sign_out_player_response:type_name -> gameMessageCore.SignOutPlayerResponse
	28,  // 24: gameMessageCore.Envelope.upgrade_player_level_request:type_name -> gameMessageCore.UpgradePlayerLevelRequest
	29,  // 25: gameMessageCore.Envelope.upgrade_player_level_response:type_name -> gameMessageCore.UpgradePlayerLevelResponse
	30,  // 26: gameMessageCore.Envelope.query_lands_request:type_name -> gameMessageCore.QueryLandsRequest
	31,  // 27: gameMessageCore.Envelope.query_lands_response:type_name -> gameMessageCore.QueryLandsResponse
	32,  // 28: gameMessageCore.Envelope.broad_cast_init_land_response:type_name -> gameMessageCore.BroadCastInitLandResponse
	4,   // 29: gameMessageCore.Envelope.broad_cast_init_item_response:type_name -> gameMessageCore.BroadCastInitItemResponse
	33,  // 30: gameMessageCore.Envelope.build_request:type_name -> gameMessageCore.BuildRequest
	34,  // 31: gameMessageCore.Envelope.build_response:type_name -> gameMessageCore.BuildResponse
	35,  // 32: gameMessageCore.Envelope.recycling_request:type_name -> gameMessageCore.RecyclingRequest
	36,  // 33: gameMessageCore.Envelope.recycling_response:type_name -> gameMessageCore.RecyclingResponse
	37,  // 34: gameMessageCore.Envelope.charged_request:type_name -> gameMessageCore.ChargedRequest
	38,  // 35: gameMessageCore.Envelope.charged_response:type_name -> gameMessageCore.ChargedResponse
	39,  // 36: gameMessageCore.Envelope.harvest_request:type_name -> gameMessageCore.HarvestRequest
	40,  // 37: gameMessageCore.Envelope.harvest_response:type_name -> gameMessageCore.HarvestResponse
	41,  // 38: gameMessageCore.Envelope.collection_request:type_name -> gameMessageCore.CollectionRequest
	42,  // 39: gameMessageCore.Envelope.collection_response:type_name -> gameMessageCore.CollectionResponse
	43,  // 40: gameMessageCore.Envelope.broad_cast_multi_up_land_response:type_name -> gameMessageCore.BroadCastMultiUpLandResponse
	44,  // 41: gameMessageCore.Envelope.self_nft_builds_request:type_name -> gameMessageCore.SelfNftBuildsRequest
	45,  // 42: gameMessageCore.Envelope.self_nft_builds_response:type_name -> gameMessageCore.SelfNftBuildsResponse
	46,  // 43: gameMessageCore.Envelope.broad_cast_self_build_update_response:type_name -> gameMessageCore.BroadCastSelfBuildUpdateResponse
	47,  // 44: gameMessageCore.Envelope.broad_cast_self_build_recycling_response:type_name -> gameMessageCore.BroadCastSelfBuildRecyclingResponse
	48,  // 45: gameMessageCore.Envelope.mint_battery_request:type_name -> gameMessageCore.MintBatteryRequest
	49,  // 46: gameMessageCore.Envelope.mint_battery_response:type_name -> gameMessageCore.MintBatteryResponse
	50,  // 47: gameMessageCore.Envelope.query_granary_request:type_name -> gameMessageCore.QueryGranaryRequest
	51,  // 48: gameMessageCore.Envelope.query_granary_response:type_name -> gameMessageCore.QueryGranaryResponse
	52,  // 49: gameMessageCore.Envelope.granary_collect_request:type_name -> gameMessageCore.GranaryCollectRequest
	53,  // 50: gameMessageCore.Envelope.granary_collect_response:type_name -> gameMessageCore.GranaryCollectResponse
	54,  // 51: gameMessageCore.Envelope.broad_cast_granary_update_response:type_name -> gameMessageCore.BroadCastGranaryUpdateResponse
	55,  // 52: gameMessageCore.Envelope.broad_cast_up_granary_item_response:type_name -> gameMessageCore.BroadCastUpGranaryItemResponse
	56,  // 53: gameMessageCore.Envelope.upgrade_talent_node_request:type_name -> gameMessageCore.UpgradeTalentNodeRequest
	57,  // 54: gameMessageCore.Envelope.upgrade_talent_node_response:type_name -> gameMessageCore.UpgradeTalentNodeResponse
	58,  // 55: gameMessageCore.Envelope.query_talent_exp_request:type_name -> gameMessageCore.QueryTalentExpRequest
	59,  // 56: gameMessageCore.Envelope.query_talent_exp_response:type_name -> gameMessageCore.QueryTalentExpResponse
	60,  // 57: gameMessageCore.Envelope.broad_cast_up_talent_exp_response:type_name -> gameMessageCore.BroadCastUpTalentExpResponse
	61,  // 58: gameMessageCore.Envelope.query_player_request:type_name -> gameMessageCore.QueryPlayerRequest
	62,  // 59: gameMessageCore.Envelope.query_player_response:type_name -> gameMessageCore.QueryPlayerResponse
	63,  // 60: gameMessageCore.Envelope.create_player_request:type_name -> gameMessageCore.CreatePlayerRequest
	64,  // 61: gameMessageCore.Envelope.create_player_response:type_name -> gameMessageCore.CreatePlayerResponse
	65,  // 62: gameMessageCore.Envelope.enter_map_request:type_name -> gameMessageCore.EnterMapRequest
	66,  // 63: gameMessageCore.Envelope.enter_map_response:type_name -> gameMessageCore.EnterMapResponse
	67,  // 64: gameMessageCore.Envelope.update_self_location_request:type_name -> gameMessageCore.UpdateSelfLocationRequest
	68,  // 65: gameMessageCore.Envelope.update_self_location_response:type_name -> gameMessageCore.UpdateSelfLocationResponse
	69,  // 66: gameMessageCore.Envelope.use_skill_request:type_name -> gameMessageCore.UseSkillRequest
	70,  // 67: gameMessageCore.Envelope.use_skill_response:type_name -> gameMessageCore.UseSkillResponse
	71,  // 68: gameMessageCore.Envelope.respawn_player_request:type_name -> gameMessageCore.RespawnPlayerRequest
	72,  // 69: gameMessageCore.Envelope.respawn_player_response:type_name -> gameMessageCore.RespawnPlayerResponse
	83,  // 70: gameMessageCore.Envelope.broad_cast_init_map_element_response:type_name -> gameMessageCore.BroadCastInitMapElementResponse
	84,  // 71: gameMessageCore.Envelope.broad_cast_map_entity_update_response:type_name -> gameMessageCore.BroadCastMapEntityUpdateResponse
	86,  // 72: gameMessageCore.Envelope.broad_cast_entity_destroy_response:type_name -> gameMessageCore.BroadCastEntityDestroyResponse
	85,  // 73: gameMessageCore.Envelope.broad_cast_entity_move_response:type_name -> gameMessageCore.BroadCastEntityMoveResponse
	87,  // 74: gameMessageCore.Envelope.broad_cast_entity_combat_response:type_name -> gameMessageCore.BroadCastEntityCombatResponse
	73,  // 75: gameMessageCore.Envelope.broad_cast_respawn_player_response:type_name -> gameMessageCore.BroadCastRespawnPlayerResponse
	88,  // 76: gameMessageCore.Envelope.teleport_request:type_name -> gameMessageCore.TeleportRequest
	89,  // 77: gameMessageCore.Envelope.teleport_response:type_name -> gameMessageCore.TeleportResponse
	25,  // 78: gameMessageCore.Envelope.broad_cast_entity_profile_update_response:type_name -> gameMessageCore.BroadCastEntityProfileUpdateResponse
	26,  // 79: gameMessageCore.Envelope.broad_cast_monster_death_response:type_name -> gameMessageCore.BroadCastMonsterDeathResponse
	90,  // 80: gameMessageCore.Envelope.broad_cast_entity_avatar_update_response:type_name -> gameMessageCore.BroadCastEntityAvatarUpdateResponse
	27,  // 81: gameMessageCore.Envelope.broad_cast_entity_battle_data_update_response:type_name -> gameMessageCore.BroadCastEntityBattleDataUpdateResponse
	91,  // 82: gameMessageCore.Envelope.broad_cast_entity_build_data_update_response:type_name -> gameMessageCore.BroadCastEntityBuildDataUpdateResponse
	74,  // 83: gameMessageCore.Envelope.player_action_collect_request:type_name -> gameMessageCore.PlayerActionCollectRequest
	75,  // 84: gameMessageCore.Envelope.player_action_collect_response:type_name -> gameMessageCore.PlayerActionCollectResponse
	76,  // 85: gameMessageCore.Envelope.broad_cast_player_action_collect_response:type_name -> gameMessageCore.BroadCastPlayerActionCollectResponse
	92,  // 86: gameMessageCore.Envelope.scene_destruction_request:type_name -> gameMessageCore.SceneDestructionRequest
	93,  // 87: gameMessageCore.Envelope.scene_destruction_response:type_name -> gameMessageCore.SceneDestructionResponse
	94,  // 88: gameMessageCore.Envelope.broad_cast_scene_destruction_response:type_name -> gameMessageCore.BroadCastSceneDestructionResponse
	77,  // 89: gameMessageCore.Envelope.player_action_chat_request:type_name -> gameMessageCore.PlayerActionChatRequest
	78,  // 90: gameMessageCore.Envelope.player_action_chat_response:type_name -> gameMessageCore.PlayerActionChatResponse
	79,  // 91: gameMessageCore.Envelope.broad_cast_player_action_chat_response:type_name -> gameMessageCore.BroadCastPlayerActionChatResponse
	80,  // 92: gameMessageCore.Envelope.get_home_data_request:type_name -> gameMessageCore.GetHomeDataRequest
	81,  // 93: gameMessageCore.Envelope.get_home_data_response:type_name -> gameMessageCore.GetHomeDataResponse
	95,  // 94: gameMessageCore.Envelope.query_Server_time_request:type_name -> gameMessageCore.QueryServerTimeRequest
	96,  // 95: gameMessageCore.Envelope.query_Server_time_response:type_name -> gameMessageCore.QueryServerTimeResponse
	97,  // 96: gameMessageCore.Envelope.broad_cast_change_service_response:type_name -> gameMessageCore.BroadCastChangeServiceResponse
	98,  // 97: gameMessageCore.Envelope.home_resource_operate_request:type_name -> gameMessageCore.HomeResourceOperateRequest
	99,  // 98: gameMessageCore.Envelope.home_resource_operate_response:type_name -> gameMessageCore.HomeResourceOperateResponse
	82,  // 99: gameMessageCore.Envelope.broad_cast_home_data_init_batch_response:type_name -> gameMessageCore.BroadCastHomeDataInitBatchResponse
	100, // 100: gameMessageCore.Envelope.query_talent_tree_request:type_name -> gameMessageCore.QueryTalentTreeRequest
	101, // 101: gameMessageCore.Envelope.query_talent_tree_response:type_name -> gameMessageCore.QueryTalentTreeResponse
	102, // 102: gameMessageCore.Envelope.broad_cast_talent_tree_update_response:type_name -> gameMessageCore.BroadCastTalentTreeUpdateResponse
	103, // 103: gameMessageCore.Envelope.self_tasks_request:type_name -> gameMessageCore.SelfTasksRequest
	104, // 104: gameMessageCore.Envelope.self_tasks_response:type_name -> gameMessageCore.SelfTasksResponse
	105, // 105: gameMessageCore.Envelope.broad_cast_update_task_list_response:type_name -> gameMessageCore.BroadCastUpdateTaskListResponse
	106, // 106: gameMessageCore.Envelope.accept_task_request:type_name -> gameMessageCore.AcceptTaskRequest
	107, // 107: gameMessageCore.Envelope.accept_task_response:type_name -> gameMessageCore.AcceptTaskResponse
	108, // 108: gameMessageCore.Envelope.abandonment_task_request:type_name -> gameMessageCore.AbandonmentTaskRequest
	109, // 109: gameMessageCore.Envelope.abandonment_task_response:type_name -> gameMessageCore.AbandonmentTaskResponse
	110, // 110: gameMessageCore.Envelope.task_reward_request:type_name -> gameMessageCore.TaskRewardRequest
	111, // 111: gameMessageCore.Envelope.task_reward_response:type_name -> gameMessageCore.TaskRewardResponse
	112, // 112: gameMessageCore.Envelope.task_list_reward_request:type_name -> gameMessageCore.TaskListRewardRequest
	113, // 113: gameMessageCore.Envelope.task_list_reward_response:type_name -> gameMessageCore.TaskListRewardResponse
	114, // 114: gameMessageCore.Envelope.upgrade_task_progress_request:type_name -> gameMessageCore.UpgradeTaskProgressRequest
	115, // 115: gameMessageCore.Envelope.upgrade_task_progress_response:type_name -> gameMessageCore.UpgradeTaskProgressResponse
	116, // 116: gameMessageCore.Envelope.broad_cast_task_reward_response:type_name -> gameMessageCore.BroadCastTaskRewardResponse
	117, // 117: gameMessageCore.Envelope.send_chat_message_request:type_name -> gameMessageCore.SendChatMessageRequest
	118, // 118: gameMessageCore.Envelope.send_chat_message_response:type_name -> gameMessageCore.SendChatMessageResponse
	119, // 119: gameMessageCore.Envelope.broad_cast_chat_messages_response:type_name -> gameMessageCore.BroadCastChatMessagesResponse
	120, // 120: gameMessageCore.Envelope.broad_cast_remove_chat_message_response:type_name -> gameMessageCore.BroadCastRemoveChatMessageResponse
	121, // 121: gameMessageCore.Envelope.broad_cast_update_chat_state_response:type_name -> gameMessageCore.BroadCastUpdateChatStateResponse
	122, // 122: gameMessageCore.Envelope.ping_request:type_name -> gameMessageCore.PingRequest
	123, // 123: gameMessageCore.Envelope.ping_response:type_name -> gameMessageCore.PingResponse
	125, // 124: gameMessageCore.BroadCastTickOutResponse.kind:type_name -> gameMessageCore.TickOutType
	126, // 125: gameMessageCore.BroadCastInitItemResponse.items:type_name -> gameMessageCore.Item
	126, // 126: gameMessageCore.BroadCastItemAddResponse.items:type_name -> gameMessageCore.Item
	126, // 127: gameMessageCore.BroadCastItemUpdateResponse.items:type_name -> gameMessageCore.Item
	126, // 128: gameMessageCore.BroadCastItemDelResponse.items:type_name -> gameMessageCore.Item
	127, // 129: gameMessageCore.BroadCastUpdateItemSlotResponse.slots:type_name -> gameMessageCore.ItemSlot
	127, // 130: gameMessageCore.GetItemSlotResponse.slots:type_name -> gameMessageCore.ItemSlot
	128, // 131: gameMessageCore.UpgradeItemSlotRequest.position:type_name -> gameMessageCore.AvatarPosition
	127, // 132: gameMessageCore.UpgradeItemSlotResponse.slots:type_name -> gameMessageCore.ItemSlot
	129, // 133: gameMessageCore.SigninPlayerRequest.os_type:type_name -> gameMessageCore.OSType
	130, // 134: gameMessageCore.SigninPlayerRequest.platform:type_name -> gameMessageCore.PlatformType
	131, // 135: gameMessageCore.SigninPlayerResponse.player:type_name -> gameMessageCore.Player
	132, // 136: gameMessageCore.BroadCastEntityProfileUpdateResponse.entity_id:type_name -> gameMessageCore.EntityId
	133, // 137: gameMessageCore.BroadCastEntityProfileUpdateResponse.profiles:type_name -> gameMessageCore.EntityProfileUpdate
	134, // 138: gameMessageCore.BroadCastMonsterDeathResponse.pos:type_name -> gameMessageCore.Vector3
	135, // 139: gameMessageCore.BroadCastMonsterDeathResponse.drop_list:type_name -> gameMessageCore.ItemBaseInfo
	132, // 140: gameMessageCore.BroadCastEntityBattleDataUpdateResponse.entity_id:type_name -> gameMessageCore.EntityId
	136, // 141: gameMessageCore.BroadCastInitLandResponse.lands:type_name -> gameMessageCore.LandData
	134, // 142: gameMessageCore.BuildRequest.position:type_name -> gameMessageCore.Vector3
	137, // 143: gameMessageCore.BuildResponse.build:type_name -> gameMessageCore.NftBuild
	136, // 144: gameMessageCore.BroadCastMultiUpLandResponse.lands:type_name -> gameMessageCore.LandData
	137, // 145: gameMessageCore.SelfNftBuildsResponse.builds:type_name -> gameMessageCore.NftBuild
	137, // 146: gameMessageCore.BroadCastSelfBuildUpdateResponse.build:type_name -> gameMessageCore.NftBuild
	135, // 147: gameMessageCore.QueryGranaryResponse.items:type_name -> gameMessageCore.ItemBaseInfo
	135, // 148: gameMessageCore.GranaryCollectResponse.items:type_name -> gameMessageCore.ItemBaseInfo
	135, // 149: gameMessageCore.BroadCastGranaryUpdateResponse.items:type_name -> gameMessageCore.ItemBaseInfo
	135, // 150: gameMessageCore.BroadCastUpGranaryItemResponse.items:type_name -> gameMessageCore.ItemBaseInfo
	138, // 151: gameMessageCore.UpgradeTalentNodeRequest.type:type_name -> gameMessageCore.TalentType
	139, // 152: gameMessageCore.QueryTalentExpResponse.expData:type_name -> gameMessageCore.TalentExp
	139, // 153: gameMessageCore.BroadCastUpTalentExpResponse.updateExps:type_name -> gameMessageCore.TalentExp
	140, // 154: gameMessageCore.QueryPlayerResponse.player:type_name -> gameMessageCore.PlayerBaseData
	141, // 155: gameMessageCore.CreatePlayerRequest.feature:type_name -> gameMessageCore.PlayerFeature
	129, // 156: gameMessageCore.CreatePlayerRequest.os_type:type_name -> gameMessageCore.OSType
	130, // 157: gameMessageCore.CreatePlayerRequest.platform:type_name -> gameMessageCore.PlatformType
	140, // 158: gameMessageCore.CreatePlayerResponse.player:type_name -> gameMessageCore.PlayerBaseData
	131, // 159: gameMessageCore.EnterMapResponse.me:type_name -> gameMessageCore.Player
	142, // 160: gameMessageCore.EnterMapResponse.location:type_name -> gameMessageCore.EntityLocation
	143, // 161: gameMessageCore.UpdateSelfLocationRequest.movement:type_name -> gameMessageCore.EntityMovement
	143, // 162: gameMessageCore.UpdateSelfLocationResponse.movement:type_name -> gameMessageCore.EntityMovement
	142, // 163: gameMessageCore.UseSkillRequest.dir:type_name -> gameMessageCore.EntityLocation
	142, // 164: gameMessageCore.UseSkillRequest.from_location:type_name -> gameMessageCore.EntityLocation
	132, // 165: gameMessageCore.UseSkillRequest.target_id:type_name -> gameMessageCore.EntityId
	144, // 166: gameMessageCore.RespawnPlayerRequest.respawn_point:type_name -> gameMessageCore.PlayerRespawnPoint
	142, // 167: gameMessageCore.RespawnPlayerResponse.location:type_name -> gameMessageCore.EntityLocation
	142, // 168: gameMessageCore.BroadCastRespawnPlayerResponse.location:type_name -> gameMessageCore.EntityLocation
	145, // 169: gameMessageCore.BroadCastHomeDataInitBatchResponse.soilDataList:type_name -> gameMessageCore.ProxySoilData
	146, // 170: gameMessageCore.BroadCastInitMapElementResponse.entity:type_name -> gameMessageCore.EntityWithLocation
	147, // 171: gameMessageCore.BroadCastInitMapElementResponse.destruction_elements:type_name -> gameMessageCore.DestructionElementData
	146, // 172: gameMessageCore.BroadCastMapEntityUpdateResponse.entity_added:type_name -> gameMessageCore.EntityWithLocation
	132, // 173: gameMessageCore.BroadCastMapEntityUpdateResponse.entity_removed:type_name -> gameMessageCore.EntityId
	147, // 174: gameMessageCore.BroadCastMapEntityUpdateResponse.destruction_elements:type_name -> gameMessageCore.DestructionElementData
	143, // 175: gameMessageCore.BroadCastEntityMoveResponse.moves:type_name -> gameMessageCore.EntityMovement
	132, // 176: gameMessageCore.BroadCastEntityDestroyResponse.entities:type_name -> gameMessageCore.EntityId
	148, // 177: gameMessageCore.BroadCastEntityCombatResponse.state:type_name -> gameMessageCore.EntityCombatState
	132, // 178: gameMessageCore.BroadCastEntityCombatResponse.from_entity:type_name -> gameMessageCore.EntityId
	142, // 179: gameMessageCore.BroadCastEntityCombatResponse.dir:type_name -> gameMessageCore.EntityLocation
	142, // 180: gameMessageCore.BroadCastEntityCombatResponse.from_location:type_name -> gameMessageCore.EntityLocation
	149, // 181: gameMessageCore.BroadCastEntityCombatResponse.targets:type_name -> gameMessageCore.EntityDamage
	150, // 182: gameMessageCore.BroadCastEntityCombatResponse.flyers:type_name -> gameMessageCore.SkillFlyerData
	134, // 183: gameMessageCore.TeleportRequest.to_pos:type_name -> gameMessageCore.Vector3
	132, // 184: gameMessageCore.BroadCastEntityAvatarUpdateResponse.entity_id:type_name -> gameMessageCore.EntityId
	151, // 185: gameMessageCore.BroadCastEntityAvatarUpdateResponse.avatars:type_name -> gameMessageCore.PlayerAvatar
	132, // 186: gameMessageCore.BroadCastEntityBuildDataUpdateResponse.entity_id:type_name -> gameMessageCore.EntityId
	147, // 187: gameMessageCore.BroadCastSceneDestructionResponse.destruction_elements:type_name -> gameMessageCore.DestructionElementData
	152, // 188: gameMessageCore.BroadCastChangeServiceResponse.serType:type_name -> gameMessageCore.ServiceType
	153, // 189: gameMessageCore.BroadCastChangeServiceResponse.serSubType:type_name -> gameMessageCore.SceneServiceSubType
	154, // 190: gameMessageCore.HomeResourceOperateRequest.operateInfoList:type_name -> gameMessageCore.CollectResourceOperateInfo
	155, // 191: gameMessageCore.HomeResourceOperateResponse.operateResultList:type_name -> gameMessageCore.CollectResourceOperateResult
	156, // 192: gameMessageCore.QueryTalentTreeResponse.levelData:type_name -> gameMessageCore.TalentLevel
	157, // 193: gameMessageCore.QueryTalentTreeResponse.tree:type_name -> gameMessageCore.TalentTree
	156, // 194: gameMessageCore.BroadCastTalentTreeUpdateResponse.levelData:type_name -> gameMessageCore.TalentLevel
	157, // 195: gameMessageCore.BroadCastTalentTreeUpdateResponse.tree:type_name -> gameMessageCore.TalentTree
	158, // 196: gameMessageCore.SelfTasksResponse.tasks:type_name -> gameMessageCore.PlayerTask
	159, // 197: gameMessageCore.BroadCastUpdateTaskListResponse.kind:type_name -> gameMessageCore.TaskListType
	160, // 198: gameMessageCore.BroadCastUpdateTaskListResponse.task_list_info:type_name -> gameMessageCore.TaskList
	159, // 199: gameMessageCore.AcceptTaskRequest.kind:type_name -> gameMessageCore.TaskListType
	160, // 200: gameMessageCore.AcceptTaskResponse.task_list_info:type_name -> gameMessageCore.TaskList
	159, // 201: gameMessageCore.AbandonmentTaskRequest.kind:type_name -> gameMessageCore.TaskListType
	160, // 202: gameMessageCore.AbandonmentTaskResponse.task_list_info:type_name -> gameMessageCore.TaskList
	159, // 203: gameMessageCore.TaskRewardRequest.task_list_kind:type_name -> gameMessageCore.TaskListType
	160, // 204: gameMessageCore.TaskRewardResponse.task_list_info:type_name -> gameMessageCore.TaskList
	159, // 205: gameMessageCore.TaskListRewardRequest.kind:type_name -> gameMessageCore.TaskListType
	160, // 206: gameMessageCore.TaskListRewardResponse.task_list_info:type_name -> gameMessageCore.TaskList
	159, // 207: gameMessageCore.UpgradeTaskProgressRequest.task_list_kind:type_name -> gameMessageCore.TaskListType
	161, // 208: gameMessageCore.UpgradeTaskProgressRequest.items:type_name -> gameMessageCore.TaskOptionItem
	162, // 209: gameMessageCore.UpgradeTaskProgressRequest.pos:type_name -> gameMessageCore.TaskOptionTargetPosition
	163, // 210: gameMessageCore.UpgradeTaskProgressRequest.useRecipe:type_name -> gameMessageCore.TaskOptionUseRecipe
	164, // 211: gameMessageCore.UpgradeTaskProgressRequest.craftSkillLevel:type_name -> gameMessageCore.TaskOptionCraftSkillLevel
	159, // 212: gameMessageCore.BroadCastTaskRewardResponse.task_list_kind:type_name -> gameMessageCore.TaskListType
	135, // 213: gameMessageCore.BroadCastTaskRewardResponse.reward_item:type_name -> gameMessageCore.ItemBaseInfo
	165, // 214: gameMessageCore.SendChatMessageRequest.chat_type:type_name -> gameMessageCore.ChatChannelType
	166, // 215: gameMessageCore.BroadCastChatMessagesResponse.messages:type_name -> gameMessageCore.ChatMessage
	167, // 216: gameMessageCore.BroadCastUpdateChatStateResponse.chat_state:type_name -> gameMessageCore.ChatState
	217, // [217:217] is the sub-list for method output_type
	217, // [217:217] is the sub-list for method input_type
	217, // [217:217] is the sub-list for extension type_name
	217, // [217:217] is the sub-list for extension extendee
	0,   // [0:217] is the sub-list for field type_name
}

func init() { file_message_body_proto_init() }
func file_message_body_proto_init() {
	if File_message_body_proto != nil {
		return
	}
	file_message_cmd_proto_init()
	file_player_proto_init()
	file_os_proto_init()
	file_platform_proto_init()
	file_item_proto_init()
	file_item_slot_proto_init()
	file_entity_proto_init()
	file_entityProfile_proto_init()
	file_skill_proto_init()
	file_task_proto_init()
	file_chat_proto_init()
	file_vector_proto_init()
	file_land_proto_init()
	file_service_proto_init()
	file_home_proto_init()
	file_talent_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_message_body_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Envelope); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastTickOutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemGetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastInitItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemUseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemDropRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ItemDropResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadAvatarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnloadAvatarResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastItemAddResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastItemUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastItemDelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastUpdateItemSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetItemSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeItemSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeItemSlotResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigninPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SigninPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOutPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignOutPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityProfileUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastMonsterDeathResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityBattleDataUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradePlayerLevelRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradePlayerLevelResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLandsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryLandsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastInitLandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecyclingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RecyclingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChargedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HarvestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HarvestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CollectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastMultiUpLandResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfNftBuildsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfNftBuildsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastSelfBuildUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastSelfBuildRecyclingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintBatteryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintBatteryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGranaryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryGranaryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GranaryCollectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GranaryCollectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastGranaryUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastUpGranaryItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeTalentNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeTalentNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTalentExpRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTalentExpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastUpTalentExpResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterMapRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnterMapResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSelfLocationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSelfLocationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseSkillRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UseSkillResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespawnPlayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RespawnPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastRespawnPlayerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerActionCollectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerActionCollectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastPlayerActionCollectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerActionChatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlayerActionChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastPlayerActionChatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomeDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHomeDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastHomeDataInitBatchResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastInitMapElementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastMapEntityUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityMoveResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityDestroyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityCombatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeleportRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TeleportResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityAvatarUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastEntityBuildDataUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneDestructionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SceneDestructionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastSceneDestructionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryServerTimeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryServerTimeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastChangeServiceResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeResourceOperateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HomeResourceOperateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTalentTreeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryTalentTreeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastTalentTreeUpdateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfTasksRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelfTasksResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastUpdateTaskListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AcceptTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonmentTaskRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AbandonmentTaskResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListRewardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TaskListRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeTaskProgressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpgradeTaskProgressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastTaskRewardResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendChatMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastChatMessagesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastRemoveChatMessageResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadCastUpdateChatStateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_message_body_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_message_body_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Envelope_BroadCastTickOutResponse)(nil),
		(*Envelope_ItemGetRequest)(nil),
		(*Envelope_ItemGetResponse)(nil),
		(*Envelope_ItemUseRequest)(nil),
		(*Envelope_ItemUseResponse)(nil),
		(*Envelope_ItemDropRequest)(nil),
		(*Envelope_ItemDropResponse)(nil),
		(*Envelope_UpdateAvatarRequest)(nil),
		(*Envelope_UpdateAvatarResponse)(nil),
		(*Envelope_UnloadAvatarRequest)(nil),
		(*Envelope_UnloadAvatarResponse)(nil),
		(*Envelope_BroadCastItemAddResponse)(nil),
		(*Envelope_BroadCastItemUpdateResponse)(nil),
		(*Envelope_BroadCastItemDelResponse)(nil),
		(*Envelope_BroadCastUpdateItemSlotResponse)(nil),
		(*Envelope_GetItemSlotRequest)(nil),
		(*Envelope_GetItemSlotResponse)(nil),
		(*Envelope_UpgradeItemSlotRequest)(nil),
		(*Envelope_UpgradeItemSlotResponse)(nil),
		(*Envelope_SigninPlayerRequest)(nil),
		(*Envelope_SigninPlayerResponse)(nil),
		(*Envelope_SignOutPlayerRequest)(nil),
		(*Envelope_SignOutPlayerResponse)(nil),
		(*Envelope_UpgradePlayerLevelRequest)(nil),
		(*Envelope_UpgradePlayerLevelResponse)(nil),
		(*Envelope_QueryLandsRequest)(nil),
		(*Envelope_QueryLandsResponse)(nil),
		(*Envelope_BroadCastInitLandResponse)(nil),
		(*Envelope_BroadCastInitItemResponse)(nil),
		(*Envelope_BuildRequest)(nil),
		(*Envelope_BuildResponse)(nil),
		(*Envelope_RecyclingRequest)(nil),
		(*Envelope_RecyclingResponse)(nil),
		(*Envelope_ChargedRequest)(nil),
		(*Envelope_ChargedResponse)(nil),
		(*Envelope_HarvestRequest)(nil),
		(*Envelope_HarvestResponse)(nil),
		(*Envelope_CollectionRequest)(nil),
		(*Envelope_CollectionResponse)(nil),
		(*Envelope_BroadCastMultiUpLandResponse)(nil),
		(*Envelope_SelfNftBuildsRequest)(nil),
		(*Envelope_SelfNftBuildsResponse)(nil),
		(*Envelope_BroadCastSelfBuildUpdateResponse)(nil),
		(*Envelope_BroadCastSelfBuildRecyclingResponse)(nil),
		(*Envelope_MintBatteryRequest)(nil),
		(*Envelope_MintBatteryResponse)(nil),
		(*Envelope_QueryGranaryRequest)(nil),
		(*Envelope_QueryGranaryResponse)(nil),
		(*Envelope_GranaryCollectRequest)(nil),
		(*Envelope_GranaryCollectResponse)(nil),
		(*Envelope_BroadCastGranaryUpdateResponse)(nil),
		(*Envelope_BroadCastUpGranaryItemResponse)(nil),
		(*Envelope_UpgradeTalentNodeRequest)(nil),
		(*Envelope_UpgradeTalentNodeResponse)(nil),
		(*Envelope_QueryTalentExpRequest)(nil),
		(*Envelope_QueryTalentExpResponse)(nil),
		(*Envelope_BroadCastUpTalentExpResponse)(nil),
		(*Envelope_QueryPlayerRequest)(nil),
		(*Envelope_QueryPlayerResponse)(nil),
		(*Envelope_CreatePlayerRequest)(nil),
		(*Envelope_CreatePlayerResponse)(nil),
		(*Envelope_EnterMapRequest)(nil),
		(*Envelope_EnterMapResponse)(nil),
		(*Envelope_UpdateSelfLocationRequest)(nil),
		(*Envelope_UpdateSelfLocationResponse)(nil),
		(*Envelope_UseSkillRequest)(nil),
		(*Envelope_UseSkillResponse)(nil),
		(*Envelope_RespawnPlayerRequest)(nil),
		(*Envelope_RespawnPlayerResponse)(nil),
		(*Envelope_BroadCastInitMapElementResponse)(nil),
		(*Envelope_BroadCastMapEntityUpdateResponse)(nil),
		(*Envelope_BroadCastEntityDestroyResponse)(nil),
		(*Envelope_BroadCastEntityMoveResponse)(nil),
		(*Envelope_BroadCastEntityCombatResponse)(nil),
		(*Envelope_BroadCastRespawnPlayerResponse)(nil),
		(*Envelope_TeleportRequest)(nil),
		(*Envelope_TeleportResponse)(nil),
		(*Envelope_BroadCastEntityProfileUpdateResponse)(nil),
		(*Envelope_BroadCastMonsterDeathResponse)(nil),
		(*Envelope_BroadCastEntityAvatarUpdateResponse)(nil),
		(*Envelope_BroadCastEntityBattleDataUpdateResponse)(nil),
		(*Envelope_BroadCastEntityBuildDataUpdateResponse)(nil),
		(*Envelope_PlayerActionCollectRequest)(nil),
		(*Envelope_PlayerActionCollectResponse)(nil),
		(*Envelope_BroadCastPlayerActionCollectResponse)(nil),
		(*Envelope_SceneDestructionRequest)(nil),
		(*Envelope_SceneDestructionResponse)(nil),
		(*Envelope_BroadCastSceneDestructionResponse)(nil),
		(*Envelope_PlayerActionChatRequest)(nil),
		(*Envelope_PlayerActionChatResponse)(nil),
		(*Envelope_BroadCastPlayerActionChatResponse)(nil),
		(*Envelope_GetHomeDataRequest)(nil),
		(*Envelope_GetHomeDataResponse)(nil),
		(*Envelope_Query_ServerTimeRequest)(nil),
		(*Envelope_Query_ServerTimeResponse)(nil),
		(*Envelope_BroadCastChangeServiceResponse)(nil),
		(*Envelope_HomeResourceOperateRequest)(nil),
		(*Envelope_HomeResourceOperateResponse)(nil),
		(*Envelope_BroadCastHomeDataInitBatchResponse)(nil),
		(*Envelope_QueryTalentTreeRequest)(nil),
		(*Envelope_QueryTalentTreeResponse)(nil),
		(*Envelope_BroadCastTalentTreeUpdateResponse)(nil),
		(*Envelope_SelfTasksRequest)(nil),
		(*Envelope_SelfTasksResponse)(nil),
		(*Envelope_BroadCastUpdateTaskListResponse)(nil),
		(*Envelope_AcceptTaskRequest)(nil),
		(*Envelope_AcceptTaskResponse)(nil),
		(*Envelope_AbandonmentTaskRequest)(nil),
		(*Envelope_AbandonmentTaskResponse)(nil),
		(*Envelope_TaskRewardRequest)(nil),
		(*Envelope_TaskRewardResponse)(nil),
		(*Envelope_TaskListRewardRequest)(nil),
		(*Envelope_TaskListRewardResponse)(nil),
		(*Envelope_UpgradeTaskProgressRequest)(nil),
		(*Envelope_UpgradeTaskProgressResponse)(nil),
		(*Envelope_BroadCastTaskRewardResponse)(nil),
		(*Envelope_SendChatMessageRequest)(nil),
		(*Envelope_SendChatMessageResponse)(nil),
		(*Envelope_BroadCastChatMessagesResponse)(nil),
		(*Envelope_BroadCastRemoveChatMessageResponse)(nil),
		(*Envelope_BroadCastUpdateChatStateResponse)(nil),
		(*Envelope_PingRequest)(nil),
		(*Envelope_PingResponse)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_message_body_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   124,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_message_body_proto_goTypes,
		DependencyIndexes: file_message_body_proto_depIdxs,
		MessageInfos:      file_message_body_proto_msgTypes,
	}.Build()
	File_message_body_proto = out.File
	file_message_body_proto_rawDesc = nil
	file_message_body_proto_goTypes = nil
	file_message_body_proto_depIdxs = nil
}
