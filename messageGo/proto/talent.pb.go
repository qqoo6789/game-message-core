// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.1
// source: talent.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 天赋类型
type TalentType int32

const (
	TalentType_TalentTypeUnknow TalentType = 0
	TalentType_Farming          TalentType = 1
	TalentType_Battle           TalentType = 2
)

// Enum value maps for TalentType.
var (
	TalentType_name = map[int32]string{
		0: "TalentTypeUnknow",
		1: "Farming",
		2: "Battle",
	}
	TalentType_value = map[string]int32{
		"TalentTypeUnknow": 0,
		"Farming":          1,
		"Battle":           2,
	}
)

func (x TalentType) Enum() *TalentType {
	p := new(TalentType)
	*p = x
	return p
}

func (x TalentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TalentType) Descriptor() protoreflect.EnumDescriptor {
	return file_talent_proto_enumTypes[0].Descriptor()
}

func (TalentType) Type() protoreflect.EnumType {
	return &file_talent_proto_enumTypes[0]
}

func (x TalentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TalentType.Descriptor instead.
func (TalentType) EnumDescriptor() ([]byte, []int) {
	return file_talent_proto_rawDescGZIP(), []int{0}
}

// 天赋模式
type TalentModeType int32

const (
	//获得主动技能
	TalentModeType_Active TalentModeType = 0
	// 获得被动技能
	TalentModeType_Passive TalentModeType = 1
	// 获得合成配方
	TalentModeType_Recipes TalentModeType = 2
)

// Enum value maps for TalentModeType.
var (
	TalentModeType_name = map[int32]string{
		0: "Active",
		1: "Passive",
		2: "Recipes",
	}
	TalentModeType_value = map[string]int32{
		"Active":  0,
		"Passive": 1,
		"Recipes": 2,
	}
)

func (x TalentModeType) Enum() *TalentModeType {
	p := new(TalentModeType)
	*p = x
	return p
}

func (x TalentModeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TalentModeType) Descriptor() protoreflect.EnumDescriptor {
	return file_talent_proto_enumTypes[1].Descriptor()
}

func (TalentModeType) Type() protoreflect.EnumType {
	return &file_talent_proto_enumTypes[1]
}

func (x TalentModeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TalentModeType.Descriptor instead.
func (TalentModeType) EnumDescriptor() ([]byte, []int) {
	return file_talent_proto_rawDescGZIP(), []int{1}
}

type TalentExp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type TalentType `protobuf:"varint,1,opt,name=type,proto3,enum=gameMessageCore.TalentType" json:"type,omitempty"`
	// 真实可用exp
	CurExp int32 `protobuf:"varint,2,opt,name=curExp,proto3" json:"curExp,omitempty"`
	// 总经验
	TotalExp int32 `protobuf:"varint,3,opt,name=totalExp,proto3" json:"totalExp,omitempty"`
}

func (x *TalentExp) Reset() {
	*x = TalentExp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talent_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalentExp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalentExp) ProtoMessage() {}

func (x *TalentExp) ProtoReflect() protoreflect.Message {
	mi := &file_talent_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalentExp.ProtoReflect.Descriptor instead.
func (*TalentExp) Descriptor() ([]byte, []int) {
	return file_talent_proto_rawDescGZIP(), []int{0}
}

func (x *TalentExp) GetType() TalentType {
	if x != nil {
		return x.Type
	}
	return TalentType_TalentTypeUnknow
}

func (x *TalentExp) GetCurExp() int32 {
	if x != nil {
		return x.CurExp
	}
	return 0
}

func (x *TalentExp) GetTotalExp() int32 {
	if x != nil {
		return x.TotalExp
	}
	return 0
}

type TalentLevel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  TalentType `protobuf:"varint,1,opt,name=type,proto3,enum=gameMessageCore.TalentType" json:"type,omitempty"`
	Level int32      `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *TalentLevel) Reset() {
	*x = TalentLevel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talent_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalentLevel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalentLevel) ProtoMessage() {}

func (x *TalentLevel) ProtoReflect() protoreflect.Message {
	mi := &file_talent_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalentLevel.ProtoReflect.Descriptor instead.
func (*TalentLevel) Descriptor() ([]byte, []int) {
	return file_talent_proto_rawDescGZIP(), []int{1}
}

func (x *TalentLevel) GetType() TalentType {
	if x != nil {
		return x.Type
	}
	return TalentType_TalentTypeUnknow
}

func (x *TalentLevel) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type TalentNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NodeId int32 `protobuf:"varint,1,opt,name=nodeId,proto3" json:"nodeId,omitempty"`
	Level  int32 `protobuf:"varint,2,opt,name=level,proto3" json:"level,omitempty"`
}

func (x *TalentNode) Reset() {
	*x = TalentNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talent_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalentNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalentNode) ProtoMessage() {}

func (x *TalentNode) ProtoReflect() protoreflect.Message {
	mi := &file_talent_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalentNode.ProtoReflect.Descriptor instead.
func (*TalentNode) Descriptor() ([]byte, []int) {
	return file_talent_proto_rawDescGZIP(), []int{2}
}

func (x *TalentNode) GetNodeId() int32 {
	if x != nil {
		return x.NodeId
	}
	return 0
}

func (x *TalentNode) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

type TalentTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        TalentType    `protobuf:"varint,1,opt,name=type,proto3,enum=gameMessageCore.TalentType" json:"type,omitempty"`
	UnlockNodes []*TalentNode `protobuf:"bytes,2,rep,name=unlockNodes,proto3" json:"unlockNodes,omitempty"`
}

func (x *TalentTree) Reset() {
	*x = TalentTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talent_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalentTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalentTree) ProtoMessage() {}

func (x *TalentTree) ProtoReflect() protoreflect.Message {
	mi := &file_talent_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalentTree.ProtoReflect.Descriptor instead.
func (*TalentTree) Descriptor() ([]byte, []int) {
	return file_talent_proto_rawDescGZIP(), []int{3}
}

func (x *TalentTree) GetType() TalentType {
	if x != nil {
		return x.Type
	}
	return TalentType_TalentTypeUnknow
}

func (x *TalentTree) GetUnlockNodes() []*TalentNode {
	if x != nil {
		return x.UnlockNodes
	}
	return nil
}

type TalentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExpData   []*TalentExp   `protobuf:"bytes,1,rep,name=expData,proto3" json:"expData,omitempty"`
	LevelData []*TalentLevel `protobuf:"bytes,2,rep,name=levelData,proto3" json:"levelData,omitempty"`
	Tree      []*TalentTree  `protobuf:"bytes,3,rep,name=tree,proto3" json:"tree,omitempty"`
}

func (x *TalentData) Reset() {
	*x = TalentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_talent_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TalentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TalentData) ProtoMessage() {}

func (x *TalentData) ProtoReflect() protoreflect.Message {
	mi := &file_talent_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TalentData.ProtoReflect.Descriptor instead.
func (*TalentData) Descriptor() ([]byte, []int) {
	return file_talent_proto_rawDescGZIP(), []int{4}
}

func (x *TalentData) GetExpData() []*TalentExp {
	if x != nil {
		return x.ExpData
	}
	return nil
}

func (x *TalentData) GetLevelData() []*TalentLevel {
	if x != nil {
		return x.LevelData
	}
	return nil
}

func (x *TalentData) GetTree() []*TalentTree {
	if x != nil {
		return x.Tree
	}
	return nil
}

var File_talent_proto protoreflect.FileDescriptor

var file_talent_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x74, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0f,
	0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x22,
	0x70, 0x0a, 0x09, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x12, 0x2f, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x6c,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x63, 0x75, 0x72, 0x45, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63,
	0x75, 0x72, 0x45, 0x78, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78,
	0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x45, 0x78,
	0x70, 0x22, 0x54, 0x0a, 0x0b, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b,
	0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65,
	0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x22, 0x3a, 0x0a, 0x0a, 0x54, 0x61, 0x6c, 0x65, 0x6e,
	0x74, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x6f, 0x64, 0x65, 0x49, 0x64, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x22, 0x7c, 0x0a, 0x0a, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72,
	0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x0b, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x6f, 0x64, 0x65,
	0x73, 0x22, 0xaf, 0x01, 0x0a, 0x0a, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x34, 0x0a, 0x07, 0x65, 0x78, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x45, 0x78, 0x70, 0x52, 0x07, 0x65,
	0x78, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3a, 0x0a, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x44,
	0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x61, 0x6d, 0x65,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65,
	0x6e, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x09, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x72, 0x65, 0x65, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1b, 0x2e, 0x67, 0x61, 0x6d, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x43, 0x6f,
	0x72, 0x65, 0x2e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x04, 0x74,
	0x72, 0x65, 0x65, 0x2a, 0x3b, 0x0a, 0x0a, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x55,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x46, 0x61, 0x72, 0x6d, 0x69,
	0x6e, 0x67, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x61, 0x74, 0x74, 0x6c, 0x65, 0x10, 0x02,
	0x2a, 0x36, 0x0a, 0x0e, 0x54, 0x61, 0x6c, 0x65, 0x6e, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x76, 0x65, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x50, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x52,
	0x65, 0x63, 0x69, 0x70, 0x65, 0x73, 0x10, 0x02, 0x42, 0x13, 0x5a, 0x11, 0x2e, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x47, 0x6f, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_talent_proto_rawDescOnce sync.Once
	file_talent_proto_rawDescData = file_talent_proto_rawDesc
)

func file_talent_proto_rawDescGZIP() []byte {
	file_talent_proto_rawDescOnce.Do(func() {
		file_talent_proto_rawDescData = protoimpl.X.CompressGZIP(file_talent_proto_rawDescData)
	})
	return file_talent_proto_rawDescData
}

var file_talent_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_talent_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_talent_proto_goTypes = []interface{}{
	(TalentType)(0),     // 0: gameMessageCore.TalentType
	(TalentModeType)(0), // 1: gameMessageCore.TalentModeType
	(*TalentExp)(nil),   // 2: gameMessageCore.TalentExp
	(*TalentLevel)(nil), // 3: gameMessageCore.TalentLevel
	(*TalentNode)(nil),  // 4: gameMessageCore.TalentNode
	(*TalentTree)(nil),  // 5: gameMessageCore.TalentTree
	(*TalentData)(nil),  // 6: gameMessageCore.TalentData
}
var file_talent_proto_depIdxs = []int32{
	0, // 0: gameMessageCore.TalentExp.type:type_name -> gameMessageCore.TalentType
	0, // 1: gameMessageCore.TalentLevel.type:type_name -> gameMessageCore.TalentType
	0, // 2: gameMessageCore.TalentTree.type:type_name -> gameMessageCore.TalentType
	4, // 3: gameMessageCore.TalentTree.unlockNodes:type_name -> gameMessageCore.TalentNode
	2, // 4: gameMessageCore.TalentData.expData:type_name -> gameMessageCore.TalentExp
	3, // 5: gameMessageCore.TalentData.levelData:type_name -> gameMessageCore.TalentLevel
	5, // 6: gameMessageCore.TalentData.tree:type_name -> gameMessageCore.TalentTree
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_talent_proto_init() }
func file_talent_proto_init() {
	if File_talent_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_talent_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalentExp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talent_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalentLevel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talent_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalentNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talent_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalentTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_talent_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TalentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_talent_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_talent_proto_goTypes,
		DependencyIndexes: file_talent_proto_depIdxs,
		EnumInfos:         file_talent_proto_enumTypes,
		MessageInfos:      file_talent_proto_msgTypes,
	}.Build()
	File_talent_proto = out.File
	file_talent_proto_rawDesc = nil
	file_talent_proto_goTypes = nil
	file_talent_proto_depIdxs = nil
}
