syntax = "proto3";
package gameMessageCore;
option go_package = "./messageGo/proto";

import "vector.proto";
import "entityTypeDefine.proto";
import "entityProfile.proto";
import "player.proto";
import "item.proto";
import "home.proto";


/// ************************* entity data ***************************************************


message EntityId {
  EntityType  type = 1;
  int64       id = 2;
}

message EntityLocation {
  // 对象所在地图 id
  int32    map_id = 1;
  // 坐标
  Vector3  loc = 2;
}

message EntityWithLocation {
  EntityId      type_id = 1; 

  oneof entity {
    Player        player = 10;
    Monster       monster = 11;
    NftBuild      build = 12;
    Npc           npc = 13;
    Resource      resource = 14;
  }
}

message DestructionElementData
{
  //唯一ID
  int64 id = 1;
  //下次恢复的时间戳
  int64 restore_stamp = 2;
}

message Player {
  PlayerBaseData            base_data = 1;
  repeated AttributeData    profile = 2;  // 玩家属性
  repeated AvatarAttribute  avatars = 3;   // 玩家 avatar
  bool                      active = 4;  
  int32                     map_id = 5;
  Vector3                   position = 6; 
  Vector3                   dir = 7;
  //实体cd数据
  EntityCD              entity_cd = 8;      
  string                skillEffectData = 9; //技能特效数据
  bool                  is_battle = 10;     //战斗状态
  PlayerTempData        tempData=11;      //玩家需要同步的临时数据
}

message Monster {
  int32                   cid = 1; 
  int64                   id = 2;
  bool                    active = 3;
  repeated AttributeData  profile = 4;
  Vector3                 position = 5;
  Vector3                 dir = 6;    // 方向（朝向）
  string                  skillEffectData = 7; //技能特效数据
  bool                    is_battle = 8;     //战斗状态
  int64                   owner_id = 9;       //战斗所属者
}

message Npc {
  int32                   cid = 1; 
  int64                   id = 2;
  bool                    active = 3;
  repeated AttributeData  profile = 4;
  Vector3                 position = 5;
  Vector3                 dir = 6;    // 方向（朝向）
}

// 建造物
message NftBuild {
  int64           id  = 1; 
  int32           cid = 2;
  string          fromNft = 3;
  int64           owner = 4;
  repeated int32  landIds = 5;      
  Vector3         position = 6;
  Vector3         dir = 7;  
  // 电量过期时间 单位秒
  int32           electricEnd = 8;	
  // 产出开始时间点.
  int32           harvestStartAt = 9;
  // 可以收集的时间
  int32           harvestAt  = 10;
  // 可收获的物品数量统计(没电时转移到采集) 单位秒
  int32           harvestItemCount = 11;
  // 采集开始时间点
  int32           collectionStartAt  = 12;
  // 下次可采集(偷取)的时间戳 单位秒
  int32           collectionAt  = 13;
  // 可采集(偷取)物品数量统计
  int32           collectionItemCount = 14;
  // 电量不足时建造保护期开始时间
  int32           landPlacementPowerZeroCooldownStartAt = 15;
  // 电量不足时建造保护期
  int32           landPlacementPowerZeroCooldownAt = 16;
}

message Resource {
  bool          active = 1;
  Vector3       position = 2;
  Vector3       dir = 3;    // 方向（朝向）
  ResourcePointInfo pointInfo = 4;
  //采集进度信息 没有任何进度信息为null
  CollectResourceProgressResult progressInfo = 5;
}

message ResourcePointInfo
{
  //资源点ID 在家园中时代表土地id
  uint64        id = 1;
  int32         cid = 2; 
}

/// ************************* move info ***************************************************
// 玩家 怪物 移动位置信息
message EntityMoveStep {
  // 目标点
  EntityLocation location = 1;
  // 到达目标点的时间戳 ms
  int64 stamp = 2;
}
enum MovementType {
  MovementTypeUnknown = 0;
  // 行走
  MovementTypeWalk = 1;
  // 奔跑
  MovementTypeRun = 2;
  // 保持现在的外观移动
  MovementTypeIdle = 3;
}
message EntityMovement {
  EntityId type_id = 1;
  // 当前位置
  EntityMoveStep cur_location = 2;
  // 目标位置
  EntityMoveStep dest_location = 3;
  // 移动方式
  MovementType type = 5;
  // 实体朝向(交互数据 = 实际数据 * 1000)
  Vector3 Dir = 6;
}

message EntityCD {
  repeated EntitySkillCD skill_cd_list = 1; //技能cd列表
  repeated EntityExtendCD extend_cd_list = 2; //扩展cd列表
}

message EntitySkillCD {
  int32 skill_id = 1; //技能cd
  int64 time = 2;//到期时间
}

message EntityExtendCD {
  int32 type = 1; //扩展类型
  int64 time = 2; //到期时间
}

//玩家需要同步的临时数据
message PlayerTempData{
  string equipFoodItem=1;      //手持食物
}