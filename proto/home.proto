syntax = "proto3";
package gameMessageCore;
option go_package = "./messageGo/proto";

import "item.proto";
import "vector.proto";


enum CollectResourceType
{
    CollectResourceTypeUnknown = 0;
    // 土壤作物
    CollectResourceTypeSoil = 1 ;
    // 采集资源
    HomeResource = 2;
    // 动物食盆
    AnimalBowl = 4;
    // 动物
    Animal = 8;
}

enum AnimalSpecialActionType
{
  AnimalSpecialActionTypeUnknown = 0;
  // 触摸死亡动物
  AnimalSpecialActionTypeTouchDeath = 1;
}

message ProxySoilData
{
    uint64 id = 1;
    int32 soilStatus = 2;
    int64 statusStartStamp = 3;
    int32 fertile = 4;
    ProxySeedData seedData = 5;
}

message ProxySeedData
{
    int32 growingStage = 1;
    int32 seedCid = 2;
    bool sowingValid = 3;
    int32 manureCid = 4;
    bool manureValid = 5;
    int32 extraWateringNum = 6;
}

message CollectResourceBaseInfo{
  uint64 id = 1;
  CollectResourceType type = 2;
}

//使用采集技能的信息
message UseCollectResourceSkillInfo{
  repeated CollectResourceBaseInfo targets=1;
  //消耗道具的cid 比如种子 肥料
  int32 costItemCid = 2;
}

//土地进度信息
message HomeSoilProgressInfo{
  uint64 id = 1;
  CollectResourceProgressResult progressInfo = 2;
}

//家园某个采集资源操作结果
message CollectResourceOperateResult{
  CollectResourceBaseInfo targetInfo = 1;
  //修改进度结果 不影响操作执行 仅仅表示进度的变化
  CollectResourceProgressResult progressResult = 2;
  //动作执行结果
  CollectResourceExecuteResult executeResult = 3;
}

message CollectResourceProgressResult
{
    //最新总进度值 适用于分段式的进度
    int32 totalProgress = 1;
    //进度充满时的时间戳 适用于浇水连续式的进度
    int64 progressFullStamp = 2;
    //进度归属玩家id
    int64 progressOwnerId=3;
}

message CollectResourceExecuteResult
{
    repeated ItemBaseInfo dropList = 1;
    oneof actionData
    {
      //道具有效  在播种和施肥时候专精不够时候 会返回false
      bool itemValid = 2;
      //额外浇水次数
      int32 ExtraWateringNum = 3;
      //土地肥沃度
      int32 soilFertile = 4;
      //动物开心值
      int32 animalHappyValue = 5;
    }
}

message ProxyAnimalData
{
  uint64 animalId = 1;
  float hungerProgress  = 2;
  float harvestProgress = 3;
  bool isComforted = 4;
  bool isDead = 5;
  ProxyProductData productData = 6;
}

message ProxyAnimalBaseData
{
  uint64 animalId = 1;
  string name = 2;
  int32 cid = 3;
  int32 favorability = 4;
  int64 createMs = 5;
  int64 updateMs = 6;
}

message ProxyProductData
{
  int64 productId = 1;
  int32 itemCid =2;
  int32 itemNum = 3;
  int32 quality = 4;
  Vector3 position = 5;
}

// 更新动物数据
message AnimalUpdateData
{
  uint64 animalId = 1;
  int32 hungerProgress  = 2;
}

// 更新动物食盆数据
message AnimalBowlUpdateData
{
  uint64 bowlId = 1;
  int32 foodCid = 2;
  int32 remainFoodCapacity = 3;
}